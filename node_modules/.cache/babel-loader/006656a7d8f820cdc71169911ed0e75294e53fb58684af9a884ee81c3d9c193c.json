{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\LivePresentationViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PresentationService from '../services/PresentationService';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { onSnapshot, doc, collection, getDocs, query, orderBy } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomCode() {\n  return Math.floor(10000 + Math.random() * 90000).toString();\n}\nconst LivePresentationViewer = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth();\n  const [presentationId, setPresentationId] = useState(null);\n  const [presentation, setPresentation] = useState(null);\n  const [slides, setSlides] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers'); // TODO: fetch from Firestore if needed\n  const [loadingAudienceMode, setLoadingAudienceMode] = useState(true);\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState('');\n  const [showPrompt, setShowPrompt] = useState(false);\n  useEffect(() => {\n    console.log('[LiveViewer] MOUNTED. courseId:', courseId);\n    const fetchLive = async () => {\n      const liveId = await PresentationService.getLivePresentation(courseId);\n      setPresentationId(liveId);\n      console.log('[LiveViewer] livePresentationId:', liveId);\n      if (liveId) {\n        // Real-time listener for presentation document\n        const presDocRef = doc(PresentationService.db || require('../firebase/config').db, 'courses', courseId, 'presentations', liveId);\n        const unsubPres = onSnapshot(presDocRef, snap => {\n          if (snap.exists()) {\n            const pres = {\n              id: snap.id,\n              ...snap.data()\n            };\n            setPresentation(pres);\n            setAudienceMode(pres.audienceMode || 'enrolledUsers');\n            setLoadingAudienceMode(false);\n            console.log('[LiveViewer] [onSnapshot] fetched presentation:', pres);\n          }\n        });\n        // Real-time listener for slides\n        const db = PresentationService.db || require('../firebase/config').db;\n        const slidesCol = collection(db, 'courses', courseId, 'presentations', liveId, 'slides');\n        const slidesQuery = query(slidesCol, orderBy('order', 'asc'));\n        const unsubSlides = onSnapshot(slidesQuery, snap => {\n          const slidesArr = [];\n          snap.forEach(doc => slidesArr.push({\n            id: doc.id,\n            ...doc.data()\n          }));\n          setSlides(slidesArr);\n          console.log('[LiveViewer] [onSnapshot] fetched slides:', slidesArr);\n        });\n        // Cleanup\n        return () => {\n          unsubPres();\n          unsubSlides();\n        };\n      } else {\n        setLoadingAudienceMode(false);\n      }\n    };\n    fetchLive();\n    // eslint-disable-next-line\n  }, [courseId]);\n  useEffect(() => {\n    if (loadingAudienceMode) return; // Don't redirect until loaded\n    if (audienceMode === 'enrolledUsers' && !currentUser) {\n      console.log('[LiveViewer] Not authenticated, redirecting to login for enrolledUsers mode');\n      navigate('/login', {\n        replace: true\n      });\n    }\n    if (audienceMode === 'anonymous' && !userId) {\n      setShowPrompt(true);\n      console.log('[LiveViewer] Anonymous mode, showing username prompt');\n    }\n  }, [audienceMode, currentUser, userId, navigate, loadingAudienceMode]);\n  const handleUsernameSubmit = e => {\n    e.preventDefault();\n    if (username.trim()) {\n      setUserId(username.trim() + '_' + getRandomCode());\n      setShowPrompt(false);\n    }\n  };\n  if (!presentationId) {\n    console.warn('[LiveViewer] No live presentationId, rendering fallback');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen text-xl text-gray-600\",\n      children: \"No live presentation is currently being delivered for this course.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 12\n    }, this);\n  }\n  if (audienceMode === 'anonymous' && showPrompt) {\n    console.log('[LiveViewer] Rendering username prompt UI');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUsernameSubmit,\n        className: \"bg-white p-8 rounded shadow-lg flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Enter a username to join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"border px-4 py-2 rounded mb-4 text-lg\",\n          placeholder: \"Your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 text-white px-6 py-2 rounded font-semibold\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\n  console.log('[LiveViewer] Rendering main viewer UI. presentation:', presentation, 'audienceMode:', audienceMode, 'userId:', userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center min-h-screen bg-gray-50 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-2\",\n      children: \"Live Presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-gray-500 text-sm\",\n      children: [\"Presentation ID: \", presentationId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 text-gray-500 text-sm\",\n      children: [\"You are: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded shadow p-8 w-full max-w-4xl flex flex-col items-center min-h-[300px]\",\n      children: slides.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 text-2xl\",\n        children: \"No slides found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : presentation && typeof presentation.currentSlideIndex === 'number' && slides[presentation.currentSlideIndex] ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: slides[presentation.currentSlideIndex].title || `Slide ${presentation.currentSlideIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: slides[presentation.currentSlideIndex].content || slides[presentation.currentSlideIndex].text || ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), slides[presentation.currentSlideIndex].imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slides[presentation.currentSlideIndex].imageUrl,\n          alt: \"Slide\",\n          className: \"max-w-full max-h-96 rounded shadow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 text-2xl\",\n        children: \"Slide will appear here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 text-gray-400\",\n      children: \"Polls and interactions will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n_s(LivePresentationViewer, \"iniwOD8WlXlmEH81fRQLHJeoTpI=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = LivePresentationViewer;\nexport default LivePresentationViewer;\nvar _c;\n$RefreshReg$(_c, \"LivePresentationViewer\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PresentationService","useAuth","useNavigate","onSnapshot","doc","collection","getDocs","query","orderBy","jsxDEV","_jsxDEV","getRandomCode","Math","floor","random","toString","LivePresentationViewer","_s","courseId","navigate","currentUser","presentationId","setPresentationId","presentation","setPresentation","slides","setSlides","currentSlide","setCurrentSlide","audienceMode","setAudienceMode","loadingAudienceMode","setLoadingAudienceMode","username","setUsername","userId","setUserId","showPrompt","setShowPrompt","console","log","fetchLive","liveId","getLivePresentation","presDocRef","db","require","unsubPres","snap","exists","pres","id","data","slidesCol","slidesQuery","unsubSlides","slidesArr","forEach","push","replace","handleUsernameSubmit","e","preventDefault","trim","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","length","currentSlideIndex","title","content","text","imageUrl","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/LivePresentationViewer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PresentationService from '../services/PresentationService';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { onSnapshot, doc, collection, getDocs, query, orderBy } from 'firebase/firestore';\r\n\r\nfunction getRandomCode() {\r\n  return Math.floor(10000 + Math.random() * 90000).toString();\r\n}\r\n\r\nconst LivePresentationViewer = () => {\r\n  const { courseId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  const [presentationId, setPresentationId] = useState(null);\r\n  const [presentation, setPresentation] = useState(null);\r\n  const [slides, setSlides] = useState([]);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers'); // TODO: fetch from Firestore if needed\r\n  const [loadingAudienceMode, setLoadingAudienceMode] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log('[LiveViewer] MOUNTED. courseId:', courseId);\r\n    const fetchLive = async () => {\r\n      const liveId = await PresentationService.getLivePresentation(courseId);\r\n      setPresentationId(liveId);\r\n      console.log('[LiveViewer] livePresentationId:', liveId);\r\n      if (liveId) {\r\n        // Real-time listener for presentation document\r\n        const presDocRef = doc(PresentationService.db || require('../firebase/config').db, 'courses', courseId, 'presentations', liveId);\r\n        const unsubPres = onSnapshot(presDocRef, (snap) => {\r\n          if (snap.exists()) {\r\n            const pres = { id: snap.id, ...snap.data() };\r\n            setPresentation(pres);\r\n            setAudienceMode(pres.audienceMode || 'enrolledUsers');\r\n            setLoadingAudienceMode(false);\r\n            console.log('[LiveViewer] [onSnapshot] fetched presentation:', pres);\r\n          }\r\n        });\r\n        // Real-time listener for slides\r\n        const db = PresentationService.db || require('../firebase/config').db;\r\n        const slidesCol = collection(db, 'courses', courseId, 'presentations', liveId, 'slides');\r\n        const slidesQuery = query(slidesCol, orderBy('order', 'asc'));\r\n        const unsubSlides = onSnapshot(slidesQuery, (snap) => {\r\n          const slidesArr = [];\r\n          snap.forEach(doc => slidesArr.push({ id: doc.id, ...doc.data() }));\r\n          setSlides(slidesArr);\r\n          console.log('[LiveViewer] [onSnapshot] fetched slides:', slidesArr);\r\n        });\r\n        // Cleanup\r\n        return () => {\r\n          unsubPres();\r\n          unsubSlides();\r\n        };\r\n      } else {\r\n        setLoadingAudienceMode(false);\r\n      }\r\n    };\r\n    fetchLive();\r\n    // eslint-disable-next-line\r\n  }, [courseId]);\r\n\r\n  useEffect(() => {\r\n    if (loadingAudienceMode) return; // Don't redirect until loaded\r\n    if (audienceMode === 'enrolledUsers' && !currentUser) {\r\n      console.log('[LiveViewer] Not authenticated, redirecting to login for enrolledUsers mode');\r\n      navigate('/login', { replace: true });\r\n    }\r\n    if (audienceMode === 'anonymous' && !userId) {\r\n      setShowPrompt(true);\r\n      console.log('[LiveViewer] Anonymous mode, showing username prompt');\r\n    }\r\n  }, [audienceMode, currentUser, userId, navigate, loadingAudienceMode]);\r\n\r\n  const handleUsernameSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim()) {\r\n      setUserId(username.trim() + '_' + getRandomCode());\r\n      setShowPrompt(false);\r\n    }\r\n  };\r\n\r\n  if (!presentationId) {\r\n    console.warn('[LiveViewer] No live presentationId, rendering fallback');\r\n    return <div className=\"flex items-center justify-center min-h-screen text-xl text-gray-600\">No live presentation is currently being delivered for this course.</div>;\r\n  }\r\n\r\n  if (audienceMode === 'anonymous' && showPrompt) {\r\n    console.log('[LiveViewer] Rendering username prompt UI');\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\r\n        <form onSubmit={handleUsernameSubmit} className=\"bg-white p-8 rounded shadow-lg flex flex-col items-center\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Enter a username to join</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n            className=\"border px-4 py-2 rounded mb-4 text-lg\"\r\n            placeholder=\"Your name\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"bg-blue-600 text-white px-6 py-2 rounded font-semibold\">Join</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\r\n  console.log('[LiveViewer] Rendering main viewer UI. presentation:', presentation, 'audienceMode:', audienceMode, 'userId:', userId);\r\n  return (\r\n    <div className=\"flex flex-col items-center min-h-screen bg-gray-50 py-8\">\r\n      <h2 className=\"text-2xl font-bold mb-2\">Live Presentation</h2>\r\n      <div className=\"mb-2 text-gray-500 text-sm\">Presentation ID: {presentationId}</div>\r\n      <div className=\"mb-4 text-gray-500 text-sm\">You are: {userId}</div>\r\n      <div className=\"bg-white rounded shadow p-8 w-full max-w-4xl flex flex-col items-center min-h-[300px]\">\r\n        {slides.length === 0 ? (\r\n          <div className=\"text-gray-400 text-2xl\">No slides found.</div>\r\n        ) : (\r\n          presentation && typeof presentation.currentSlideIndex === 'number' && slides[presentation.currentSlideIndex] ? (\r\n            <div className=\"w-full h-full flex flex-col items-center\">\r\n              {/* Render slide content here. Adjust as needed for your slide structure */}\r\n              <div className=\"text-xl font-semibold mb-2\">{slides[presentation.currentSlideIndex].title || `Slide ${presentation.currentSlideIndex + 1}`}</div>\r\n              <div className=\"mb-4\">{slides[presentation.currentSlideIndex].content || slides[presentation.currentSlideIndex].text || ''}</div>\r\n              {slides[presentation.currentSlideIndex].imageUrl && (\r\n                <img src={slides[presentation.currentSlideIndex].imageUrl} alt=\"Slide\" className=\"max-w-full max-h-96 rounded shadow\" />\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-gray-400 text-2xl\">Slide will appear here</div>\r\n          )\r\n        )}\r\n      </div>\r\n      <div className=\"mt-8 text-gray-400\">Polls and interactions will appear here.</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LivePresentationViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}