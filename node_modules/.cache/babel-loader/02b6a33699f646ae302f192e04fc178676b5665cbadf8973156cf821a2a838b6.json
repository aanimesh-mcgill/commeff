{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\PresentationEditorV3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { doc, getDoc, updateDoc, setDoc } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { PresentationToolbar } from './PresentationToolbar';\nimport { SlidesSidebar } from './SlidesSidebar';\nimport { SlideCanvas } from './SlideCanvas';\nimport { ToastContainer } from '../components/Toast';\n\n// Types (replace with import from types/presentation if available)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPresentation = {\n  id: 'presentation-1',\n  title: 'Untitled Presentation',\n  slides: [{\n    id: 'slide-1',\n    title: 'Welcome Slide',\n    elements: []\n  }],\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  currentSlideIndex: 0\n};\nexport default function PresentationEditorV3({\n  presentationId = 'demo-presentation'\n}) {\n  _s();\n  const [presentation, setPresentation] = useState(initialPresentation);\n  const [editorState, setEditorState] = useState({\n    selectedElement: null,\n    tool: 'select',\n    isPresenting: false,\n    zoom: 100\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [toasts, setToasts] = useState([]);\n\n  // Toast management\n  const addToast = useCallback((message, type = 'info', duration = 3000) => {\n    const id = Date.now().toString();\n    setToasts(prev => [...prev, {\n      id,\n      message,\n      type,\n      duration\n    }]);\n  }, []);\n  const removeToast = useCallback(id => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Load presentation from Firestore\n  useEffect(() => {\n    const loadPresentation = async () => {\n      try {\n        console.log('Loading presentation:', presentationId);\n        const docRef = doc(db, 'presentations', presentationId);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          var _data$createdAt, _data$updatedAt;\n          const data = docSnap.data();\n          console.log('Loaded presentation data:', data);\n          setPresentation({\n            ...data,\n            createdAt: ((_data$createdAt = data.createdAt) === null || _data$createdAt === void 0 ? void 0 : _data$createdAt.toDate()) || new Date(),\n            updatedAt: ((_data$updatedAt = data.updatedAt) === null || _data$updatedAt === void 0 ? void 0 : _data$updatedAt.toDate()) || new Date()\n          });\n        } else {\n          console.log('No presentation found, creating new one');\n          // Create new presentation\n          await setDoc(docRef, {\n            ...initialPresentation,\n            id: presentationId,\n            createdAt: new Date(),\n            updatedAt: new Date()\n          });\n          setPresentation({\n            ...initialPresentation,\n            id: presentationId\n          });\n        }\n      } catch (error) {\n        console.error('Error loading presentation:', error);\n        addToast('Failed to load presentation', 'error');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadPresentation();\n  }, [presentationId, addToast]);\n\n  // Auto-save with debouncing\n  const saveTimeoutRef = React.useRef(null);\n  const savePresentation = useCallback(async presentationData => {\n    try {\n      console.log('Saving presentation:', presentationData);\n      setIsSaving(true);\n      const docRef = doc(db, 'presentations', presentationId);\n      await updateDoc(docRef, {\n        ...presentationData,\n        updatedAt: new Date()\n      });\n      console.log('Presentation saved successfully');\n      addToast('Presentation saved', 'success', 2000);\n    } catch (error) {\n      console.error('Error saving presentation:', error);\n      addToast('Failed to save presentation', 'error');\n    } finally {\n      setIsSaving(false);\n    }\n  }, [presentationId, addToast]);\n\n  // Debounced auto-save\n  useEffect(() => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    if (!isLoading) {\n      saveTimeoutRef.current = setTimeout(() => {\n        savePresentation(presentation);\n      }, 2000); // 2 second delay\n    }\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, [presentation, savePresentation, isLoading]);\n\n  // Manual save handler\n  const handleSave = useCallback(async () => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    await savePresentation(presentation);\n  }, [presentation, savePresentation]);\n\n  // Slide management handlers\n  const handleAddSlide = useCallback(() => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: []\n    };\n    setPresentation(prev => ({\n      ...prev,\n      slides: [...prev.slides, newSlide],\n      currentSlideIndex: prev.slides.length\n    }));\n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n  const handleDuplicateSlide = useCallback(index => {\n    const slideToDuplicate = presentation.slides[index];\n    const newSlide = {\n      ...slideToDuplicate,\n      id: `slide-${Date.now()}`,\n      title: `${slideToDuplicate.title} (Copy)`\n    };\n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1\n    }));\n    addToast('Slide duplicated', 'success', 2000);\n  }, [presentation.slides, addToast]);\n  const handleDeleteSlide = useCallback(index => {\n    if (presentation.slides.length <= 1) {\n      addToast('Cannot delete the last slide', 'warning');\n      return;\n    }\n    const newSlides = presentation.slides.filter((_, i) => i !== index);\n    const newCurrentIndex = Math.min(presentation.currentSlideIndex, newSlides.length - 1);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: newCurrentIndex\n    }));\n    addToast('Slide deleted', 'success', 2000);\n  }, [presentation.slides, presentation.currentSlideIndex, addToast]);\n  const handleAddSlideAfter = useCallback(index => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: []\n    };\n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1\n    }));\n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  // Element management handlers\n  const handleElementSelect = useCallback(elementId => {\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: elementId\n    }));\n  }, []);\n  const handleElementUpdate = useCallback((elementId, updates) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      const elementIndex = currentSlide.elements.findIndex(el => el.id === elementId);\n      if (elementIndex !== -1) {\n        newSlides[prev.currentSlideIndex] = {\n          ...currentSlide,\n          elements: currentSlide.elements.map((el, index) => index === elementIndex ? {\n            ...el,\n            ...updates\n          } : el)\n        };\n      }\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, []);\n  const handleElementAdd = useCallback(elementData => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      ...elementData\n    };\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: [...currentSlide.elements, newElement]\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n\n    // Auto-select the new element\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: newElement.id\n    }));\n    addToast('Element added', 'success', 1500);\n  }, [addToast]);\n  const handleElementDelete = useCallback(elementId => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: currentSlide.elements.filter(el => el.id !== elementId)\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: null\n    }));\n    addToast('Element deleted', 'success', 1500);\n  }, [addToast]);\n\n  // Other handlers\n  const handleToolChange = useCallback(tool => {\n    setEditorState(prev => ({\n      ...prev,\n      tool\n    }));\n  }, []);\n  const handleTitleChange = useCallback(title => {\n    setPresentation(prev => ({\n      ...prev,\n      title\n    }));\n  }, []);\n  const handleSlideSelect = useCallback(index => {\n    setPresentation(prev => ({\n      ...prev,\n      currentSlideIndex: index\n    }));\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: null\n    }));\n  }, []);\n  const handlePresent = useCallback(() => {\n    setEditorState(prev => ({\n      ...prev,\n      isPresenting: true\n    }));\n    addToast('Starting presentation...', 'info');\n  }, [addToast]);\n\n  // Loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex items-center justify-center bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading presentation...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(PresentationToolbar, {\n      editorState: editorState,\n      onToolChange: handleToolChange,\n      onSave: handleSave,\n      onPresent: handlePresent,\n      onUndo: () => {} // TODO: Implement undo/redo\n      ,\n      onRedo: () => {},\n      presentationTitle: presentation.title,\n      onTitleChange: handleTitleChange,\n      isSaving: isSaving\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex\",\n      children: [/*#__PURE__*/_jsxDEV(SlidesSidebar, {\n        slides: presentation.slides,\n        currentSlideIndex: presentation.currentSlideIndex,\n        onSlideSelect: handleSlideSelect,\n        onAddSlide: handleAddSlide,\n        onDuplicateSlide: handleDuplicateSlide,\n        onDeleteSlide: handleDeleteSlide,\n        onAddSlideAfter: handleAddSlideAfter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlideCanvas, {\n        slide: presentation.slides[presentation.currentSlideIndex],\n        editorState: editorState,\n        onElementSelect: handleElementSelect,\n        onElementUpdate: handleElementUpdate,\n        onElementAdd: handleElementAdd,\n        onElementDelete: handleElementDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      toasts: toasts,\n      removeToast: removeToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n}\n_s(PresentationEditorV3, \"hY376/PIqiN3kfTM4o43SiGSoS4=\");\n_c = PresentationEditorV3;\nvar _c;\n$RefreshReg$(_c, \"PresentationEditorV3\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","doc","getDoc","updateDoc","setDoc","db","PresentationToolbar","SlidesSidebar","SlideCanvas","ToastContainer","jsxDEV","_jsxDEV","initialPresentation","id","title","slides","elements","createdAt","Date","updatedAt","currentSlideIndex","PresentationEditorV3","presentationId","_s","presentation","setPresentation","editorState","setEditorState","selectedElement","tool","isPresenting","zoom","isLoading","setIsLoading","isSaving","setIsSaving","toasts","setToasts","addToast","message","type","duration","now","toString","prev","removeToast","filter","toast","loadPresentation","console","log","docRef","docSnap","exists","_data$createdAt","_data$updatedAt","data","toDate","error","saveTimeoutRef","useRef","savePresentation","presentationData","current","clearTimeout","setTimeout","handleSave","handleAddSlide","newSlide","length","handleDuplicateSlide","index","slideToDuplicate","newSlides","splice","handleDeleteSlide","_","i","newCurrentIndex","Math","min","handleAddSlideAfter","handleElementSelect","elementId","handleElementUpdate","updates","currentSlide","elementIndex","findIndex","el","map","handleElementAdd","elementData","newElement","handleElementDelete","handleToolChange","handleTitleChange","handleSlideSelect","handlePresent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onToolChange","onSave","onPresent","onUndo","onRedo","presentationTitle","onTitleChange","onSlideSelect","onAddSlide","onDuplicateSlide","onDeleteSlide","onAddSlideAfter","slide","onElementSelect","onElementUpdate","onElementAdd","onElementDelete","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/PresentationEditorV3.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { doc, getDoc, updateDoc, setDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase/config';\r\nimport { PresentationToolbar } from './PresentationToolbar';\r\nimport { SlidesSidebar } from './SlidesSidebar';\r\nimport { SlideCanvas } from './SlideCanvas';\r\nimport { ToastContainer } from '../components/Toast';\r\n\r\n// Types (replace with import from types/presentation if available)\r\nconst initialPresentation = {\r\n  id: 'presentation-1',\r\n  title: 'Untitled Presentation',\r\n  slides: [\r\n    {\r\n      id: 'slide-1',\r\n      title: 'Welcome Slide',\r\n      elements: [],\r\n    },\r\n  ],\r\n  createdAt: new Date(),\r\n  updatedAt: new Date(),\r\n  currentSlideIndex: 0,\r\n};\r\n\r\nexport default function PresentationEditorV3({ presentationId = 'demo-presentation' }) {\r\n  const [presentation, setPresentation] = useState(initialPresentation);\r\n  const [editorState, setEditorState] = useState({\r\n    selectedElement: null,\r\n    tool: 'select',\r\n    isPresenting: false,\r\n    zoom: 100,\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [toasts, setToasts] = useState([]);\r\n\r\n  // Toast management\r\n  const addToast = useCallback((message, type = 'info', duration = 3000) => {\r\n    const id = Date.now().toString();\r\n    setToasts(prev => [...prev, { id, message, type, duration }]);\r\n  }, []);\r\n\r\n  const removeToast = useCallback((id) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  }, []);\r\n\r\n  // Load presentation from Firestore\r\n  useEffect(() => {\r\n    const loadPresentation = async () => {\r\n      try {\r\n        console.log('Loading presentation:', presentationId);\r\n        const docRef = doc(db, 'presentations', presentationId);\r\n        const docSnap = await getDoc(docRef);\r\n        \r\n        if (docSnap.exists()) {\r\n          const data = docSnap.data();\r\n          console.log('Loaded presentation data:', data);\r\n          setPresentation({\r\n            ...data,\r\n            createdAt: data.createdAt?.toDate() || new Date(),\r\n            updatedAt: data.updatedAt?.toDate() || new Date(),\r\n          });\r\n        } else {\r\n          console.log('No presentation found, creating new one');\r\n          // Create new presentation\r\n          await setDoc(docRef, {\r\n            ...initialPresentation,\r\n            id: presentationId,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          });\r\n          setPresentation({ ...initialPresentation, id: presentationId });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading presentation:', error);\r\n        addToast('Failed to load presentation', 'error');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadPresentation();\r\n  }, [presentationId, addToast]);\r\n\r\n  // Auto-save with debouncing\r\n  const saveTimeoutRef = React.useRef(null);\r\n  const savePresentation = useCallback(async (presentationData) => {\r\n    try {\r\n      console.log('Saving presentation:', presentationData);\r\n      setIsSaving(true);\r\n      \r\n      const docRef = doc(db, 'presentations', presentationId);\r\n      await updateDoc(docRef, {\r\n        ...presentationData,\r\n        updatedAt: new Date(),\r\n      });\r\n      \r\n      console.log('Presentation saved successfully');\r\n      addToast('Presentation saved', 'success', 2000);\r\n    } catch (error) {\r\n      console.error('Error saving presentation:', error);\r\n      addToast('Failed to save presentation', 'error');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  }, [presentationId, addToast]);\r\n\r\n  // Debounced auto-save\r\n  useEffect(() => {\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n    \r\n    if (!isLoading) {\r\n      saveTimeoutRef.current = setTimeout(() => {\r\n        savePresentation(presentation);\r\n      }, 2000); // 2 second delay\r\n    }\r\n\r\n    return () => {\r\n      if (saveTimeoutRef.current) {\r\n        clearTimeout(saveTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [presentation, savePresentation, isLoading]);\r\n\r\n  // Manual save handler\r\n  const handleSave = useCallback(async () => {\r\n    if (saveTimeoutRef.current) {\r\n      clearTimeout(saveTimeoutRef.current);\r\n    }\r\n    await savePresentation(presentation);\r\n  }, [presentation, savePresentation]);\r\n\r\n  // Slide management handlers\r\n  const handleAddSlide = useCallback(() => {\r\n    const newSlide = {\r\n      id: `slide-${Date.now()}`,\r\n      title: `Slide ${presentation.slides.length + 1}`,\r\n      elements: [],\r\n    };\r\n    \r\n    setPresentation(prev => ({\r\n      ...prev,\r\n      slides: [...prev.slides, newSlide],\r\n      currentSlideIndex: prev.slides.length,\r\n    }));\r\n    \r\n    addToast('New slide added', 'success', 2000);\r\n  }, [presentation.slides.length, addToast]);\r\n\r\n  const handleDuplicateSlide = useCallback((index) => {\r\n    const slideToDuplicate = presentation.slides[index];\r\n    const newSlide = {\r\n      ...slideToDuplicate,\r\n      id: `slide-${Date.now()}`,\r\n      title: `${slideToDuplicate.title} (Copy)`,\r\n    };\r\n    \r\n    const newSlides = [...presentation.slides];\r\n    newSlides.splice(index + 1, 0, newSlide);\r\n    \r\n    setPresentation(prev => ({\r\n      ...prev,\r\n      slides: newSlides,\r\n      currentSlideIndex: index + 1,\r\n    }));\r\n    \r\n    addToast('Slide duplicated', 'success', 2000);\r\n  }, [presentation.slides, addToast]);\r\n\r\n  const handleDeleteSlide = useCallback((index) => {\r\n    if (presentation.slides.length <= 1) {\r\n      addToast('Cannot delete the last slide', 'warning');\r\n      return;\r\n    }\r\n    \r\n    const newSlides = presentation.slides.filter((_, i) => i !== index);\r\n    const newCurrentIndex = Math.min(\r\n      presentation.currentSlideIndex,\r\n      newSlides.length - 1\r\n    );\r\n    \r\n    setPresentation(prev => ({\r\n      ...prev,\r\n      slides: newSlides,\r\n      currentSlideIndex: newCurrentIndex,\r\n    }));\r\n    \r\n    addToast('Slide deleted', 'success', 2000);\r\n  }, [presentation.slides, presentation.currentSlideIndex, addToast]);\r\n\r\n  const handleAddSlideAfter = useCallback((index) => {\r\n    const newSlide = {\r\n      id: `slide-${Date.now()}`,\r\n      title: `Slide ${presentation.slides.length + 1}`,\r\n      elements: [],\r\n    };\r\n    \r\n    const newSlides = [...presentation.slides];\r\n    newSlides.splice(index + 1, 0, newSlide);\r\n    \r\n    setPresentation(prev => ({\r\n      ...prev,\r\n      slides: newSlides,\r\n      currentSlideIndex: index + 1,\r\n    }));\r\n    \r\n    addToast('New slide added', 'success', 2000);\r\n  }, [presentation.slides.length, addToast]);\r\n\r\n  // Element management handlers\r\n  const handleElementSelect = useCallback((elementId) => {\r\n    setEditorState(prev => ({ ...prev, selectedElement: elementId }));\r\n  }, []);\r\n\r\n  const handleElementUpdate = useCallback((elementId, updates) => {\r\n    setPresentation(prev => {\r\n      const newSlides = [...prev.slides];\r\n      const currentSlide = newSlides[prev.currentSlideIndex];\r\n      const elementIndex = currentSlide.elements.findIndex(el => el.id === elementId);\r\n      \r\n      if (elementIndex !== -1) {\r\n        newSlides[prev.currentSlideIndex] = {\r\n          ...currentSlide,\r\n          elements: currentSlide.elements.map((el, index) =>\r\n            index === elementIndex ? { ...el, ...updates } : el\r\n          ),\r\n        };\r\n      }\r\n      \r\n      return { ...prev, slides: newSlides };\r\n    });\r\n  }, []);\r\n\r\n  const handleElementAdd = useCallback((elementData) => {\r\n    const newElement = {\r\n      id: `element-${Date.now()}`,\r\n      ...elementData,\r\n    };\r\n    \r\n    setPresentation(prev => {\r\n      const newSlides = [...prev.slides];\r\n      const currentSlide = newSlides[prev.currentSlideIndex];\r\n      \r\n      newSlides[prev.currentSlideIndex] = {\r\n        ...currentSlide,\r\n        elements: [...currentSlide.elements, newElement],\r\n      };\r\n      \r\n      return { ...prev, slides: newSlides };\r\n    });\r\n    \r\n    // Auto-select the new element\r\n    setEditorState(prev => ({ ...prev, selectedElement: newElement.id }));\r\n    addToast('Element added', 'success', 1500);\r\n  }, [addToast]);\r\n\r\n  const handleElementDelete = useCallback((elementId) => {\r\n    setPresentation(prev => {\r\n      const newSlides = [...prev.slides];\r\n      const currentSlide = newSlides[prev.currentSlideIndex];\r\n      \r\n      newSlides[prev.currentSlideIndex] = {\r\n        ...currentSlide,\r\n        elements: currentSlide.elements.filter(el => el.id !== elementId),\r\n      };\r\n      \r\n      return { ...prev, slides: newSlides };\r\n    });\r\n    \r\n    setEditorState(prev => ({ ...prev, selectedElement: null }));\r\n    addToast('Element deleted', 'success', 1500);\r\n  }, [addToast]);\r\n\r\n  // Other handlers\r\n  const handleToolChange = useCallback((tool) => {\r\n    setEditorState(prev => ({ ...prev, tool }));\r\n  }, []);\r\n\r\n  const handleTitleChange = useCallback((title) => {\r\n    setPresentation(prev => ({ ...prev, title }));\r\n  }, []);\r\n\r\n  const handleSlideSelect = useCallback((index) => {\r\n    setPresentation(prev => ({ ...prev, currentSlideIndex: index }));\r\n    setEditorState(prev => ({ ...prev, selectedElement: null }));\r\n  }, []);\r\n\r\n  const handlePresent = useCallback(() => {\r\n    setEditorState(prev => ({ ...prev, isPresenting: true }));\r\n    addToast('Starting presentation...', 'info');\r\n  }, [addToast]);\r\n\r\n  // Loading state\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"h-screen flex items-center justify-center bg-gray-100\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading presentation...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col\">\r\n      {/* Toolbar */}\r\n      <PresentationToolbar\r\n        editorState={editorState}\r\n        onToolChange={handleToolChange}\r\n        onSave={handleSave}\r\n        onPresent={handlePresent}\r\n        onUndo={() => {}} // TODO: Implement undo/redo\r\n        onRedo={() => {}}\r\n        presentationTitle={presentation.title}\r\n        onTitleChange={handleTitleChange}\r\n        isSaving={isSaving}\r\n      />\r\n      <div className=\"flex-1 flex\">\r\n        {/* Sidebar */}\r\n        <SlidesSidebar\r\n          slides={presentation.slides}\r\n          currentSlideIndex={presentation.currentSlideIndex}\r\n          onSlideSelect={handleSlideSelect}\r\n          onAddSlide={handleAddSlide}\r\n          onDuplicateSlide={handleDuplicateSlide}\r\n          onDeleteSlide={handleDeleteSlide}\r\n          onAddSlideAfter={handleAddSlideAfter}\r\n        />\r\n        {/* Canvas */}\r\n        <SlideCanvas\r\n          slide={presentation.slides[presentation.currentSlideIndex]}\r\n          editorState={editorState}\r\n          onElementSelect={handleElementSelect}\r\n          onElementUpdate={handleElementUpdate}\r\n          onElementAdd={handleElementAdd}\r\n          onElementDelete={handleElementDelete}\r\n        />\r\n      </div>\r\n      {/* Toast notifications */}\r\n      <ToastContainer toasts={toasts} removeToast={removeToast} />\r\n    </div>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}