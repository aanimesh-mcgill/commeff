{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\LivePresentationViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PresentationService from '../services/PresentationService';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { onSnapshot, doc, collection, getDocs, query, orderBy, addDoc, serverTimestamp, updateDoc, getDoc, where } from 'firebase/firestore';\nimport { MessageSquare, ThumbsUp } from 'lucide-react';\nimport { db } from '../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomCode() {\n  return Math.floor(10000 + Math.random() * 90000).toString();\n}\n\n// Utility to get or generate a stable anonId for anonymous users\nfunction getAnonId() {\n  let anonId = localStorage.getItem('anonId');\n  if (!anonId) {\n    anonId = 'anon_' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('anonId', anonId);\n  }\n  return anonId;\n}\nconst LivePresentationViewer = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth();\n  const isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n  const {\n    userProfile\n  } = require('../contexts/AuthContext').useAuth();\n  const [presentationId, setPresentationId] = useState(null);\n  const [presentation, setPresentation] = useState(null);\n  const [slides, setSlides] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers');\n  const [loadingAudienceMode, setLoadingAudienceMode] = useState(true);\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState('');\n  const [showPrompt, setShowPrompt] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [allStudentResponses, setAllStudentResponses] = useState([]); // New: all student responses\n  const [myStudentResponse, setMyStudentResponse] = useState(null); // New: current user's response\n\n  // DEBUG LOGGING for Firestore rule troubleshooting\n  useEffect(() => {\n    console.log('[DEBUG] Current user uid:', currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid);\n    if (userProfile) {\n      console.log('[DEBUG] userProfile.enrolledCourses:', userProfile.enrolledCourses);\n    } else {\n      console.log('[DEBUG] userProfile is null');\n    }\n    if (presentation) {\n      console.log('[DEBUG] Presentation doc:', {\n        id: presentation.id,\n        isLive: presentation.isLive,\n        archived: presentation.archived,\n        currentSlideIndex: presentation.currentSlideIndex\n      });\n    } else {\n      console.log('[DEBUG] Presentation doc is null');\n    }\n  }, [currentUser, userProfile, presentation]);\n  useEffect(() => {\n    console.log('[DEBUG] --- LivePresentationViewer Diagnostics ---');\n    console.log('[DEBUG] courseId:', courseId);\n    console.log('[DEBUG] presentationId:', presentationId);\n    console.log('[DEBUG] currentUser:', currentUser);\n    console.log('[DEBUG] userProfile:', userProfile);\n    if (userProfile) {\n      console.log('[DEBUG] userProfile.enrolledCourses:', userProfile.enrolledCourses);\n      if (Array.isArray(userProfile.enrolledCourses)) {\n        const enrolled = userProfile.enrolledCourses.includes(courseId);\n        console.log('[DEBUG] Firestore rule simulation: enrolledCourses.includes(courseId):', enrolled);\n        console.log('[DEBUG] CourseId in enrolledCourses array:', (userProfile.enrolledCourses || []).indexOf(courseId));\n      }\n    } else {\n      console.log('[DEBUG] userProfile is null');\n    }\n    if (presentation) {\n      console.log('[DEBUG] Presentation doc:', {\n        id: presentation.id,\n        isLive: presentation.isLive,\n        archived: presentation.archived,\n        currentSlideIndex: presentation.currentSlideIndex,\n        audienceMode: presentation.audienceMode,\n        title: presentation.title,\n        ownerId: presentation.ownerId\n      });\n    } else {\n      console.log('[DEBUG] Presentation doc is null');\n    }\n    console.log('[DEBUG] slides:', slides);\n    console.log('[DEBUG] slides.length:', slides.length);\n    if (slides.length > 0) {\n      console.log('[DEBUG] Slide 0:', slides[0]);\n    }\n    console.log('[DEBUG] --- End Diagnostics ---');\n  }, [courseId, presentationId, currentUser, userProfile, presentation, slides]);\n\n  // Add comprehensive Firestore document logging\n  useEffect(() => {\n    const logFirestoreDocuments = async () => {\n      try {\n        console.log('[DEBUG] === FIRESTORE DOCUMENT ANALYSIS ===');\n\n        // 1. Log Course Document\n        console.log('[DEBUG] 1. Checking Course Document: courses/' + courseId);\n        const courseDoc = doc(db, 'courses', courseId);\n        console.log('[DEBUG][Firestore Read] getDoc:', `courses/${courseId}`);\n        const courseSnap = await getDoc(courseDoc).catch(err => {\n          console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `courses/${courseId}`, err);\n          throw err;\n        });\n        if (courseSnap.exists()) {\n          const courseData = courseSnap.data();\n          console.log('[DEBUG] Course Document Fields:', {\n            id: courseSnap.id,\n            name: courseData.name,\n            instructorId: courseData.instructorId,\n            isActive: courseData.isActive,\n            livePresentation: courseData.livePresentation,\n            createdAt: courseData.createdAt,\n            updatedAt: courseData.updatedAt\n          });\n        } else {\n          console.log('[DEBUG] Course Document does not exist!');\n        }\n\n        // 2. Log Presentation Document (if we have presentationId)\n        if (presentationId) {\n          console.log('[DEBUG] 2. Checking Presentation Document: courses/' + courseId + '/presentations/' + presentationId);\n          const presentationDoc = doc(db, 'courses', courseId, 'presentations', presentationId);\n          console.log('[DEBUG][Firestore Read] getDoc:', `courses/${courseId}/presentations/${presentationId}`);\n          const presentationSnap = await getDoc(presentationDoc).catch(err => {\n            console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `courses/${courseId}/presentations/${presentationId}`, err);\n            throw err;\n          });\n          if (presentationSnap.exists()) {\n            const presentationData = presentationSnap.data();\n            console.log('[DEBUG] Presentation Document Fields:', {\n              id: presentationSnap.id,\n              title: presentationData.title,\n              isLive: presentationData.isLive,\n              archived: presentationData.archived,\n              currentSlideIndex: presentationData.currentSlideIndex,\n              audienceMode: presentationData.audienceMode,\n              ownerId: presentationData.ownerId,\n              createdAt: presentationData.createdAt,\n              updatedAt: presentationData.updatedAt\n            });\n          } else {\n            console.log('[DEBUG] Presentation Document does not exist!');\n          }\n        } else {\n          console.log('[DEBUG] 2. No presentationId available to check presentation document');\n        }\n\n        // 3. Log User Document\n        if (currentUser) {\n          console.log('[DEBUG] 3. Checking User Document: users/' + currentUser.uid);\n          const userDoc = doc(db, 'users', currentUser.uid);\n          console.log('[DEBUG][Firestore Read] getDoc:', `users/${currentUser.uid}`);\n          const userSnap = await getDoc(userDoc).catch(err => {\n            console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `users/${currentUser.uid}`, err);\n            throw err;\n          });\n          if (userSnap.exists()) {\n            const userData = userSnap.data();\n            console.log('[DEBUG] User Document Fields:', {\n              id: userSnap.id,\n              displayName: userData.displayName,\n              email: userData.email,\n              role: userData.role,\n              enrolledCourses: userData.enrolledCourses,\n              createdAt: userData.createdAt,\n              updatedAt: userData.updatedAt\n            });\n          } else {\n            console.log('[DEBUG] User Document does not exist!');\n          }\n        } else {\n          console.log('[DEBUG] 3. No currentUser available to check user document');\n        }\n\n        // 4. Firestore Rule Analysis\n        console.log('[DEBUG] 4. Firestore Rule Analysis:');\n        console.log('[DEBUG] - Rule for presentations requires:');\n        console.log('[DEBUG]   * request.auth != null: true');\n        console.log('[DEBUG]   * enrolledCourses.hasAny([courseId]):', userProfile && Array.isArray(userProfile.enrolledCourses) ? userProfile.enrolledCourses.includes(courseId) : 'unknown');\n        console.log('[DEBUG] === END FIRESTORE DOCUMENT ANALYSIS ===');\n      } catch (error) {\n        console.error('[DEBUG] Error in Firestore document analysis:', error);\n      }\n    };\n    if (courseId) {\n      logFirestoreDocuments();\n    }\n  }, [courseId, presentationId, currentUser, userProfile, presentation]);\n\n  // Add fallback mechanism for when presentation document cannot be read\n  useEffect(() => {\n    if (presentationId && slides.length > 0 && !presentation) {\n      console.log('[LiveViewer] Creating fallback presentation object since presentation doc cannot be read');\n      const fallbackPresentation = {\n        id: presentationId,\n        title: 'Live Presentation',\n        isLive: true,\n        archived: false,\n        currentSlideIndex: 0,\n        audienceMode: 'enrolledUsers'\n      };\n      setPresentation(fallbackPresentation);\n    }\n  }, [presentationId, slides, presentation]);\n\n  // Fetch live presentation and slides\n  useEffect(() => {\n    const fetchLive = async () => {\n      try {\n        console.log('[LiveViewer] Fetching live presentation for course:', courseId);\n\n        // Get the course to find the live presentation\n        const courseDoc = doc(db, 'courses', courseId);\n        console.log('[DEBUG][Firestore Read] getDoc:', `courses/${courseId}`);\n        const courseSnap = await getDoc(courseDoc).catch(err => {\n          console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `courses/${courseId}`, err);\n          throw err;\n        });\n        if (!courseSnap.exists()) {\n          console.error('[LiveViewer] Course not found');\n          return;\n        }\n        const courseData = courseSnap.data();\n        console.log('[LiveViewer] Course data:', courseData);\n\n        // Get live presentation ID from course\n        const livePresentationId = courseData.livePresentation;\n        if (!livePresentationId) {\n          console.log('[LiveViewer] No live presentation set for this course');\n          return;\n        }\n        console.log('[LiveViewer] Live presentation ID:', livePresentationId);\n        setPresentationId(livePresentationId);\n\n        // Get the presentation document\n        const presentationDoc = doc(db, 'courses', courseId, 'presentations', livePresentationId);\n        console.log('[DEBUG][Firestore Read] getDoc:', `courses/${courseId}/presentations/${livePresentationId}`);\n        const presentationSnap = await getDoc(presentationDoc).catch(err => {\n          console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `courses/${courseId}/presentations/${livePresentationId}`, err);\n          throw err;\n        });\n        if (!presentationSnap.exists()) {\n          console.error('[LiveViewer] Live presentation not found');\n          return;\n        }\n        const presentationData = presentationSnap.data();\n        console.log('[LiveViewer] Presentation data:', presentationData);\n        if (!presentationData.isLive) {\n          console.log('[LiveViewer] Presentation is not live');\n          return;\n        }\n        setPresentation({\n          id: presentationSnap.id,\n          ...presentationData\n        });\n\n        // Set slides from the presentation document\n        if (presentationData.slides && Array.isArray(presentationData.slides)) {\n          setSlides(presentationData.slides);\n          console.log('[LiveViewer] Slides loaded:', presentationData.slides.length);\n        }\n        setAudienceMode(presentationData.audienceMode || 'enrolledUsers');\n        setLoadingAudienceMode(false);\n      } catch (error) {\n        console.error('[LiveViewer] Error fetching live presentation:', error);\n        setLoadingAudienceMode(false);\n      }\n    };\n    if (courseId) {\n      fetchLive();\n    }\n  }, [courseId]);\n\n  // Set up real-time listener for presentation updates\n  useEffect(() => {\n    if (!presentationId || !courseId) return;\n    console.log('[LiveViewer] Setting up real-time listener for presentation:', presentationId);\n    const presentationDoc = doc(db, 'courses', courseId, 'presentations', presentationId);\n    console.log('[DEBUG][Firestore Read] onSnapshot:', `courses/${courseId}/presentations/${presentationId}`);\n    const unsubscribe = onSnapshot(presentationDoc, doc => {\n      if (doc.exists()) {\n        const data = doc.data();\n        console.log('[LiveViewer] Presentation updated:', data);\n        setPresentation({\n          id: doc.id,\n          ...data\n        });\n        if (data.slides && Array.isArray(data.slides)) {\n          setSlides(data.slides);\n        }\n      }\n    }, error => {\n      console.error('[DEBUG][Firestore Read][ERROR] onSnapshot:', `courses/${courseId}/presentations/${presentationId}`, error);\n    });\n    return () => {\n      console.log('[LiveViewer] Cleaning up presentation listener');\n      unsubscribe();\n    };\n  }, [presentationId, courseId]);\n\n  // Set up real-time listener for all student responses (for instructor view)\n  useEffect(() => {\n    if (!presentationId || !courseId) return;\n    console.log('[LiveViewer] Setting up real-time listener for student responses');\n    const responsesCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'responses');\n    console.log('[DEBUG][Firestore Read] getDocs:', `courses/${courseId}/presentations/${presentationId}/responses`);\n    const unsubscribe = onSnapshot(responsesCol, snapshot => {\n      const responses = snapshot.docs.map(doc => ({\n        userId: doc.id,\n        ...doc.data()\n      }));\n      console.log('[LiveViewer] Student responses updated:', responses);\n      setAllStudentResponses(responses);\n    }, error => {\n      console.error('[DEBUG][Firestore Read][ERROR] onSnapshot:', `courses/${courseId}/presentations/${presentationId}/responses`, error);\n    });\n    return () => {\n      console.log('[LiveViewer] Cleaning up student responses listener');\n      unsubscribe();\n    };\n  }, [presentationId, courseId]);\n\n  // Load current user's student response\n  useEffect(() => {\n    const loadMyResponse = async () => {\n      if (!presentationId || !courseId || !currentUser) return;\n      try {\n        const response = await PresentationService.getStudentResponse(courseId, presentationId, currentUser.uid);\n        setMyStudentResponse(response);\n        console.log('[LiveViewer] My student response loaded:', response);\n      } catch (error) {\n        console.error('[LiveViewer] Error loading my student response:', error);\n      }\n    };\n    loadMyResponse();\n  }, [presentationId, courseId, currentUser]);\n\n  // Set up username for anonymous mode\n  useEffect(() => {\n    if (audienceMode === 'anonymous' && !currentUser) {\n      setShowPrompt(true);\n    } else if (audienceMode === 'enrolledUsers' && currentUser) {\n      setUserId(currentUser.displayName || currentUser.email || currentUser.uid);\n    }\n  }, [audienceMode, currentUser]);\n  const handleUsernameSubmit = e => {\n    e.preventDefault();\n    if (!username.trim()) return;\n    setUserId(username);\n    setShowPrompt(false);\n  };\n\n  // New: Handle comment submission using the new structure\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!commentInput.trim() || !presentationId || !courseId) return;\n    try {\n      const currentSlideIndex = (presentation === null || presentation === void 0 ? void 0 : presentation.currentSlideIndex) || 0;\n      const commentData = {\n        username: userId,\n        userId: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) || getAnonId(),\n        text: commentInput\n      };\n      await PresentationService.addStudentComment(courseId, presentationId, currentSlideIndex, commentData);\n      console.log('[LiveViewer] Comment submitted successfully');\n      setCommentInput(\"\");\n    } catch (error) {\n      console.error('[LiveViewer] Error submitting comment:', error);\n    }\n  };\n\n  // New: Get all comments from all student responses for current slide\n  const [currentComments, setCurrentComments] = useState([]);\n  const commentListenersRef = useRef([]);\n  const allCommentsMapRef = useRef({});\n  useEffect(() => {\n    if (!presentationId || !courseId || typeof (presentation === null || presentation === void 0 ? void 0 : presentation.currentSlideIndex) !== 'number') return;\n    // Clean up previous listeners\n    commentListenersRef.current.forEach(unsub => unsub && unsub());\n    commentListenersRef.current = [];\n    allCommentsMapRef.current = {};\n    const fetchComments = async () => {\n      const responsesCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'responses');\n      const responsesSnap = await getDocs(responsesCol).catch(err => {\n        console.error('[DEBUG][Firestore Read][ERROR] getDocs:', `courses/${courseId}/presentations/${presentationId}/responses`, err);\n        throw err;\n      });\n      if (responsesSnap.docs.length === 0) setCurrentComments([]);\n      responsesSnap.forEach(userDoc => {\n        const userId = userDoc.id;\n        const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'responses', userId, 'comments');\n        const q = query(commentsCol, where('slideIndex', '==', presentation.currentSlideIndex), orderBy('timestamp', 'asc'));\n        const unsub = onSnapshot(q, commentsSnap => {\n          // Update this user's comments in the map\n          allCommentsMapRef.current[userId] = [];\n          commentsSnap.forEach(doc => {\n            allCommentsMapRef.current[userId].push({\n              ...doc.data(),\n              id: doc.id,\n              userId\n            });\n          });\n          // Aggregate all comments from all users\n          let allComments = [];\n          Object.values(allCommentsMapRef.current).forEach(arr => {\n            allComments = allComments.concat(arr);\n          });\n          // Sort by timestamp\n          allComments.sort((a, b) => {\n            var _a$timestamp, _b$timestamp;\n            return (((_a$timestamp = a.timestamp) === null || _a$timestamp === void 0 ? void 0 : _a$timestamp.seconds) || 0) - (((_b$timestamp = b.timestamp) === null || _b$timestamp === void 0 ? void 0 : _b$timestamp.seconds) || 0);\n          });\n          setCurrentComments(allComments);\n        }, error => {\n          console.error('[DEBUG][Firestore Read][ERROR] onSnapshot:', `courses/${courseId}/presentations/${presentationId}/responses/${userId}/comments`, error);\n        });\n        commentListenersRef.current.push(unsub);\n      });\n    };\n    fetchComments();\n    return () => {\n      commentListenersRef.current.forEach(unsub => unsub && unsub());\n      commentListenersRef.current = [];\n      allCommentsMapRef.current = {};\n    };\n  }, [presentationId, courseId, presentation === null || presentation === void 0 ? void 0 : presentation.currentSlideIndex, currentUser]);\n\n  // New: Handle like functionality (simplified for now)\n  const handleLike = async comment => {\n    // For now, we'll implement a simplified like system\n    // In the future, this could be enhanced to store likes in the student response structure\n    console.log('[LiveViewer] Like functionality not yet implemented in new structure');\n  };\n  if (!presentationId) {\n    console.warn('[LiveViewer] No live presentationId, rendering fallback');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen text-xl text-gray-600\",\n      children: \"No live presentation is currently being delivered for this course.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 12\n    }, this);\n  }\n  if (audienceMode === 'anonymous' && showPrompt) {\n    console.log('[LiveViewer] Rendering username prompt UI');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUsernameSubmit,\n        className: \"bg-white p-8 rounded shadow-lg flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Enter a username to join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"border px-4 py-2 rounded mb-4 text-lg\",\n          placeholder: \"Your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 text-white px-6 py-2 rounded font-semibold\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\n  console.log('[LiveViewer][DEBUG] currentSlideIndex:', presentation && presentation.currentSlideIndex, 'slides.length:', slides.length, 'slide:', presentation && typeof presentation.currentSlideIndex === 'number' ? slides[presentation.currentSlideIndex] : undefined);\n\n  // Robust fallback for missing/invalid presentation or currentSlideIndex\n  if (!presentation) {\n    if (slides.length > 0) {\n      var _userProfile$enrolled;\n      // We have slides but no presentation doc - use fallback\n      const fallbackSlide = slides[0];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-screen h-screen bg-black overflow-hidden\",\n        children: [isDev && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            background: 'rgba(255,255,255,0.95)',\n            color: '#222',\n            zIndex: 9999,\n            padding: 12,\n            fontSize: 13,\n            maxWidth: 400,\n            borderBottomRightRadius: 8,\n            boxShadow: '0 2px 8px #0002'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"DEBUG PANEL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"User:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 20\n            }, this), \" \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Enrolled:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 20\n            }, this), \" \", userProfile === null || userProfile === void 0 ? void 0 : (_userProfile$enrolled = userProfile.enrolledCourses) === null || _userProfile$enrolled === void 0 ? void 0 : _userProfile$enrolled.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Presentation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 20\n            }, this), \" \", presentationId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Slides:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 20\n            }, this), \" \", slides.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 20\n            }, this), \" Using fallback slide 0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-full flex items-center justify-center\",\n          children: fallbackSlide && fallbackSlide.imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: fallbackSlide.imageUrl,\n            alt: fallbackSlide.title || 'Slide',\n            className: \"max-w-full max-h-full object-contain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-4 right-4 text-white text-sm\",\n          children: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.displayName) || (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-4 right-4 text-white text-sm\",\n          children: [\"1 / \", slides.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute bottom-4 left-4 w-1/3 h-1/4 bg-transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center min-h-screen text-xl text-red-600\",\n        children: \"Unable to load live presentation. You may not have access, or the presentation is not live.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  let slideToShow = null;\n  if (typeof presentation.currentSlideIndex === 'number' && slides[presentation.currentSlideIndex]) {\n    slideToShow = slides[presentation.currentSlideIndex];\n  } else if (slides.length > 0) {\n    slideToShow = slides[0];\n  }\n\n  // Get comments for current slide\n  // const currentComments = getCurrentSlideComments(); // This line is no longer needed\n\n  console.log('[LiveViewer] Rendering main viewer UI. presentation:', presentation, 'audienceMode:', audienceMode, 'userId:', userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-screen h-screen bg-black overflow-hidden\",\n    children: [isDev && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        background: 'rgba(255,255,255,0.95)',\n        color: '#222',\n        zIndex: 9999,\n        padding: 12,\n        fontSize: 13,\n        maxWidth: 400,\n        borderBottomRightRadius: 8,\n        boxShadow: '0 2px 8px #0002'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"DEBUG PANEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 16\n        }, this), \" \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Enrolled Courses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 16\n        }, this), \" \", JSON.stringify(userProfile === null || userProfile === void 0 ? void 0 : userProfile.enrolledCourses)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Presentation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 16\n        }, this), \" \", presentation ? JSON.stringify({\n          id: presentation.id,\n          isLive: presentation.isLive,\n          archived: presentation.archived,\n          currentSlideIndex: presentation.currentSlideIndex\n        }) : 'null']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Comments:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 16\n        }, this), \" \", currentComments.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-8 z-20 text-white text-sm bg-black/60 px-3 py-1 rounded-full shadow\",\n      children: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"absolute top-4 right-24 z-30 bg-white bg-opacity-80 rounded-full p-2 shadow hover:bg-primary-100\",\n      title: \"Open discussion\",\n      onClick: () => setShowDiscussion(true),\n      children: /*#__PURE__*/_jsxDEV(MessageSquare, {\n        className: \"w-6 h-6 text-primary-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center w-full h-full\",\n      children: slides.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 text-2xl\",\n        children: \"No slides found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 11\n      }, this) : slideToShow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full flex flex-col items-center justify-center\",\n        children: [slideToShow.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slideToShow.imageUrl,\n          alt: \"Slide\",\n          className: \"object-contain w-screen h-screen max-h-[90vh] max-w-[90vw] rounded shadow-lg bg-white\",\n          style: {\n            background: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center w-full h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-3xl font-semibold text-center px-8 py-4 bg-black/60 rounded-lg shadow\",\n            children: Array.isArray(slideToShow.content) ? slideToShow.content.map((item, idx) => {\n              if (typeof item === 'string') return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 62\n              }, this);\n              if (item && typeof item === 'object') {\n                if (item.text) return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item.text\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 49\n                }, this);\n                if (item.imageUrl) return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.imageUrl,\n                  alt: \"\",\n                  style: {\n                    maxWidth: '100%',\n                    maxHeight: 400\n                  }\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 53\n                }, this);\n              }\n              return null;\n            }) : slideToShow.content && typeof slideToShow.content === 'object' ? slideToShow.content.text ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: slideToShow.content.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 29\n            }, this) : slideToShow.content.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: slideToShow.content.imageUrl,\n              alt: \"\",\n              style: {\n                maxWidth: '100%',\n                maxHeight: 400\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 592,\n              columnNumber: 31\n            }, this) : null : slideToShow.content || slideToShow.text || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center pointer-events-none z-30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 text-2xl\",\n        children: \"Slide will appear here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this), showDiscussion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-40 flex items-center justify-center bg-black bg-opacity-60\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0\",\n        onClick: () => setShowDiscussion(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex w-full h-full z-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 bg-gray-100 flex flex-col items-center justify-center border-r border-gray-300\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-400 text-lg\",\n            children: \"(Grouping area placeholder)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[400px] max-w-full bg-white flex flex-col h-full shadow-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between px-4 py-3 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-lg\",\n              children: \"Slide Discussion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowDiscussion(false),\n              className: \"text-gray-500 hover:text-primary-600 text-xl\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-3\",\n            children: currentComments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-400 text-center\",\n              children: \"No messages yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 19\n            }, this) : currentComments.map((c, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-100 rounded px-3 py-2 flex items-center group\",\n                title: c.username,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-800 text-sm\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: c.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-500 text-xs ml-2\",\n                  children: [\"- \", c.username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 640,\n                  columnNumber: 25\n                }, this)]\n              }, c.id || index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"flex items-center border-t px-4 py-3\",\n            onSubmit: handleCommentSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"flex-1 border rounded px-3 py-2 mr-2 focus:outline-none focus:border-primary-500\",\n              placeholder: \"Type a comment...\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-primary-600 text-white px-4 py-2 rounded font-semibold disabled:opacity-50\",\n              disabled: !commentInput.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 9\n    }, this), slides.length > 0 && presentation && typeof presentation.currentSlideIndex === 'number' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-6 right-8 z-20 text-white text-lg bg-black/60 px-4 py-2 rounded-full shadow\",\n      children: [presentation.currentSlideIndex + 1, \" / \", slides.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 539,\n    columnNumber: 5\n  }, this);\n};\n_s(LivePresentationViewer, \"N5zhnVqokfRn8VTOdxxWyFAFqMU=\", true, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = LivePresentationViewer;\nexport default LivePresentationViewer;\nvar _c;\n$RefreshReg$(_c, \"LivePresentationViewer\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useParams","PresentationService","useAuth","useNavigate","onSnapshot","doc","collection","getDocs","query","orderBy","addDoc","serverTimestamp","updateDoc","getDoc","where","MessageSquare","ThumbsUp","db","jsxDEV","_jsxDEV","getRandomCode","Math","floor","random","toString","getAnonId","anonId","localStorage","getItem","substr","setItem","LivePresentationViewer","_s","courseId","navigate","currentUser","isDev","process","env","NODE_ENV","userProfile","require","presentationId","setPresentationId","presentation","setPresentation","slides","setSlides","currentSlide","setCurrentSlide","audienceMode","setAudienceMode","loadingAudienceMode","setLoadingAudienceMode","username","setUsername","userId","setUserId","showPrompt","setShowPrompt","showDiscussion","setShowDiscussion","commentInput","setCommentInput","allStudentResponses","setAllStudentResponses","myStudentResponse","setMyStudentResponse","console","log","uid","enrolledCourses","id","isLive","archived","currentSlideIndex","Array","isArray","enrolled","includes","indexOf","title","ownerId","length","logFirestoreDocuments","courseDoc","courseSnap","catch","err","error","exists","courseData","data","name","instructorId","isActive","livePresentation","createdAt","updatedAt","presentationDoc","presentationSnap","presentationData","userDoc","userSnap","userData","displayName","email","role","fallbackPresentation","fetchLive","livePresentationId","unsubscribe","responsesCol","snapshot","responses","docs","map","loadMyResponse","response","getStudentResponse","handleUsernameSubmit","e","preventDefault","trim","handleCommentSubmit","commentData","text","addStudentComment","currentComments","setCurrentComments","commentListenersRef","allCommentsMapRef","current","forEach","unsub","fetchComments","responsesSnap","commentsCol","q","commentsSnap","push","allComments","Object","values","arr","concat","sort","a","b","_a$timestamp","_b$timestamp","timestamp","seconds","handleLike","comment","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","undefined","_userProfile$enrolled","fallbackSlide","style","position","top","left","background","color","zIndex","padding","fontSize","maxWidth","borderBottomRightRadius","boxShadow","join","imageUrl","src","alt","slideToShow","JSON","stringify","onClick","content","item","idx","maxHeight","c","index","cursor","disabled","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/LivePresentationViewer.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PresentationService from '../services/PresentationService';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { onSnapshot, doc, collection, getDocs, query, orderBy, addDoc, serverTimestamp, updateDoc, getDoc, where } from 'firebase/firestore';\nimport { MessageSquare, ThumbsUp } from 'lucide-react';\nimport { db } from '../firebase/config';\n\nfunction getRandomCode() {\n  return Math.floor(10000 + Math.random() * 90000).toString();\n}\n\n// Utility to get or generate a stable anonId for anonymous users\nfunction getAnonId() {\n  let anonId = localStorage.getItem('anonId');\n  if (!anonId) {\n    anonId = 'anon_' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('anonId', anonId);\n  }\n  return anonId;\n}\n\nconst LivePresentationViewer = () => {\n  const { courseId } = useParams();\n  const navigate = useNavigate();\n  const { currentUser } = useAuth();\n  const isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n  const { userProfile } = require('../contexts/AuthContext').useAuth();\n\n  const [presentationId, setPresentationId] = useState(null);\n  const [presentation, setPresentation] = useState(null);\n  const [slides, setSlides] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers');\n  const [loadingAudienceMode, setLoadingAudienceMode] = useState(true);\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState('');\n  const [showPrompt, setShowPrompt] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [allStudentResponses, setAllStudentResponses] = useState([]); // New: all student responses\n  const [myStudentResponse, setMyStudentResponse] = useState(null); // New: current user's response\n\n  // DEBUG LOGGING for Firestore rule troubleshooting\n  useEffect(() => {\n    console.log('[DEBUG] Current user uid:', currentUser?.uid);\n    if (userProfile) {\n      console.log('[DEBUG] userProfile.enrolledCourses:', userProfile.enrolledCourses);\n    } else {\n      console.log('[DEBUG] userProfile is null');\n    }\n    if (presentation) {\n      console.log('[DEBUG] Presentation doc:', {\n        id: presentation.id,\n        isLive: presentation.isLive,\n        archived: presentation.archived,\n        currentSlideIndex: presentation.currentSlideIndex\n      });\n    } else {\n      console.log('[DEBUG] Presentation doc is null');\n    }\n  }, [currentUser, userProfile, presentation]);\n\n  useEffect(() => {\n    console.log('[DEBUG] --- LivePresentationViewer Diagnostics ---');\n    console.log('[DEBUG] courseId:', courseId);\n    console.log('[DEBUG] presentationId:', presentationId);\n    console.log('[DEBUG] currentUser:', currentUser);\n    console.log('[DEBUG] userProfile:', userProfile);\n    if (userProfile) {\n      console.log('[DEBUG] userProfile.enrolledCourses:', userProfile.enrolledCourses);\n      if (Array.isArray(userProfile.enrolledCourses)) {\n        const enrolled = userProfile.enrolledCourses.includes(courseId);\n        console.log('[DEBUG] Firestore rule simulation: enrolledCourses.includes(courseId):', enrolled);\n        console.log('[DEBUG] CourseId in enrolledCourses array:', (userProfile.enrolledCourses || []).indexOf(courseId));\n      }\n    } else {\n      console.log('[DEBUG] userProfile is null');\n    }\n    if (presentation) {\n      console.log('[DEBUG] Presentation doc:', {\n        id: presentation.id,\n        isLive: presentation.isLive,\n        archived: presentation.archived,\n        currentSlideIndex: presentation.currentSlideIndex,\n        audienceMode: presentation.audienceMode,\n        title: presentation.title,\n        ownerId: presentation.ownerId\n      });\n    } else {\n      console.log('[DEBUG] Presentation doc is null');\n    }\n    console.log('[DEBUG] slides:', slides);\n    console.log('[DEBUG] slides.length:', slides.length);\n    if (slides.length > 0) {\n      console.log('[DEBUG] Slide 0:', slides[0]);\n    }\n    console.log('[DEBUG] --- End Diagnostics ---');\n  }, [courseId, presentationId, currentUser, userProfile, presentation, slides]);\n\n  // Add comprehensive Firestore document logging\n  useEffect(() => {\n    const logFirestoreDocuments = async () => {\n      try {\n        console.log('[DEBUG] === FIRESTORE DOCUMENT ANALYSIS ===');\n        \n        // 1. Log Course Document\n        console.log('[DEBUG] 1. Checking Course Document: courses/' + courseId);\n        const courseDoc = doc(db, 'courses', courseId);\n        console.log('[DEBUG][Firestore Read] getDoc:', `courses/${courseId}`);\n        const courseSnap = await getDoc(courseDoc).catch(err => { console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `courses/${courseId}`, err); throw err; });\n        if (courseSnap.exists()) {\n          const courseData = courseSnap.data();\n          console.log('[DEBUG] Course Document Fields:', {\n            id: courseSnap.id,\n            name: courseData.name,\n            instructorId: courseData.instructorId,\n            isActive: courseData.isActive,\n            livePresentation: courseData.livePresentation,\n            createdAt: courseData.createdAt,\n            updatedAt: courseData.updatedAt\n          });\n        } else {\n          console.log('[DEBUG] Course Document does not exist!');\n        }\n\n        // 2. Log Presentation Document (if we have presentationId)\n        if (presentationId) {\n          console.log('[DEBUG] 2. Checking Presentation Document: courses/' + courseId + '/presentations/' + presentationId);\n          const presentationDoc = doc(db, 'courses', courseId, 'presentations', presentationId);\n          console.log('[DEBUG][Firestore Read] getDoc:', `courses/${courseId}/presentations/${presentationId}`);\n          const presentationSnap = await getDoc(presentationDoc).catch(err => { console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `courses/${courseId}/presentations/${presentationId}`, err); throw err; });\n          if (presentationSnap.exists()) {\n            const presentationData = presentationSnap.data();\n            console.log('[DEBUG] Presentation Document Fields:', {\n              id: presentationSnap.id,\n              title: presentationData.title,\n              isLive: presentationData.isLive,\n              archived: presentationData.archived,\n              currentSlideIndex: presentationData.currentSlideIndex,\n              audienceMode: presentationData.audienceMode,\n              ownerId: presentationData.ownerId,\n              createdAt: presentationData.createdAt,\n              updatedAt: presentationData.updatedAt\n            });\n          } else {\n            console.log('[DEBUG] Presentation Document does not exist!');\n          }\n        } else {\n          console.log('[DEBUG] 2. No presentationId available to check presentation document');\n        }\n\n        // 3. Log User Document\n        if (currentUser) {\n          console.log('[DEBUG] 3. Checking User Document: users/' + currentUser.uid);\n          const userDoc = doc(db, 'users', currentUser.uid);\n          console.log('[DEBUG][Firestore Read] getDoc:', `users/${currentUser.uid}`);\n          const userSnap = await getDoc(userDoc).catch(err => { console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `users/${currentUser.uid}`, err); throw err; });\n          if (userSnap.exists()) {\n            const userData = userSnap.data();\n            console.log('[DEBUG] User Document Fields:', {\n              id: userSnap.id,\n              displayName: userData.displayName,\n              email: userData.email,\n              role: userData.role,\n              enrolledCourses: userData.enrolledCourses,\n              createdAt: userData.createdAt,\n              updatedAt: userData.updatedAt\n            });\n          } else {\n            console.log('[DEBUG] User Document does not exist!');\n          }\n        } else {\n          console.log('[DEBUG] 3. No currentUser available to check user document');\n        }\n\n        // 4. Firestore Rule Analysis\n        console.log('[DEBUG] 4. Firestore Rule Analysis:');\n        console.log('[DEBUG] - Rule for presentations requires:');\n        console.log('[DEBUG]   * request.auth != null: true');\n        console.log('[DEBUG]   * enrolledCourses.hasAny([courseId]):', \n          userProfile && Array.isArray(userProfile.enrolledCourses) ? \n          userProfile.enrolledCourses.includes(courseId) : 'unknown');\n\n        console.log('[DEBUG] === END FIRESTORE DOCUMENT ANALYSIS ===');\n      } catch (error) {\n        console.error('[DEBUG] Error in Firestore document analysis:', error);\n      }\n    };\n\n    if (courseId) {\n      logFirestoreDocuments();\n    }\n  }, [courseId, presentationId, currentUser, userProfile, presentation]);\n\n  // Add fallback mechanism for when presentation document cannot be read\n  useEffect(() => {\n    if (presentationId && slides.length > 0 && !presentation) {\n      console.log('[LiveViewer] Creating fallback presentation object since presentation doc cannot be read');\n      const fallbackPresentation = {\n        id: presentationId,\n        title: 'Live Presentation',\n        isLive: true,\n        archived: false,\n        currentSlideIndex: 0,\n        audienceMode: 'enrolledUsers'\n      };\n      setPresentation(fallbackPresentation);\n    }\n  }, [presentationId, slides, presentation]);\n\n  // Fetch live presentation and slides\n  useEffect(() => {\n    const fetchLive = async () => {\n      try {\n        console.log('[LiveViewer] Fetching live presentation for course:', courseId);\n        \n        // Get the course to find the live presentation\n        const courseDoc = doc(db, 'courses', courseId);\n        console.log('[DEBUG][Firestore Read] getDoc:', `courses/${courseId}`);\n        const courseSnap = await getDoc(courseDoc).catch(err => { console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `courses/${courseId}`, err); throw err; });\n        \n        if (!courseSnap.exists()) {\n          console.error('[LiveViewer] Course not found');\n          return;\n        }\n        \n        const courseData = courseSnap.data();\n        console.log('[LiveViewer] Course data:', courseData);\n        \n        // Get live presentation ID from course\n        const livePresentationId = courseData.livePresentation;\n        if (!livePresentationId) {\n          console.log('[LiveViewer] No live presentation set for this course');\n          return;\n        }\n        \n        console.log('[LiveViewer] Live presentation ID:', livePresentationId);\n        setPresentationId(livePresentationId);\n        \n        // Get the presentation document\n        const presentationDoc = doc(db, 'courses', courseId, 'presentations', livePresentationId);\n        console.log('[DEBUG][Firestore Read] getDoc:', `courses/${courseId}/presentations/${livePresentationId}`);\n        const presentationSnap = await getDoc(presentationDoc).catch(err => { console.error('[DEBUG][Firestore Read][ERROR] getDoc:', `courses/${courseId}/presentations/${livePresentationId}`, err); throw err; });\n        \n        if (!presentationSnap.exists()) {\n          console.error('[LiveViewer] Live presentation not found');\n          return;\n        }\n        \n        const presentationData = presentationSnap.data();\n        console.log('[LiveViewer] Presentation data:', presentationData);\n        \n        if (!presentationData.isLive) {\n          console.log('[LiveViewer] Presentation is not live');\n          return;\n        }\n        \n        setPresentation({\n          id: presentationSnap.id,\n          ...presentationData\n        });\n        \n        // Set slides from the presentation document\n        if (presentationData.slides && Array.isArray(presentationData.slides)) {\n          setSlides(presentationData.slides);\n          console.log('[LiveViewer] Slides loaded:', presentationData.slides.length);\n        }\n        \n        setAudienceMode(presentationData.audienceMode || 'enrolledUsers');\n        setLoadingAudienceMode(false);\n        \n      } catch (error) {\n        console.error('[LiveViewer] Error fetching live presentation:', error);\n        setLoadingAudienceMode(false);\n      }\n    };\n    \n    if (courseId) {\n      fetchLive();\n    }\n  }, [courseId]);\n\n  // Set up real-time listener for presentation updates\n  useEffect(() => {\n    if (!presentationId || !courseId) return;\n    \n    console.log('[LiveViewer] Setting up real-time listener for presentation:', presentationId);\n    \n    const presentationDoc = doc(db, 'courses', courseId, 'presentations', presentationId);\n    console.log('[DEBUG][Firestore Read] onSnapshot:', `courses/${courseId}/presentations/${presentationId}`);\n    const unsubscribe = onSnapshot(presentationDoc, (doc) => {\n      if (doc.exists()) {\n        const data = doc.data();\n        console.log('[LiveViewer] Presentation updated:', data);\n        setPresentation({\n          id: doc.id,\n          ...data\n        });\n        \n        if (data.slides && Array.isArray(data.slides)) {\n          setSlides(data.slides);\n        }\n      }\n    }, (error) => { console.error('[DEBUG][Firestore Read][ERROR] onSnapshot:', `courses/${courseId}/presentations/${presentationId}`, error); });\n    \n    return () => {\n      console.log('[LiveViewer] Cleaning up presentation listener');\n      unsubscribe();\n    };\n  }, [presentationId, courseId]);\n\n  // Set up real-time listener for all student responses (for instructor view)\n  useEffect(() => {\n    if (!presentationId || !courseId) return;\n    \n    console.log('[LiveViewer] Setting up real-time listener for student responses');\n    \n    const responsesCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'responses');\n    console.log('[DEBUG][Firestore Read] getDocs:', `courses/${courseId}/presentations/${presentationId}/responses`);\n    const unsubscribe = onSnapshot(responsesCol, (snapshot) => {\n      const responses = snapshot.docs.map(doc => ({\n        userId: doc.id,\n        ...doc.data()\n      }));\n      console.log('[LiveViewer] Student responses updated:', responses);\n      setAllStudentResponses(responses);\n    }, (error) => { console.error('[DEBUG][Firestore Read][ERROR] onSnapshot:', `courses/${courseId}/presentations/${presentationId}/responses`, error); });\n    \n    return () => {\n      console.log('[LiveViewer] Cleaning up student responses listener');\n      unsubscribe();\n    };\n  }, [presentationId, courseId]);\n\n  // Load current user's student response\n  useEffect(() => {\n    const loadMyResponse = async () => {\n      if (!presentationId || !courseId || !currentUser) return;\n      \n      try {\n        const response = await PresentationService.getStudentResponse(courseId, presentationId, currentUser.uid);\n        setMyStudentResponse(response);\n        console.log('[LiveViewer] My student response loaded:', response);\n      } catch (error) {\n        console.error('[LiveViewer] Error loading my student response:', error);\n      }\n    };\n    \n    loadMyResponse();\n  }, [presentationId, courseId, currentUser]);\n\n  // Set up username for anonymous mode\n  useEffect(() => {\n    if (audienceMode === 'anonymous' && !currentUser) {\n      setShowPrompt(true);\n    } else if (audienceMode === 'enrolledUsers' && currentUser) {\n      setUserId(currentUser.displayName || currentUser.email || currentUser.uid);\n    }\n  }, [audienceMode, currentUser]);\n\n  const handleUsernameSubmit = (e) => {\n    e.preventDefault();\n    if (!username.trim()) return;\n    setUserId(username);\n    setShowPrompt(false);\n  };\n\n  // New: Handle comment submission using the new structure\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    if (!commentInput.trim() || !presentationId || !courseId) return;\n    \n    try {\n      const currentSlideIndex = presentation?.currentSlideIndex || 0;\n      const commentData = {\n        username: userId,\n        userId: currentUser?.uid || getAnonId(),\n        text: commentInput\n      };\n      \n      await PresentationService.addStudentComment(courseId, presentationId, currentSlideIndex, commentData);\n      console.log('[LiveViewer] Comment submitted successfully');\n      setCommentInput(\"\");\n    } catch (error) {\n      console.error('[LiveViewer] Error submitting comment:', error);\n    }\n  };\n\n  // New: Get all comments from all student responses for current slide\n  const [currentComments, setCurrentComments] = useState([]);\n  const commentListenersRef = useRef([]);\n  const allCommentsMapRef = useRef({});\n  useEffect(() => {\n    if (!presentationId || !courseId || typeof presentation?.currentSlideIndex !== 'number') return;\n    // Clean up previous listeners\n    commentListenersRef.current.forEach(unsub => unsub && unsub());\n    commentListenersRef.current = [];\n    allCommentsMapRef.current = {};\n    const fetchComments = async () => {\n      const responsesCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'responses');\n      const responsesSnap = await getDocs(responsesCol).catch(err => { console.error('[DEBUG][Firestore Read][ERROR] getDocs:', `courses/${courseId}/presentations/${presentationId}/responses`, err); throw err; });\n      if (responsesSnap.docs.length === 0) setCurrentComments([]);\n      responsesSnap.forEach(userDoc => {\n        const userId = userDoc.id;\n        const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'responses', userId, 'comments');\n        const q = query(commentsCol, where('slideIndex', '==', presentation.currentSlideIndex), orderBy('timestamp', 'asc'));\n        const unsub = onSnapshot(q, (commentsSnap) => {\n          // Update this user's comments in the map\n          allCommentsMapRef.current[userId] = [];\n          commentsSnap.forEach(doc => {\n            allCommentsMapRef.current[userId].push({ ...doc.data(), id: doc.id, userId });\n          });\n          // Aggregate all comments from all users\n          let allComments = [];\n          Object.values(allCommentsMapRef.current).forEach(arr => { allComments = allComments.concat(arr); });\n          // Sort by timestamp\n          allComments.sort((a, b) => (a.timestamp?.seconds || 0) - (b.timestamp?.seconds || 0));\n          setCurrentComments(allComments);\n        }, (error) => { console.error('[DEBUG][Firestore Read][ERROR] onSnapshot:', `courses/${courseId}/presentations/${presentationId}/responses/${userId}/comments`, error); });\n        commentListenersRef.current.push(unsub);\n      });\n    };\n    fetchComments();\n    return () => {\n      commentListenersRef.current.forEach(unsub => unsub && unsub());\n      commentListenersRef.current = [];\n      allCommentsMapRef.current = {};\n    };\n  }, [presentationId, courseId, presentation?.currentSlideIndex, currentUser]);\n\n  // New: Handle like functionality (simplified for now)\n  const handleLike = async (comment) => {\n    // For now, we'll implement a simplified like system\n    // In the future, this could be enhanced to store likes in the student response structure\n    console.log('[LiveViewer] Like functionality not yet implemented in new structure');\n  };\n\n  if (!presentationId) {\n    console.warn('[LiveViewer] No live presentationId, rendering fallback');\n    return <div className=\"flex items-center justify-center min-h-screen text-xl text-gray-600\">No live presentation is currently being delivered for this course.</div>;\n  }\n\n  if (audienceMode === 'anonymous' && showPrompt) {\n    console.log('[LiveViewer] Rendering username prompt UI');\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <form onSubmit={handleUsernameSubmit} className=\"bg-white p-8 rounded shadow-lg flex flex-col items-center\">\n          <h2 className=\"text-2xl font-bold mb-4\">Enter a username to join</h2>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            className=\"border px-4 py-2 rounded mb-4 text-lg\"\n            placeholder=\"Your name\"\n            required\n          />\n          <button type=\"submit\" className=\"bg-blue-600 text-white px-6 py-2 rounded font-semibold\">Join</button>\n        </form>\n      </div>\n    );\n  }\n\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\n  console.log('[LiveViewer][DEBUG] currentSlideIndex:', presentation && presentation.currentSlideIndex, 'slides.length:', slides.length, 'slide:', presentation && typeof presentation.currentSlideIndex === 'number' ? slides[presentation.currentSlideIndex] : undefined);\n\n  // Robust fallback for missing/invalid presentation or currentSlideIndex\n  if (!presentation) {\n    if (slides.length > 0) {\n      // We have slides but no presentation doc - use fallback\n      const fallbackSlide = slides[0];\n      return (\n        <div className=\"relative w-screen h-screen bg-black overflow-hidden\">\n          {/* DEBUG PANEL */}\n          {isDev && (\n            <div style={{ position: 'fixed', top: 0, left: 0, background: 'rgba(255,255,255,0.95)', color: '#222', zIndex: 9999, padding: 12, fontSize: 13, maxWidth: 400, borderBottomRightRadius: 8, boxShadow: '0 2px 8px #0002' }}>\n              <div><b>DEBUG PANEL</b></div>\n              <div><b>User:</b> {currentUser?.uid}</div>\n              <div><b>Enrolled:</b> {userProfile?.enrolledCourses?.join(', ')}</div>\n              <div><b>Presentation:</b> {presentationId}</div>\n              <div><b>Slides:</b> {slides.length}</div>\n              <div><b>Status:</b> Using fallback slide 0</div>\n            </div>\n          )}\n\n          {/* Main slide display */}\n          <div className=\"w-full h-full flex items-center justify-center\">\n            {fallbackSlide && fallbackSlide.imageUrl && (\n              <img \n                src={fallbackSlide.imageUrl} \n                alt={fallbackSlide.title || 'Slide'} \n                className=\"max-w-full max-h-full object-contain\"\n              />\n            )}\n          </div>\n\n          {/* User info overlay */}\n          <div className=\"absolute top-4 right-4 text-white text-sm\">\n            {currentUser?.displayName || currentUser?.email}\n          </div>\n\n          {/* Slide counter overlay */}\n          <div className=\"absolute bottom-4 right-4 text-white text-sm\">\n            1 / {slides.length}\n          </div>\n\n          {/* Overlay area for polls/interactions */}\n          <div className=\"absolute bottom-4 left-4 w-1/3 h-1/4 bg-transparent\">\n            {/* TODO: Poll/interaction UI */}\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen text-xl text-red-600\">\n          Unable to load live presentation. You may not have access, or the presentation is not live.\n        </div>\n      );\n    }\n  }\n\n  let slideToShow = null;\n  if (\n    typeof presentation.currentSlideIndex === 'number' &&\n    slides[presentation.currentSlideIndex]\n  ) {\n    slideToShow = slides[presentation.currentSlideIndex];\n  } else if (slides.length > 0) {\n    slideToShow = slides[0];\n  }\n\n  // Get comments for current slide\n  // const currentComments = getCurrentSlideComments(); // This line is no longer needed\n\n  console.log('[LiveViewer] Rendering main viewer UI. presentation:', presentation, 'audienceMode:', audienceMode, 'userId:', userId);\n\n  return (\n    <div className=\"relative w-screen h-screen bg-black overflow-hidden\">\n      {/* DEBUG PANEL */}\n      {isDev && (\n        <div style={{ position: 'fixed', top: 0, left: 0, background: 'rgba(255,255,255,0.95)', color: '#222', zIndex: 9999, padding: 12, fontSize: 13, maxWidth: 400, borderBottomRightRadius: 8, boxShadow: '0 2px 8px #0002' }}>\n          <div><b>DEBUG PANEL</b></div>\n          <div><b>User:</b> {currentUser?.uid}</div>\n          <div><b>Enrolled Courses:</b> {JSON.stringify(userProfile?.enrolledCourses)}</div>\n          <div><b>Presentation:</b> {presentation ? JSON.stringify({ id: presentation.id, isLive: presentation.isLive, archived: presentation.archived, currentSlideIndex: presentation.currentSlideIndex }) : 'null'}</div>\n          <div><b>Comments:</b> {currentComments.length}</div>\n        </div>\n      )}\n      {/* Username at top-right */}\n      <div className=\"absolute top-4 right-8 z-20 text-white text-sm bg-black/60 px-3 py-1 rounded-full shadow\">\n        {userId}\n      </div>\n      {/* Discussion Icon */}\n      <button\n        className=\"absolute top-4 right-24 z-30 bg-white bg-opacity-80 rounded-full p-2 shadow hover:bg-primary-100\"\n        title=\"Open discussion\"\n        onClick={() => setShowDiscussion(true)}\n      >\n        <MessageSquare className=\"w-6 h-6 text-primary-600\" />\n      </button>\n      {/* Slide content/image centered and scaled */}\n      <div className=\"flex items-center justify-center w-full h-full\">\n        {slides.length === 0 ? (\n          <div className=\"text-gray-400 text-2xl\">No slides found.</div>\n        ) : slideToShow ? (\n          <div className=\"w-full h-full flex flex-col items-center justify-center\">\n            {/* If imageUrl, show image full size, else show text */}\n            {slideToShow.imageUrl ? (\n              <img\n                src={slideToShow.imageUrl}\n                alt=\"Slide\"\n                className=\"object-contain w-screen h-screen max-h-[90vh] max-w-[90vw] rounded shadow-lg bg-white\"\n                style={{ background: 'white' }}\n              />\n            ) : (\n              <div className=\"flex items-center justify-center w-full h-full\">\n                <div className=\"text-white text-3xl font-semibold text-center px-8 py-4 bg-black/60 rounded-lg shadow\">\n                  {Array.isArray(slideToShow.content)\n                    ? slideToShow.content.map((item, idx) => {\n                        if (typeof item === 'string') return <div key={idx}>{item}</div>;\n                        if (item && typeof item === 'object') {\n                          if (item.text) return <div key={idx}>{item.text}</div>;\n                          if (item.imageUrl) return <img key={idx} src={item.imageUrl} alt=\"\" style={{ maxWidth: '100%', maxHeight: 400 }} />;\n                        }\n                        return null;\n                      })\n                    : (slideToShow.content && typeof slideToShow.content === 'object')\n                      ? (slideToShow.content.text\n                          ? <div>{slideToShow.content.text}</div>\n                          : slideToShow.content.imageUrl\n                            ? <img src={slideToShow.content.imageUrl} alt=\"\" style={{ maxWidth: '100%', maxHeight: 400 }} />\n                            : null)\n                      : slideToShow.content || slideToShow.text || ''}\n                </div>\n              </div>\n            )}\n            {/* Overlay for polls/interactions (placeholder) */}\n            <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none z-30\">\n              {/* TODO: Polls/interactions overlay goes here */}\n            </div>\n          </div>\n        ) : (\n          <div className=\"text-gray-400 text-2xl\">Slide will appear here</div>\n        )}\n      </div>\n      {/* Discussion Overlay */}\n      {showDiscussion && (\n        <div className=\"fixed inset-0 z-40 flex items-center justify-center bg-black bg-opacity-60\">\n          <div className=\"absolute inset-0\" onClick={() => setShowDiscussion(false)} />\n          <div className=\"relative flex w-full h-full z-50\">\n            {/* Left: Grouping area (placeholder) */}\n            <div className=\"flex-1 bg-gray-100 flex flex-col items-center justify-center border-r border-gray-300\">\n              <div className=\"text-gray-400 text-lg\">(Grouping area placeholder)</div>\n            </div>\n            {/* Right: Chat/comments */}\n            <div className=\"w-[400px] max-w-full bg-white flex flex-col h-full shadow-xl\">\n              {/* Header */}\n              <div className=\"flex items-center justify-between px-4 py-3 border-b\">\n                <div className=\"font-semibold text-lg\">Slide Discussion</div>\n                <button onClick={() => setShowDiscussion(false)} className=\"text-gray-500 hover:text-primary-600 text-xl\">&times;</button>\n              </div>\n              {/* Chat panel */}\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-3\">\n                {currentComments.length === 0 ? (\n                  <div className=\"text-gray-400 text-center\">No messages yet.</div>\n                ) : (\n                  currentComments.map((c, index) => {\n                    return (\n                      <div\n                        key={c.id || index}\n                        className=\"bg-gray-100 rounded px-3 py-2 flex items-center group\"\n                        title={c.username}\n                      >\n                        {/* Comment text */}\n                        <span className=\"text-gray-800 text-sm\" style={{ cursor: 'pointer' }}>\n                          {c.text}\n                        </span>\n                        {/* Username */}\n                        <span className=\"text-gray-500 text-xs ml-2\">\n                          - {c.username}\n                        </span>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n              {/* Input box */}\n              <form className=\"flex items-center border-t px-4 py-3\" onSubmit={handleCommentSubmit}>\n                <input\n                  type=\"text\"\n                  className=\"flex-1 border rounded px-3 py-2 mr-2 focus:outline-none focus:border-primary-500\"\n                  placeholder=\"Type a comment...\"\n                  value={commentInput}\n                  onChange={e => setCommentInput(e.target.value)}\n                />\n                <button type=\"submit\" className=\"bg-primary-600 text-white px-4 py-2 rounded font-semibold disabled:opacity-50\" disabled={!commentInput.trim()}>\n                  Send\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n      {/* Slide number at bottom-right */}\n      {slides.length > 0 && presentation && typeof presentation.currentSlideIndex === 'number' && (\n        <div className=\"absolute bottom-6 right-8 z-20 text-white text-lg bg-black/60 px-4 py-2 rounded-full shadow\">\n          {presentation.currentSlideIndex + 1} / {slides.length}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LivePresentationViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}