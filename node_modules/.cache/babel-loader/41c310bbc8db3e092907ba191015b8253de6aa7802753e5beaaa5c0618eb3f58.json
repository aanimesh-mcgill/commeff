{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\PresentationEditorV3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { doc, getDoc, updateDoc, setDoc, collection, getDocs, query, orderBy } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { PresentationToolbar } from './PresentationToolbar';\nimport { SlidesSidebar } from './SlidesSidebar';\nimport { SlideCanvas } from './SlideCanvas';\nimport { ToastContainer } from '../components/Toast';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Types (replace with import from types/presentation if available)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPresentation = {\n  id: 'presentation-1',\n  title: 'Untitled Presentation',\n  slides: [{\n    id: 'slide-1',\n    title: 'Welcome Slide',\n    elements: []\n  }],\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  currentSlideIndex: 0\n};\nexport default function PresentationEditorV3({\n  courseId,\n  presentationId = 'demo-presentation',\n  title\n}) {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [presentation, setPresentation] = useState(initialPresentation);\n  const [editorState, setEditorState] = useState({\n    selectedElement: null,\n    tool: 'select',\n    isPresenting: false,\n    zoom: 100\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [toasts, setToasts] = useState([]);\n\n  // Toast management\n  const addToast = useCallback((message, type = 'info', duration = 3000) => {\n    const id = Date.now().toString();\n    setToasts(prev => [...prev, {\n      id,\n      message,\n      type,\n      duration\n    }]);\n  }, []);\n  const removeToast = useCallback(id => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Load presentation from Firestore\n  useEffect(() => {\n    const loadPresentation = async () => {\n      try {\n        console.log('Loading presentation:', presentationId);\n        const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n        const docSnap = await getDoc(docRef);\n        let slides = [];\n        // Fetch slides from subcollection\n        const slidesCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides');\n        const slidesQuery = query(slidesCol, orderBy('order'));\n        const slidesSnap = await getDocs(slidesQuery);\n        slides = slidesSnap.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n            elements: Array.isArray(data.elements) ? data.elements : []\n          };\n        });\n        console.log('[PresentationEditorV3] Fetched slides from subcollection:', slides);\n        if (docSnap.exists()) {\n          var _data$createdAt, _data$updatedAt;\n          const data = docSnap.data();\n          setPresentation({\n            ...data,\n            slides,\n            createdAt: ((_data$createdAt = data.createdAt) === null || _data$createdAt === void 0 ? void 0 : _data$createdAt.toDate()) || new Date(),\n            updatedAt: ((_data$updatedAt = data.updatedAt) === null || _data$updatedAt === void 0 ? void 0 : _data$updatedAt.toDate()) || new Date()\n          });\n        } else {\n          if (!currentUser) throw new Error('Not authenticated');\n          console.log('No presentation found, creating new one');\n          await setDoc(docRef, {\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            ownerId: currentUser.uid,\n            courseId: courseId || null\n          });\n          setPresentation({\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            ownerId: currentUser.uid,\n            courseId: courseId || null\n          });\n        }\n      } catch (error) {\n        console.error('Error loading presentation:', error);\n        if (error.code === 'permission-denied' || error.message.includes('permission')) {\n          addToast('You do not have permission to access this presentation.', 'error', 6000);\n        } else {\n          addToast('Failed to load presentation', 'error');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (currentUser) loadPresentation();\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Add logging after fetching presentation and slides\n  useEffect(() => {\n    if (presentation) {\n      console.log('[PresentationEditorV3] Loaded presentation:', presentation);\n      if (presentation.slides) {\n        console.log('[PresentationEditorV3] Slides array:', presentation.slides);\n        presentation.slides.forEach((slide, idx) => {\n          console.log(`[PresentationEditorV3] Slide ${idx} imageUrl:`, slide.imageUrl);\n        });\n      } else {\n        console.log('[PresentationEditorV3] No slides found in presentation.');\n      }\n    }\n  }, [presentation]);\n\n  // Auto-save with debouncing\n  const saveTimeoutRef = React.useRef(null);\n  const savePresentation = useCallback(async presentationData => {\n    try {\n      if (!currentUser) throw new Error('Not authenticated');\n      console.log('Saving presentation:', presentationData);\n      setIsSaving(true);\n      const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n      await updateDoc(docRef, {\n        ...presentationData,\n        updatedAt: new Date(),\n        ownerId: currentUser.uid,\n        courseId: courseId || null\n      });\n      console.log('Presentation saved successfully');\n      addToast('Presentation saved', 'success', 2000);\n    } catch (error) {\n      console.error('Error saving presentation:', error);\n      if (error.code === 'permission-denied' || error.message.includes('permission')) {\n        addToast('You do not have permission to save this presentation.', 'error', 6000);\n      } else {\n        addToast('Failed to save presentation', 'error');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Debounced auto-save\n  useEffect(() => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    if (!isLoading) {\n      saveTimeoutRef.current = setTimeout(() => {\n        savePresentation(presentation);\n      }, 2000); // 2 second delay\n    }\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, [presentation, savePresentation, isLoading]);\n\n  // Manual save handler\n  const handleSave = useCallback(async () => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    await savePresentation(presentation);\n  }, [presentation, savePresentation]);\n\n  // Slide management handlers\n  const handleAddSlide = useCallback(() => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: []\n    };\n    setPresentation(prev => ({\n      ...prev,\n      slides: [...prev.slides, newSlide],\n      currentSlideIndex: prev.slides.length\n    }));\n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n  const handleDuplicateSlide = useCallback(index => {\n    const slideToDuplicate = presentation.slides[index];\n    const newSlide = {\n      ...slideToDuplicate,\n      id: `slide-${Date.now()}`,\n      title: `${slideToDuplicate.title} (Copy)`\n    };\n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1\n    }));\n    addToast('Slide duplicated', 'success', 2000);\n  }, [presentation.slides, addToast]);\n  const handleDeleteSlide = useCallback(index => {\n    if (presentation.slides.length <= 1) {\n      addToast('Cannot delete the last slide', 'warning');\n      return;\n    }\n    const newSlides = presentation.slides.filter((_, i) => i !== index);\n    const newCurrentIndex = Math.min(presentation.currentSlideIndex, newSlides.length - 1);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: newCurrentIndex\n    }));\n    addToast('Slide deleted', 'success', 2000);\n  }, [presentation.slides, presentation.currentSlideIndex, addToast]);\n  const handleAddSlideAfter = useCallback(index => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: []\n    };\n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1\n    }));\n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  // Element management handlers\n  const handleElementSelect = useCallback(elementId => {\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: elementId\n    }));\n  }, []);\n  const handleElementUpdate = useCallback((elementId, updates) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      const elementIndex = currentSlide.elements.findIndex(el => el.id === elementId);\n      if (elementIndex !== -1) {\n        newSlides[prev.currentSlideIndex] = {\n          ...currentSlide,\n          elements: currentSlide.elements.map((el, index) => index === elementIndex ? {\n            ...el,\n            ...updates\n          } : el)\n        };\n      }\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, []);\n  const handleElementAdd = useCallback(elementData => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      ...elementData\n    };\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: [...currentSlide.elements, newElement]\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n\n    // Auto-select the new element\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: newElement.id\n    }));\n    addToast('Element added', 'success', 1500);\n  }, [addToast]);\n  const handleElementDelete = useCallback(elementId => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: currentSlide.elements.filter(el => el.id !== elementId)\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: null\n    }));\n    addToast('Element deleted', 'success', 1500);\n  }, [addToast]);\n\n  // Other handlers\n  const handleToolChange = useCallback(tool => {\n    setEditorState(prev => ({\n      ...prev,\n      tool\n    }));\n  }, []);\n  const handleTitleChange = useCallback(title => {\n    setPresentation(prev => ({\n      ...prev,\n      title\n    }));\n  }, []);\n  const handleSlideSelect = useCallback(index => {\n    setPresentation(prev => ({\n      ...prev,\n      currentSlideIndex: index\n    }));\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: null\n    }));\n  }, []);\n  const handlePresent = useCallback(() => {\n    setEditorState(prev => ({\n      ...prev,\n      isPresenting: true\n    }));\n    addToast('Starting presentation...', 'info');\n  }, [addToast]);\n\n  // Remove auto-save useEffect\n  // Add slide change handler\n  const handleSlideChange = useCallback((field, value) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const idx = prev.currentSlideIndex;\n      if (!newSlides[idx]) return prev;\n      newSlides[idx] = {\n        ...newSlides[idx],\n        [field]: value\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, []);\n\n  // Find selected element from current slide\n  const selectedElement = React.useMemo(() => {\n    const slide = presentation.slides[presentation.currentSlideIndex];\n    if (!slide) return null;\n    return slide.elements.find(el => el.id === editorState.selectedElement) || null;\n  }, [presentation, editorState.selectedElement]);\n\n  // Compute formatting state for toolbar\n  const formattingState = React.useMemo(() => {\n    if (!selectedElement || selectedElement.type !== 'text') return {};\n    const style = selectedElement.style || {};\n    return {\n      bold: style.fontWeight === 'bold',\n      italic: style.fontStyle === 'italic',\n      underline: style.textDecoration === 'underline',\n      fontSize: style.fontSize || 16,\n      color: style.color || '#000000',\n      align: style.textAlign || 'left'\n    };\n  }, [selectedElement]);\n\n  // Handler for formatting actions\n  const handleFormat = useCallback((action, value) => {\n    if (!selectedElement || selectedElement.type !== 'text') return;\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const slide = newSlides[prev.currentSlideIndex];\n      const idx = slide.elements.findIndex(el => el.id === selectedElement.id);\n      if (idx === -1) return prev;\n      const el = slide.elements[idx];\n      const style = {\n        ...el.style\n      };\n      switch (action) {\n        case 'bold':\n          style.fontWeight = style.fontWeight === 'bold' ? 'normal' : 'bold';\n          break;\n        case 'italic':\n          style.fontStyle = style.fontStyle === 'italic' ? 'normal' : 'italic';\n          break;\n        case 'underline':\n          style.textDecoration = style.textDecoration === 'underline' ? 'none' : 'underline';\n          break;\n        case 'fontSize':\n          style.fontSize = value || 20; // Default to 20 if not provided\n          break;\n        case 'color':\n          style.color = value || '#000000';\n          break;\n        case 'align':\n          style.textAlign = value;\n          break;\n        default:\n          break;\n      }\n      slide.elements[idx] = {\n        ...el,\n        style\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, [selectedElement]);\n\n  // Loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex items-center justify-center bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading presentation...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this);\n  }\n  const slides = Array.isArray(presentation.slides) ? presentation.slides : [];\n  const currentSlide = slides[presentation.currentSlideIndex] || {\n    elements: []\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(PresentationToolbar, {\n      editorState: editorState,\n      onToolChange: handleToolChange,\n      onSave: handleSave,\n      onPresent: handlePresent,\n      onUndo: () => {} // TODO: Implement undo/redo\n      ,\n      onRedo: () => {},\n      presentationTitle: presentation.title,\n      onTitleChange: handleTitleChange,\n      isSaving: isSaving,\n      selectedElement: selectedElement,\n      formattingState: formattingState,\n      onFormat: handleFormat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full overflow-y-auto\",\n        style: {\n          maxHeight: 'calc(100vh - 64px)',\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(SlidesSidebar, {\n          slides: presentation.slides,\n          currentSlideIndex: presentation.currentSlideIndex,\n          onSlideSelect: handleSlideSelect,\n          onAddSlide: handleAddSlide,\n          onDuplicateSlide: handleDuplicateSlide,\n          onDeleteSlide: handleDeleteSlide,\n          onAddSlideAfter: handleAddSlideAfter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlideCanvas, {\n        slide: currentSlide,\n        editorState: editorState,\n        onElementSelect: handleElementSelect,\n        onElementUpdate: handleElementUpdate,\n        onElementAdd: handleElementAdd,\n        onElementDelete: handleElementDelete,\n        onSlideChange: handleSlideChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      toasts: toasts,\n      removeToast: removeToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 5\n  }, this);\n}\n_s(PresentationEditorV3, \"TJZaTCGuEph57GBAeWMzMcmE5ME=\", false, function () {\n  return [useAuth];\n});\n_c = PresentationEditorV3;\nvar _c;\n$RefreshReg$(_c, \"PresentationEditorV3\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","doc","getDoc","updateDoc","setDoc","collection","getDocs","query","orderBy","db","PresentationToolbar","SlidesSidebar","SlideCanvas","ToastContainer","useAuth","jsxDEV","_jsxDEV","initialPresentation","id","title","slides","elements","createdAt","Date","updatedAt","currentSlideIndex","PresentationEditorV3","courseId","presentationId","_s","currentUser","presentation","setPresentation","editorState","setEditorState","selectedElement","tool","isPresenting","zoom","isLoading","setIsLoading","isSaving","setIsSaving","toasts","setToasts","addToast","message","type","duration","now","toString","prev","removeToast","filter","toast","loadPresentation","console","log","docRef","docSnap","slidesCol","slidesQuery","slidesSnap","docs","map","data","Array","isArray","exists","_data$createdAt","_data$updatedAt","toDate","Error","ownerId","uid","error","code","includes","forEach","slide","idx","imageUrl","saveTimeoutRef","useRef","savePresentation","presentationData","current","clearTimeout","setTimeout","handleSave","handleAddSlide","newSlide","length","handleDuplicateSlide","index","slideToDuplicate","newSlides","splice","handleDeleteSlide","_","i","newCurrentIndex","Math","min","handleAddSlideAfter","handleElementSelect","elementId","handleElementUpdate","updates","currentSlide","elementIndex","findIndex","el","handleElementAdd","elementData","newElement","handleElementDelete","handleToolChange","handleTitleChange","handleSlideSelect","handlePresent","handleSlideChange","field","value","useMemo","find","formattingState","style","bold","fontWeight","italic","fontStyle","underline","textDecoration","fontSize","color","align","textAlign","handleFormat","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onToolChange","onSave","onPresent","onUndo","onRedo","presentationTitle","onTitleChange","onFormat","maxHeight","minWidth","onSlideSelect","onAddSlide","onDuplicateSlide","onDeleteSlide","onAddSlideAfter","onElementSelect","onElementUpdate","onElementAdd","onElementDelete","onSlideChange","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/PresentationEditorV3.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { doc, getDoc, updateDoc, setDoc, collection, getDocs, query, orderBy } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { PresentationToolbar } from './PresentationToolbar';\nimport { SlidesSidebar } from './SlidesSidebar';\nimport { SlideCanvas } from './SlideCanvas';\nimport { ToastContainer } from '../components/Toast';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Types (replace with import from types/presentation if available)\nconst initialPresentation = {\n  id: 'presentation-1',\n  title: 'Untitled Presentation',\n  slides: [\n    {\n      id: 'slide-1',\n      title: 'Welcome Slide',\n      elements: [],\n    },\n  ],\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  currentSlideIndex: 0,\n};\n\nexport default function PresentationEditorV3({ courseId, presentationId = 'demo-presentation', title }) {\n  const { currentUser } = useAuth();\n  const [presentation, setPresentation] = useState(initialPresentation);\n  const [editorState, setEditorState] = useState({\n    selectedElement: null,\n    tool: 'select',\n    isPresenting: false,\n    zoom: 100,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [toasts, setToasts] = useState([]);\n\n  // Toast management\n  const addToast = useCallback((message, type = 'info', duration = 3000) => {\n    const id = Date.now().toString();\n    setToasts(prev => [...prev, { id, message, type, duration }]);\n  }, []);\n\n  const removeToast = useCallback((id) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Load presentation from Firestore\n  useEffect(() => {\n    const loadPresentation = async () => {\n      try {\n        console.log('Loading presentation:', presentationId);\n        const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n        const docSnap = await getDoc(docRef);\n        let slides = [];\n        // Fetch slides from subcollection\n        const slidesCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides');\n        const slidesQuery = query(slidesCol, orderBy('order'));\n        const slidesSnap = await getDocs(slidesQuery);\n        slides = slidesSnap.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n            elements: Array.isArray(data.elements) ? data.elements : [],\n          };\n        });\n        console.log('[PresentationEditorV3] Fetched slides from subcollection:', slides);\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          setPresentation({\n            ...data,\n            slides,\n            createdAt: data.createdAt?.toDate() || new Date(),\n            updatedAt: data.updatedAt?.toDate() || new Date(),\n          });\n        } else {\n          if (!currentUser) throw new Error('Not authenticated');\n          console.log('No presentation found, creating new one');\n          await setDoc(docRef, {\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            ownerId: currentUser.uid,\n            courseId: courseId || null,\n          });\n          setPresentation({ ...initialPresentation, slides: [], id: presentationId, ownerId: currentUser.uid, courseId: courseId || null });\n        }\n      } catch (error) {\n        console.error('Error loading presentation:', error);\n        if (error.code === 'permission-denied' || error.message.includes('permission')) {\n          addToast('You do not have permission to access this presentation.', 'error', 6000);\n        } else {\n          addToast('Failed to load presentation', 'error');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (currentUser) loadPresentation();\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Add logging after fetching presentation and slides\n  useEffect(() => {\n    if (presentation) {\n      console.log('[PresentationEditorV3] Loaded presentation:', presentation);\n      if (presentation.slides) {\n        console.log('[PresentationEditorV3] Slides array:', presentation.slides);\n        presentation.slides.forEach((slide, idx) => {\n          console.log(`[PresentationEditorV3] Slide ${idx} imageUrl:`, slide.imageUrl);\n        });\n      } else {\n        console.log('[PresentationEditorV3] No slides found in presentation.');\n      }\n    }\n  }, [presentation]);\n\n  // Auto-save with debouncing\n  const saveTimeoutRef = React.useRef(null);\n  const savePresentation = useCallback(async (presentationData) => {\n    try {\n      if (!currentUser) throw new Error('Not authenticated');\n      console.log('Saving presentation:', presentationData);\n      setIsSaving(true);\n      \n      const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n      await updateDoc(docRef, {\n        ...presentationData,\n        updatedAt: new Date(),\n        ownerId: currentUser.uid,\n        courseId: courseId || null,\n      });\n      \n      console.log('Presentation saved successfully');\n      addToast('Presentation saved', 'success', 2000);\n    } catch (error) {\n      console.error('Error saving presentation:', error);\n      if (error.code === 'permission-denied' || error.message.includes('permission')) {\n        addToast('You do not have permission to save this presentation.', 'error', 6000);\n      } else {\n        addToast('Failed to save presentation', 'error');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Debounced auto-save\n  useEffect(() => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    \n    if (!isLoading) {\n      saveTimeoutRef.current = setTimeout(() => {\n        savePresentation(presentation);\n      }, 2000); // 2 second delay\n    }\n\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, [presentation, savePresentation, isLoading]);\n\n  // Manual save handler\n  const handleSave = useCallback(async () => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    await savePresentation(presentation);\n  }, [presentation, savePresentation]);\n\n  // Slide management handlers\n  const handleAddSlide = useCallback(() => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: [],\n    };\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: [...prev.slides, newSlide],\n      currentSlideIndex: prev.slides.length,\n    }));\n    \n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  const handleDuplicateSlide = useCallback((index) => {\n    const slideToDuplicate = presentation.slides[index];\n    const newSlide = {\n      ...slideToDuplicate,\n      id: `slide-${Date.now()}`,\n      title: `${slideToDuplicate.title} (Copy)`,\n    };\n    \n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1,\n    }));\n    \n    addToast('Slide duplicated', 'success', 2000);\n  }, [presentation.slides, addToast]);\n\n  const handleDeleteSlide = useCallback((index) => {\n    if (presentation.slides.length <= 1) {\n      addToast('Cannot delete the last slide', 'warning');\n      return;\n    }\n    \n    const newSlides = presentation.slides.filter((_, i) => i !== index);\n    const newCurrentIndex = Math.min(\n      presentation.currentSlideIndex,\n      newSlides.length - 1\n    );\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: newCurrentIndex,\n    }));\n    \n    addToast('Slide deleted', 'success', 2000);\n  }, [presentation.slides, presentation.currentSlideIndex, addToast]);\n\n  const handleAddSlideAfter = useCallback((index) => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: [],\n    };\n    \n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1,\n    }));\n    \n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  // Element management handlers\n  const handleElementSelect = useCallback((elementId) => {\n    setEditorState(prev => ({ ...prev, selectedElement: elementId }));\n  }, []);\n\n  const handleElementUpdate = useCallback((elementId, updates) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      const elementIndex = currentSlide.elements.findIndex(el => el.id === elementId);\n      \n      if (elementIndex !== -1) {\n        newSlides[prev.currentSlideIndex] = {\n          ...currentSlide,\n          elements: currentSlide.elements.map((el, index) =>\n            index === elementIndex ? { ...el, ...updates } : el\n          ),\n        };\n      }\n      \n      return { ...prev, slides: newSlides };\n    });\n  }, []);\n\n  const handleElementAdd = useCallback((elementData) => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      ...elementData,\n    };\n    \n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      \n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: [...currentSlide.elements, newElement],\n      };\n      \n      return { ...prev, slides: newSlides };\n    });\n    \n    // Auto-select the new element\n    setEditorState(prev => ({ ...prev, selectedElement: newElement.id }));\n    addToast('Element added', 'success', 1500);\n  }, [addToast]);\n\n  const handleElementDelete = useCallback((elementId) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      \n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: currentSlide.elements.filter(el => el.id !== elementId),\n      };\n      \n      return { ...prev, slides: newSlides };\n    });\n    \n    setEditorState(prev => ({ ...prev, selectedElement: null }));\n    addToast('Element deleted', 'success', 1500);\n  }, [addToast]);\n\n  // Other handlers\n  const handleToolChange = useCallback((tool) => {\n    setEditorState(prev => ({ ...prev, tool }));\n  }, []);\n\n  const handleTitleChange = useCallback((title) => {\n    setPresentation(prev => ({ ...prev, title }));\n  }, []);\n\n  const handleSlideSelect = useCallback((index) => {\n    setPresentation(prev => ({ ...prev, currentSlideIndex: index }));\n    setEditorState(prev => ({ ...prev, selectedElement: null }));\n  }, []);\n\n  const handlePresent = useCallback(() => {\n    setEditorState(prev => ({ ...prev, isPresenting: true }));\n    addToast('Starting presentation...', 'info');\n  }, [addToast]);\n\n  // Remove auto-save useEffect\n  // Add slide change handler\n  const handleSlideChange = useCallback((field, value) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const idx = prev.currentSlideIndex;\n      if (!newSlides[idx]) return prev;\n      newSlides[idx] = { ...newSlides[idx], [field]: value };\n      return { ...prev, slides: newSlides };\n    });\n  }, []);\n\n  // Find selected element from current slide\n  const selectedElement = React.useMemo(() => {\n    const slide = presentation.slides[presentation.currentSlideIndex];\n    if (!slide) return null;\n    return slide.elements.find(el => el.id === editorState.selectedElement) || null;\n  }, [presentation, editorState.selectedElement]);\n\n  // Compute formatting state for toolbar\n  const formattingState = React.useMemo(() => {\n    if (!selectedElement || selectedElement.type !== 'text') return {};\n    const style = selectedElement.style || {};\n    return {\n      bold: style.fontWeight === 'bold',\n      italic: style.fontStyle === 'italic',\n      underline: style.textDecoration === 'underline',\n      fontSize: style.fontSize || 16,\n      color: style.color || '#000000',\n      align: style.textAlign || 'left',\n    };\n  }, [selectedElement]);\n\n  // Handler for formatting actions\n  const handleFormat = useCallback((action, value) => {\n    if (!selectedElement || selectedElement.type !== 'text') return;\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const slide = newSlides[prev.currentSlideIndex];\n      const idx = slide.elements.findIndex(el => el.id === selectedElement.id);\n      if (idx === -1) return prev;\n      const el = slide.elements[idx];\n      const style = { ...el.style };\n      switch (action) {\n        case 'bold':\n          style.fontWeight = style.fontWeight === 'bold' ? 'normal' : 'bold';\n          break;\n        case 'italic':\n          style.fontStyle = style.fontStyle === 'italic' ? 'normal' : 'italic';\n          break;\n        case 'underline':\n          style.textDecoration = style.textDecoration === 'underline' ? 'none' : 'underline';\n          break;\n        case 'fontSize':\n          style.fontSize = value || 20; // Default to 20 if not provided\n          break;\n        case 'color':\n          style.color = value || '#000000';\n          break;\n        case 'align':\n          style.textAlign = value;\n          break;\n        default:\n          break;\n      }\n      slide.elements[idx] = { ...el, style };\n      return { ...prev, slides: newSlides };\n    });\n  }, [selectedElement]);\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"h-screen flex items-center justify-center bg-gray-100\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading presentation...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const slides = Array.isArray(presentation.slides) ? presentation.slides : [];\n  const currentSlide = slides[presentation.currentSlideIndex] || { elements: [] };\n\n  return (\n    <div className=\"h-screen flex flex-col\">\n      {/* Toolbar */}\n      <PresentationToolbar\n        editorState={editorState}\n        onToolChange={handleToolChange}\n        onSave={handleSave}\n        onPresent={handlePresent}\n        onUndo={() => {}} // TODO: Implement undo/redo\n        onRedo={() => {}}\n        presentationTitle={presentation.title}\n        onTitleChange={handleTitleChange}\n        isSaving={isSaving}\n        selectedElement={selectedElement}\n        formattingState={formattingState}\n        onFormat={handleFormat}\n      />\n      <div className=\"flex-1 flex\">\n        {/* Sidebar */}\n        <div className=\"h-full overflow-y-auto\" style={{ maxHeight: 'calc(100vh - 64px)', minWidth: 120 }}>\n          <SlidesSidebar\n            slides={presentation.slides}\n            currentSlideIndex={presentation.currentSlideIndex}\n            onSlideSelect={handleSlideSelect}\n            onAddSlide={handleAddSlide}\n            onDuplicateSlide={handleDuplicateSlide}\n            onDeleteSlide={handleDeleteSlide}\n            onAddSlideAfter={handleAddSlideAfter}\n          />\n        </div>\n        {/* Canvas */}\n        <SlideCanvas\n          slide={currentSlide}\n          editorState={editorState}\n          onElementSelect={handleElementSelect}\n          onElementUpdate={handleElementUpdate}\n          onElementAdd={handleElementAdd}\n          onElementDelete={handleElementDelete}\n          onSlideChange={handleSlideChange}\n        />\n      </div>\n      {/* Toast notifications */}\n      <ToastContainer toasts={toasts} removeToast={removeToast} />\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}