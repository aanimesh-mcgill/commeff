{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\PresentationEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { Loader, ArrowLeft, Plus } from 'lucide-react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport SlideService from '../services/SlideService';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SLIDE_TEMPLATES = [{\n  type: 'title',\n  label: 'Title Template',\n  content: {\n    header: '',\n    content: ''\n  }\n}, {\n  type: 'basic',\n  label: 'Basic Template',\n  content: {\n    header: '',\n    content: ''\n  }\n}, {\n  type: 'mcq',\n  label: 'MC Template',\n  content: {\n    header: '',\n    question: '',\n    options: ['', '', '', ''],\n    correct: []\n  }\n}, {\n  type: 'open',\n  label: 'Open-ended',\n  content: {\n    header: '',\n    question: '',\n    answer: ''\n  }\n}];\nconst quillModules = {\n  toolbar: [[{\n    'font': []\n  }, {\n    'size': []\n  }], ['bold', 'italic', 'underline', 'strike'], [{\n    'color': []\n  }, {\n    'background': []\n  }], [{\n    'script': 'sub'\n  }, {\n    'script': 'super'\n  }], [{\n    'header': 1\n  }, {\n    'header': 2\n  }, 'blockquote', 'code-block'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], [{\n    'direction': 'rtl'\n  }, {\n    'align': []\n  }], ['link', 'image', 'video'], ['clean']]\n};\nconst quillFormats = ['font', 'size', 'bold', 'italic', 'underline', 'strike', 'color', 'background', 'script', 'header', 'blockquote', 'code-block', 'list', 'bullet', 'indent', 'direction', 'align', 'link', 'image', 'video'];\n\n// Define constants for slide size\nconst SLIDE_WIDTH = 960;\nconst SLIDE_HEIGHT = 720;\nconst PresentationEditor = () => {\n  _s();\n  var _slides$selectedSlide, _slides$selectedSlide2, _slides$selectedSlide3, _slides$selectedSlide4;\n  const {\n    courseId,\n    presentationId\n  } = useParams();\n  const navigate = useNavigate();\n  const [slides, setSlides] = useState([]);\n  const [slideIds, setSlideIds] = useState([]);\n  const [selectedSlide, setSelectedSlide] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [template, setTemplate] = useState('title');\n  // Track last selected slide for auto-save\n  const [lastSelectedSlide, setLastSelectedSlide] = useState(0);\n  useEffect(() => {\n    const fetchSlides = async () => {\n      setLoading(true);\n      try {\n        const data = await SlideService.getSlides(courseId, presentationId);\n        setSlides(data.map(s => ({\n          ...s,\n          id: undefined\n        })));\n        setSlideIds(data.map(s => s.id));\n        setSelectedSlide(0);\n        console.log('[PresentationEditor] Slides loaded:', data);\n      } catch (err) {\n        console.error('[PresentationEditor] Error loading slides:', err);\n        setSlides([{\n          type: 'title',\n          content: ''\n        }]);\n        setSlideIds([null]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSlides();\n  }, [courseId, presentationId]);\n  const saveSlide = async (slide, idx) => {\n    try {\n      // Remove 'id' field before saving to Firestore\n      const {\n        id,\n        ...slideData\n      } = slide;\n      if (slideIds[idx]) {\n        await SlideService.updateSlide(courseId, presentationId, slideIds[idx], slideData);\n        console.log('[PresentationEditor] Slide updated:', slideData);\n      } else {\n        const docRef = await SlideService.addSlide(courseId, presentationId, slideData);\n        setSlideIds(prev => prev.map((id, i) => i === idx ? docRef.id : id));\n        console.log('[PresentationEditor] Slide added:', slideData);\n      }\n    } catch (err) {\n      console.error('[PresentationEditor] Error saving slide:', err);\n    }\n  };\n  const handleDeleteSlide = async idx => {\n    if (slideIds[idx]) {\n      try {\n        await SlideService.deleteSlide(courseId, presentationId, slideIds[idx]);\n        console.log('[PresentationEditor] Slide deleted:', slideIds[idx]);\n      } catch (err) {\n        console.error('[PresentationEditor] Error deleting slide:', err);\n      }\n    }\n    setSlides(prev => prev.filter((_, i) => i !== idx));\n    setSlideIds(prev => prev.filter((_, i) => i !== idx));\n    setSelectedSlide(prev => Math.max(0, prev === idx ? prev - 1 : prev > idx ? prev - 1 : prev));\n  };\n\n  // Drag-and-drop reorder\n  const onDragEnd = async result => {\n    if (!result.destination) return;\n    const from = result.source.index;\n    const to = result.destination.index;\n    if (from === to) return;\n    const newSlides = Array.from(slides);\n    const newSlideIds = Array.from(slideIds);\n    const [removedSlide] = newSlides.splice(from, 1);\n    const [removedId] = newSlideIds.splice(from, 1);\n    newSlides.splice(to, 0, removedSlide);\n    newSlideIds.splice(to, 0, removedId);\n    setSlides(newSlides);\n    setSlideIds(newSlideIds);\n    setSelectedSlide(to);\n    // Persist order in Firestore\n    const slideIdOrderPairs = newSlideIds.map((id, idx) => ({\n      id,\n      order: idx\n    }));\n    try {\n      await SlideService.updateSlideOrders(courseId, presentationId, slideIdOrderPairs.filter(s => s.id));\n      console.log('[PresentationEditor] Slide order updated:', slideIdOrderPairs);\n    } catch (err) {\n      console.error('[PresentationEditor] Error updating slide order:', err);\n    }\n  };\n\n  // Add slide below selected\n  const handleAddSlide = async type => {\n    const templateObj = SLIDE_TEMPLATES.find(t => t.type === type);\n    const insertIdx = selectedSlide + 1;\n    const newSlide = {\n      ...templateObj.content,\n      type,\n      order: insertIdx\n    };\n    setSlides(prev => [...prev.slice(0, insertIdx), newSlide, ...prev.slice(insertIdx)]);\n    setSlideIds(prev => [...prev.slice(0, insertIdx), null, ...prev.slice(insertIdx)]);\n    setSelectedSlide(insertIdx);\n    setTimeout(() => saveSlide(newSlide, insertIdx), 0);\n    // Update order for all slides after insert\n    setTimeout(() => {\n      const slideIdOrderPairs = [...slideIds.slice(0, insertIdx), null, ...slideIds.slice(insertIdx)].map((id, idx) => ({\n        id,\n        order: idx\n      })).filter(s => s.id);\n      SlideService.updateSlideOrders(courseId, presentationId, slideIdOrderPairs);\n    }, 500);\n  };\n\n  // Save slide on edit\n  const handleSlideChange = (field, value) => {\n    setSlides(prev => prev.map((slide, idx) => idx === selectedSlide ? {\n      ...slide,\n      [field]: value\n    } : slide));\n    setTimeout(() => saveSlide({\n      ...slides[selectedSlide],\n      [field]: value\n    }, selectedSlide), 0);\n  };\n\n  // MCQ: toggle bold for correct answer\n  const toggleMCQCorrect = optionIdx => {\n    setSlides(prev => prev.map((slide, idx) => {\n      if (idx !== selectedSlide) return slide;\n      const correct = slide.correct || [];\n      const isCorrect = correct.includes(optionIdx);\n      return {\n        ...slide,\n        correct: isCorrect ? correct.filter(i => i !== optionIdx) : [...correct, optionIdx]\n      };\n    }));\n  };\n\n  // For ReactQuill, limit content to 10 lines (approximate by counting <p> tags)\n  const handleQuillChange = val => {\n    // Count lines by <p> tags\n    const lineCount = (val.match(/<p[ >]/g) || []).length;\n    if (lineCount > 10) {\n      console.log('[Editor] Max 10 lines reached in content.');\n      return;\n    }\n    handleSlideChange('content', val);\n    console.log(`[PresentationEditor] Content updated for slide ${selectedSlide}`);\n  };\n\n  // Auto-save when switching slides\n  const handleSelectSlide = idx => {\n    if (idx !== selectedSlide) {\n      console.log(`[PresentationEditor] Auto-saving slide ${selectedSlide} before switching to slide ${idx}`);\n      saveSlide(slides[selectedSlide], selectedSlide);\n      setSelectedSlide(idx);\n      setLastSelectedSlide(idx);\n      console.log(`[PresentationEditor] Switched to slide ${idx}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto px-4 flex gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        style: {\n          width: SLIDE_WIDTH / 2 + 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 text-lg font-semibold\",\n          children: \"Slide Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border shadow-lg flex flex-col\",\n          style: {\n            width: SLIDE_WIDTH / 2,\n            height: SLIDE_HEIGHT / 2,\n            borderRadius: 8,\n            overflow: 'hidden',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-8 pt-8 pb-2 text-2xl font-bold border-b border-gray-200\",\n            style: {\n              minHeight: 60,\n              maxHeight: 60,\n              overflow: 'hidden'\n            },\n            children: ((_slides$selectedSlide = slides[selectedSlide]) === null || _slides$selectedSlide === void 0 ? void 0 : _slides$selectedSlide.header) || /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: \"(No Title)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-8 py-6 text-lg\",\n            style: {\n              height: SLIDE_HEIGHT / 2 - 60,\n              overflow: 'hidden'\n            },\n            dangerouslySetInnerHTML: {\n              __html: ((_slides$selectedSlide2 = slides[selectedSlide]) === null || _slides$selectedSlide2 === void 0 ? void 0 : _slides$selectedSlide2.content) || '<span class=\"text-gray-400\">(No Content)</span>'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 flex gap-2 w-full max-w-2xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-primary flex items-center\",\n              onClick: () => handleAddSlide(template),\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"h-4 w-4 mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), \" Slide\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"ml-2 input-field\",\n              value: template,\n              onChange: e => setTemplate(e.target.value),\n              children: SLIDE_TEMPLATES.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: t.type,\n                children: t.label\n              }, t.type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex gap-2 w-full max-w-2xl\",\n            children: [SLIDE_TEMPLATES.map(t => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn-secondary ${template === t.type ? 'bg-primary-100 text-primary-700' : ''}`,\n              onClick: () => setTemplate(t.type),\n              children: t.label\n            }, t.type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-secondary\",\n              onClick: () => setSlides(prev => prev.map((s, i) => i === selectedSlide ? {\n                ...s,\n                ...SLIDE_TEMPLATES.find(t => t.type === template).content,\n                type: template\n              } : s)),\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-primary ml-2\",\n              onClick: async () => {\n                console.log('[PresentationEditor] Saving all slides...');\n                for (let i = 0; i < slides.length; i++) {\n                  await saveSlide(slides[i], i);\n                  console.log(`[PresentationEditor] Saved slide ${i}`);\n                }\n                console.log('[PresentationEditor] All slides saved.');\n              },\n              children: \"Save Presentation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white border shadow-lg flex flex-col\",\n          style: {\n            width: SLIDE_WIDTH,\n            height: SLIDE_HEIGHT,\n            borderRadius: 12,\n            overflow: 'hidden',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"px-8 pt-8 pb-2 text-2xl font-bold border-b border-gray-200 bg-transparent focus:outline-none\",\n            placeholder: \"Click to add title...\",\n            value: ((_slides$selectedSlide3 = slides[selectedSlide]) === null || _slides$selectedSlide3 === void 0 ? void 0 : _slides$selectedSlide3.header) || '',\n            maxLength: 60,\n            onChange: e => handleSlideChange('header', e.target.value.replace(/\\n/g, '')),\n            style: {\n              minHeight: 60,\n              maxHeight: 60,\n              borderTopLeftRadius: 12,\n              borderTopRightRadius: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-8 py-6 flex-1\",\n            style: {\n              height: SLIDE_HEIGHT - 60,\n              overflow: 'hidden'\n            },\n            children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n              theme: \"snow\",\n              value: ((_slides$selectedSlide4 = slides[selectedSlide]) === null || _slides$selectedSlide4 === void 0 ? void 0 : _slides$selectedSlide4.content) || '',\n              onChange: handleQuillChange,\n              modules: quillModules,\n              formats: quillFormats,\n              placeholder: \"Click to add content...\",\n              style: {\n                height: SLIDE_HEIGHT - 120,\n                maxHeight: SLIDE_HEIGHT - 120,\n                overflowY: 'auto',\n                fontSize: 20\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(PresentationEditor, \"WIxzQqCAcyfKdhDgI2m+X2tTVd4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PresentationEditor;\nexport default PresentationEditor;\nvar _c;\n$RefreshReg$(_c, \"PresentationEditor\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useNavigate","Loader","ArrowLeft","Plus","ReactQuill","SlideService","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","SLIDE_TEMPLATES","type","label","content","header","question","options","correct","answer","quillModules","toolbar","quillFormats","SLIDE_WIDTH","SLIDE_HEIGHT","PresentationEditor","_s","_slides$selectedSlide","_slides$selectedSlide2","_slides$selectedSlide3","_slides$selectedSlide4","courseId","presentationId","navigate","slides","setSlides","slideIds","setSlideIds","selectedSlide","setSelectedSlide","loading","setLoading","template","setTemplate","lastSelectedSlide","setLastSelectedSlide","fetchSlides","data","getSlides","map","s","id","undefined","console","log","err","error","saveSlide","slide","idx","slideData","updateSlide","docRef","addSlide","prev","i","handleDeleteSlide","deleteSlide","filter","_","Math","max","onDragEnd","result","destination","from","source","index","to","newSlides","Array","newSlideIds","removedSlide","splice","removedId","slideIdOrderPairs","order","updateSlideOrders","handleAddSlide","templateObj","find","t","insertIdx","newSlide","slice","setTimeout","handleSlideChange","field","value","toggleMCQCorrect","optionIdx","isCorrect","includes","handleQuillChange","val","lineCount","match","length","handleSelectSlide","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","height","borderRadius","overflow","position","minHeight","maxHeight","dangerouslySetInnerHTML","__html","onClick","onChange","e","target","placeholder","maxLength","replace","borderTopLeftRadius","borderTopRightRadius","theme","modules","formats","overflowY","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/PresentationEditor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport { Loader, ArrowLeft, Plus } from 'lucide-react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport SlideService from '../services/SlideService';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nconst SLIDE_TEMPLATES = [\r\n  { type: 'title', label: 'Title Template', content: { header: '', content: '' } },\r\n  { type: 'basic', label: 'Basic Template', content: { header: '', content: '' } },\r\n  { type: 'mcq', label: 'MC Template', content: { header: '', question: '', options: ['', '', '', ''], correct: [] } },\r\n  { type: 'open', label: 'Open-ended', content: { header: '', question: '', answer: '' } },\r\n];\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [{ 'font': [] }, { 'size': [] }],\r\n    ['bold', 'italic', 'underline', 'strike'],\r\n    [{ 'color': [] }, { 'background': [] }],\r\n    [{ 'script': 'sub'}, { 'script': 'super' }],\r\n    [{ 'header': 1 }, { 'header': 2 }, 'blockquote', 'code-block'],\r\n    [{ 'list': 'ordered'}, { 'list': 'bullet' }, { 'indent': '-1'}, { 'indent': '+1' }],\r\n    [{ 'direction': 'rtl' }, { 'align': [] }],\r\n    ['link', 'image', 'video'],\r\n    ['clean']\r\n  ]\r\n};\r\n\r\nconst quillFormats = [\r\n  'font', 'size', 'bold', 'italic', 'underline', 'strike', 'color', 'background',\r\n  'script', 'header', 'blockquote', 'code-block', 'list', 'bullet', 'indent',\r\n  'direction', 'align', 'link', 'image', 'video'\r\n];\r\n\r\n// Define constants for slide size\r\nconst SLIDE_WIDTH = 960;\r\nconst SLIDE_HEIGHT = 720;\r\n\r\nconst PresentationEditor = () => {\r\n  const { courseId, presentationId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [slides, setSlides] = useState([]);\r\n  const [slideIds, setSlideIds] = useState([]);\r\n  const [selectedSlide, setSelectedSlide] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [template, setTemplate] = useState('title');\r\n  // Track last selected slide for auto-save\r\n  const [lastSelectedSlide, setLastSelectedSlide] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchSlides = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const data = await SlideService.getSlides(courseId, presentationId);\r\n        setSlides(data.map(s => ({ ...s, id: undefined })));\r\n        setSlideIds(data.map(s => s.id));\r\n        setSelectedSlide(0);\r\n        console.log('[PresentationEditor] Slides loaded:', data);\r\n      } catch (err) {\r\n        console.error('[PresentationEditor] Error loading slides:', err);\r\n        setSlides([{ type: 'title', content: '' }]);\r\n        setSlideIds([null]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSlides();\r\n  }, [courseId, presentationId]);\r\n\r\n  const saveSlide = async (slide, idx) => {\r\n    try {\r\n      // Remove 'id' field before saving to Firestore\r\n      const { id, ...slideData } = slide;\r\n      if (slideIds[idx]) {\r\n        await SlideService.updateSlide(courseId, presentationId, slideIds[idx], slideData);\r\n        console.log('[PresentationEditor] Slide updated:', slideData);\r\n      } else {\r\n        const docRef = await SlideService.addSlide(courseId, presentationId, slideData);\r\n        setSlideIds(prev => prev.map((id, i) => i === idx ? docRef.id : id));\r\n        console.log('[PresentationEditor] Slide added:', slideData);\r\n      }\r\n    } catch (err) {\r\n      console.error('[PresentationEditor] Error saving slide:', err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSlide = async (idx) => {\r\n    if (slideIds[idx]) {\r\n      try {\r\n        await SlideService.deleteSlide(courseId, presentationId, slideIds[idx]);\r\n        console.log('[PresentationEditor] Slide deleted:', slideIds[idx]);\r\n      } catch (err) {\r\n        console.error('[PresentationEditor] Error deleting slide:', err);\r\n      }\r\n    }\r\n    setSlides(prev => prev.filter((_, i) => i !== idx));\r\n    setSlideIds(prev => prev.filter((_, i) => i !== idx));\r\n    setSelectedSlide(prev => Math.max(0, prev === idx ? prev - 1 : prev > idx ? prev - 1 : prev));\r\n  };\r\n\r\n  // Drag-and-drop reorder\r\n  const onDragEnd = async (result) => {\r\n    if (!result.destination) return;\r\n    const from = result.source.index;\r\n    const to = result.destination.index;\r\n    if (from === to) return;\r\n    const newSlides = Array.from(slides);\r\n    const newSlideIds = Array.from(slideIds);\r\n    const [removedSlide] = newSlides.splice(from, 1);\r\n    const [removedId] = newSlideIds.splice(from, 1);\r\n    newSlides.splice(to, 0, removedSlide);\r\n    newSlideIds.splice(to, 0, removedId);\r\n    setSlides(newSlides);\r\n    setSlideIds(newSlideIds);\r\n    setSelectedSlide(to);\r\n    // Persist order in Firestore\r\n    const slideIdOrderPairs = newSlideIds.map((id, idx) => ({ id, order: idx }));\r\n    try {\r\n      await SlideService.updateSlideOrders(courseId, presentationId, slideIdOrderPairs.filter(s => s.id));\r\n      console.log('[PresentationEditor] Slide order updated:', slideIdOrderPairs);\r\n    } catch (err) {\r\n      console.error('[PresentationEditor] Error updating slide order:', err);\r\n    }\r\n  };\r\n\r\n  // Add slide below selected\r\n  const handleAddSlide = async (type) => {\r\n    const templateObj = SLIDE_TEMPLATES.find(t => t.type === type);\r\n    const insertIdx = selectedSlide + 1;\r\n    const newSlide = { ...templateObj.content, type, order: insertIdx };\r\n    setSlides(prev => [\r\n      ...prev.slice(0, insertIdx),\r\n      newSlide,\r\n      ...prev.slice(insertIdx)\r\n    ]);\r\n    setSlideIds(prev => [\r\n      ...prev.slice(0, insertIdx),\r\n      null,\r\n      ...prev.slice(insertIdx)\r\n    ]);\r\n    setSelectedSlide(insertIdx);\r\n    setTimeout(() => saveSlide(newSlide, insertIdx), 0);\r\n    // Update order for all slides after insert\r\n    setTimeout(() => {\r\n      const slideIdOrderPairs = [...slideIds.slice(0, insertIdx), null, ...slideIds.slice(insertIdx)].map((id, idx) => ({ id, order: idx })).filter(s => s.id);\r\n      SlideService.updateSlideOrders(courseId, presentationId, slideIdOrderPairs);\r\n    }, 500);\r\n  };\r\n\r\n  // Save slide on edit\r\n  const handleSlideChange = (field, value) => {\r\n    setSlides(prev => prev.map((slide, idx) => idx === selectedSlide ? { ...slide, [field]: value } : slide));\r\n    setTimeout(() => saveSlide({ ...slides[selectedSlide], [field]: value }, selectedSlide), 0);\r\n  };\r\n\r\n  // MCQ: toggle bold for correct answer\r\n  const toggleMCQCorrect = (optionIdx) => {\r\n    setSlides(prev => prev.map((slide, idx) => {\r\n      if (idx !== selectedSlide) return slide;\r\n      const correct = slide.correct || [];\r\n      const isCorrect = correct.includes(optionIdx);\r\n      return {\r\n        ...slide,\r\n        correct: isCorrect ? correct.filter(i => i !== optionIdx) : [...correct, optionIdx]\r\n      };\r\n    }));\r\n  };\r\n\r\n  // For ReactQuill, limit content to 10 lines (approximate by counting <p> tags)\r\n  const handleQuillChange = (val) => {\r\n    // Count lines by <p> tags\r\n    const lineCount = (val.match(/<p[ >]/g) || []).length;\r\n    if (lineCount > 10) {\r\n      console.log('[Editor] Max 10 lines reached in content.');\r\n      return;\r\n    }\r\n    handleSlideChange('content', val);\r\n    console.log(`[PresentationEditor] Content updated for slide ${selectedSlide}`);\r\n  };\r\n\r\n  // Auto-save when switching slides\r\n  const handleSelectSlide = (idx) => {\r\n    if (idx !== selectedSlide) {\r\n      console.log(`[PresentationEditor] Auto-saving slide ${selectedSlide} before switching to slide ${idx}`);\r\n      saveSlide(slides[selectedSlide], selectedSlide);\r\n      setSelectedSlide(idx);\r\n      setLastSelectedSlide(idx);\r\n      console.log(`[PresentationEditor] Switched to slide ${idx}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 py-8\">\r\n      <div className=\"max-w-7xl mx-auto px-4 flex gap-8\">\r\n        {/* Preview Panel (left) */}\r\n        <div className=\"flex flex-col items-center\" style={{ width: SLIDE_WIDTH / 2 + 40 }}>\r\n          <div className=\"mb-4 text-lg font-semibold\">Slide Preview</div>\r\n          <div\r\n            className=\"bg-white border shadow-lg flex flex-col\"\r\n            style={{ width: SLIDE_WIDTH / 2, height: SLIDE_HEIGHT / 2, borderRadius: 8, overflow: 'hidden', position: 'relative' }}\r\n          >\r\n            {/* Header Preview */}\r\n            <div className=\"px-8 pt-8 pb-2 text-2xl font-bold border-b border-gray-200\" style={{ minHeight: 60, maxHeight: 60, overflow: 'hidden' }}>\r\n              {slides[selectedSlide]?.header || <span className=\"text-gray-400\">(No Title)</span>}\r\n            </div>\r\n            {/* Content Preview */}\r\n            <div className=\"px-8 py-6 text-lg\" style={{ height: SLIDE_HEIGHT / 2 - 60, overflow: 'hidden' }}\r\n              dangerouslySetInnerHTML={{ __html: slides[selectedSlide]?.content || '<span class=\"text-gray-400\">(No Content)</span>' }} />\r\n          </div>\r\n        </div>\r\n        {/* Main Editor (right) */}\r\n        <div className=\"flex-1 flex flex-col items-center\">\r\n          {/* Toolbar above slide */}\r\n          <div className=\"mb-4 flex gap-2 w-full max-w-2xl\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <button\r\n                className=\"btn-primary flex items-center\"\r\n                onClick={() => handleAddSlide(template)}\r\n              >\r\n                <Plus className=\"h-4 w-4 mr-1\" /> Slide\r\n              </button>\r\n              <select\r\n                className=\"ml-2 input-field\"\r\n                value={template}\r\n                onChange={e => setTemplate(e.target.value)}\r\n              >\r\n                {SLIDE_TEMPLATES.map(t => (\r\n                  <option key={t.type} value={t.type}>{t.label}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-4 flex gap-2 w-full max-w-2xl\">\r\n              {SLIDE_TEMPLATES.map(t => (\r\n                <button\r\n                  key={t.type}\r\n                  className={`btn-secondary ${template === t.type ? 'bg-primary-100 text-primary-700' : ''}`}\r\n                  onClick={() => setTemplate(t.type)}\r\n                >\r\n                  {t.label}\r\n                </button>\r\n              ))}\r\n              <button className=\"btn-secondary\" onClick={() => setSlides(prev => prev.map((s, i) => i === selectedSlide ? { ...s, ...SLIDE_TEMPLATES.find(t => t.type === template).content, type: template } : s))}>Clear</button>\r\n              <button className=\"btn-primary ml-2\" onClick={async () => {\r\n                console.log('[PresentationEditor] Saving all slides...');\r\n                for (let i = 0; i < slides.length; i++) {\r\n                  await saveSlide(slides[i], i);\r\n                  console.log(`[PresentationEditor] Saved slide ${i}`);\r\n                }\r\n                console.log('[PresentationEditor] All slides saved.');\r\n              }}>Save Presentation</button>\r\n            </div>\r\n          </div>\r\n          {/* Slide Editor Container */}\r\n          <div\r\n            className=\"bg-white border shadow-lg flex flex-col\"\r\n            style={{ width: SLIDE_WIDTH, height: SLIDE_HEIGHT, borderRadius: 12, overflow: 'hidden', position: 'relative' }}\r\n          >\r\n            {/* Header Input */}\r\n            <input\r\n              className=\"px-8 pt-8 pb-2 text-2xl font-bold border-b border-gray-200 bg-transparent focus:outline-none\"\r\n              placeholder=\"Click to add title...\"\r\n              value={slides[selectedSlide]?.header || ''}\r\n              maxLength={60}\r\n              onChange={e => handleSlideChange('header', e.target.value.replace(/\\n/g, ''))}\r\n              style={{ minHeight: 60, maxHeight: 60, borderTopLeftRadius: 12, borderTopRightRadius: 12 }}\r\n            />\r\n            {/* Content Editor */}\r\n            <div className=\"px-8 py-6 flex-1\" style={{ height: SLIDE_HEIGHT - 60, overflow: 'hidden' }}>\r\n              <ReactQuill\r\n                theme=\"snow\"\r\n                value={slides[selectedSlide]?.content || ''}\r\n                onChange={handleQuillChange}\r\n                modules={quillModules}\r\n                formats={quillFormats}\r\n                placeholder=\"Click to add content...\"\r\n                style={{ height: SLIDE_HEIGHT - 120, maxHeight: SLIDE_HEIGHT - 120, overflowY: 'auto', fontSize: 20 }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresentationEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}