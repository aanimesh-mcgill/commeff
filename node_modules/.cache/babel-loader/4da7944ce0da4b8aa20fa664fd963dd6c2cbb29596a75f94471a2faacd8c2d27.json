{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\PresentationEditorV3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { doc, getDoc, updateDoc, setDoc, collection, getDocs, query, orderBy, onSnapshot, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { PresentationToolbar } from './PresentationToolbar';\nimport { SlidesSidebar } from './SlidesSidebar';\nimport { SlideCanvas } from './SlideCanvas';\nimport { ToastContainer } from '../components/Toast';\nimport { useAuth } from '../contexts/AuthContext';\nimport PresentationService from '../services/PresentationService';\nimport { ThumbsUp, MessageSquare } from 'lucide-react';\nimport PresentationFullScreen from './PresentationFullScreen';\n\n// Types (replace with import from types/presentation if available)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPresentation = {\n  id: 'presentation-1',\n  title: 'Untitled Presentation',\n  slides: [{\n    id: 'slide-1',\n    title: 'Welcome Slide',\n    elements: []\n  }],\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  currentSlideIndex: 0\n};\nexport default function PresentationEditorV3({\n  courseId,\n  presentationId = 'demo-presentation',\n  title\n}) {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  // All hooks must be at the top, before any return or conditional\n  const [presentation, setPresentation] = useState(initialPresentation);\n  const [editorState, setEditorState] = useState({\n    selectedElement: null,\n    tool: 'select',\n    isPresenting: false,\n    zoom: 100\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [toasts, setToasts] = useState([]);\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers');\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const saveTimeoutRef = useRef(null);\n  // Add state for debug info\n  const [debugInfo, setDebugInfo] = useState({\n    instructorId: '',\n    userRole: ''\n  });\n\n  // Toast management\n  const addToast = useCallback((message, type = 'info', duration = 3000) => {\n    const id = Date.now().toString();\n    setToasts(prev => [...prev, {\n      id,\n      message,\n      type,\n      duration\n    }]);\n  }, []);\n  const removeToast = useCallback(id => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Load presentation from Firestore\n  useEffect(() => {\n    const loadPresentation = async () => {\n      try {\n        console.log('Loading presentation:', presentationId);\n        const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n        const docSnap = await getDoc(docRef);\n        let slides = [];\n        // Fetch slides from subcollection\n        const slidesCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides');\n        const slidesQuery = query(slidesCol, orderBy('order'));\n        const slidesSnap = await getDocs(slidesQuery);\n        slides = slidesSnap.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n            elements: Array.isArray(data.elements) ? data.elements : []\n          };\n        });\n        console.log('[PresentationEditorV3] Fetched slides from subcollection:', slides);\n        if (docSnap.exists()) {\n          var _data$createdAt, _data$updatedAt;\n          const data = docSnap.data();\n          setPresentation({\n            ...data,\n            slides,\n            createdAt: ((_data$createdAt = data.createdAt) === null || _data$createdAt === void 0 ? void 0 : _data$createdAt.toDate()) || new Date(),\n            updatedAt: ((_data$updatedAt = data.updatedAt) === null || _data$updatedAt === void 0 ? void 0 : _data$updatedAt.toDate()) || new Date()\n          });\n        } else {\n          if (!currentUser) throw new Error('Not authenticated');\n          console.log('No presentation found, creating new one');\n          await setDoc(docRef, {\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            ownerId: currentUser.uid,\n            courseId: courseId || null\n          });\n          setPresentation({\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            ownerId: currentUser.uid,\n            courseId: courseId || null\n          });\n        }\n      } catch (error) {\n        console.error('Error loading presentation:', error);\n        if (error.code === 'permission-denied' || error.message.includes('permission')) {\n          addToast('You do not have permission to access this presentation.', 'error', 6000);\n        } else {\n          addToast('Failed to load presentation', 'error');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (currentUser) loadPresentation();\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Add logging after fetching presentation and slides\n  useEffect(() => {\n    if (presentation) {\n      console.log('[PresentationEditorV3] Loaded presentation:', presentation);\n      if (presentation.slides) {\n        console.log('[PresentationEditorV3] Slides array:', presentation.slides);\n        presentation.slides.forEach((slide, idx) => {\n          console.log(`[PresentationEditorV3] Slide ${idx} imageUrl:`, slide.imageUrl);\n        });\n      } else {\n        console.log('[PresentationEditorV3] No slides found in presentation.');\n      }\n    }\n  }, [presentation]);\n\n  // Auto-save with debouncing\n  const savePresentation = useCallback(async presentationData => {\n    try {\n      if (!currentUser) throw new Error('Not authenticated');\n      console.log('Saving presentation:', presentationData);\n      setIsSaving(true);\n      const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n      await updateDoc(docRef, {\n        ...presentationData,\n        updatedAt: new Date(),\n        ownerId: currentUser.uid,\n        courseId: courseId || null\n      });\n      console.log('Presentation saved successfully');\n      addToast('Presentation saved', 'success', 2000);\n    } catch (error) {\n      console.error('Error saving presentation:', error);\n      if (error.code === 'permission-denied' || error.message.includes('permission')) {\n        addToast('You do not have permission to save this presentation.', 'error', 6000);\n      } else {\n        addToast('Failed to save presentation', 'error');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Debounced auto-save\n  useEffect(() => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    if (!isLoading) {\n      saveTimeoutRef.current = setTimeout(() => {\n        savePresentation(presentation);\n      }, 2000); // 2 second delay\n    }\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, [presentation, savePresentation, isLoading]);\n\n  // Manual save handler\n  const handleSave = useCallback(async () => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    await savePresentation(presentation);\n  }, [presentation, savePresentation]);\n\n  // Slide management handlers\n  const handleAddSlide = useCallback(() => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: []\n    };\n    setPresentation(prev => ({\n      ...prev,\n      slides: [...prev.slides, newSlide],\n      currentSlideIndex: prev.slides.length\n    }));\n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n  const handleDuplicateSlide = useCallback(index => {\n    const slideToDuplicate = presentation.slides[index];\n    const newSlide = {\n      ...slideToDuplicate,\n      id: `slide-${Date.now()}`,\n      title: `${slideToDuplicate.title} (Copy)`\n    };\n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1\n    }));\n    addToast('Slide duplicated', 'success', 2000);\n  }, [presentation.slides, addToast]);\n  const handleDeleteSlide = useCallback(index => {\n    if (presentation.slides.length <= 1) {\n      addToast('Cannot delete the last slide', 'warning');\n      return;\n    }\n    const newSlides = presentation.slides.filter((_, i) => i !== index);\n    const newCurrentIndex = Math.min(presentation.currentSlideIndex, newSlides.length - 1);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: newCurrentIndex\n    }));\n    addToast('Slide deleted', 'success', 2000);\n  }, [presentation.slides, presentation.currentSlideIndex, addToast]);\n  const handleAddSlideAfter = useCallback(index => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: []\n    };\n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1\n    }));\n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  // Element management handlers\n  const handleElementSelect = useCallback(elementId => {\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: elementId\n    }));\n  }, []);\n  const handleElementUpdate = useCallback((elementId, updates) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      const elementIndex = currentSlide.elements.findIndex(el => el.id === elementId);\n      if (elementIndex !== -1) {\n        newSlides[prev.currentSlideIndex] = {\n          ...currentSlide,\n          elements: currentSlide.elements.map((el, index) => index === elementIndex ? {\n            ...el,\n            ...updates\n          } : el)\n        };\n      }\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, []);\n  const handleElementAdd = useCallback(elementData => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      ...elementData\n    };\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: [...currentSlide.elements, newElement]\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n\n    // Auto-select the new element\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: newElement.id\n    }));\n    addToast('Element added', 'success', 1500);\n  }, [addToast]);\n  const handleElementDelete = useCallback(elementId => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: currentSlide.elements.filter(el => el.id !== elementId)\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: null\n    }));\n    addToast('Element deleted', 'success', 1500);\n  }, [addToast]);\n\n  // Other handlers\n  const handleToolChange = useCallback(tool => {\n    setEditorState(prev => ({\n      ...prev,\n      tool\n    }));\n  }, []);\n  const handleTitleChange = useCallback(title => {\n    setPresentation(prev => ({\n      ...prev,\n      title\n    }));\n  }, []);\n\n  // Ensure every slide navigation triggers Firestore update\n  const handleSlideSelect = useCallback(index => {\n    setPresentation(prev => ({\n      ...prev,\n      currentSlideIndex: index\n    }));\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: null\n    }));\n    // Log for debug\n    console.log('[SYNC] handleSlideSelect called, new index:', index);\n  }, []);\n  const handlePresent = useCallback(async () => {\n    setEditorState(prev => ({\n      ...prev,\n      isPresenting: true\n    }));\n    addToast('Starting presentation...', 'info');\n    try {\n      await PresentationService.setLivePresentation(courseId, presentationId);\n      addToast('Presentation is now live!', 'success');\n    } catch (err) {\n      addToast('Failed to set presentation live: ' + (err.message || err), 'error');\n      console.error('[PresentationEditorV3] Error setting presentation live:', err);\n    }\n  }, [addToast, courseId, presentationId]);\n\n  // Remove auto-save useEffect\n  // Add slide change handler\n  const handleSlideChange = useCallback((field, value) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const idx = prev.currentSlideIndex;\n      if (!newSlides[idx]) return prev;\n      newSlides[idx] = {\n        ...newSlides[idx],\n        [field]: value\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, []);\n\n  // Update currentSlideIndex in Firestore when it changes\n  useEffect(() => {\n    if (!presentationId || !courseId || !currentUser) return;\n    const updateCurrentSlideIndex = async () => {\n      try {\n        const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n        console.log('[SYNC] Writing currentSlideIndex to Firestore:', presentation.currentSlideIndex);\n        await updateDoc(docRef, {\n          currentSlideIndex: presentation.currentSlideIndex\n        });\n      } catch (err) {\n        console.error('[PresentationEditorV3] Error updating currentSlideIndex:', err);\n      }\n    };\n    updateCurrentSlideIndex();\n  }, [presentation.currentSlideIndex, presentationId, courseId, currentUser]);\n\n  // Real-time Firestore sync for comments (current slide)\n  useEffect(() => {\n    if (!editorState.isPresenting || !presentationId || !courseId || !Array.isArray(presentation.slides) || !presentation.slides.length) return;\n    const currentSlide = presentation.slides[presentation.currentSlideIndex];\n    if (!currentSlide) return;\n    const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments');\n    const q = query(commentsCol, orderBy('timePosted', 'asc'));\n    const unsub = onSnapshot(q, snap => {\n      const arr = [];\n      snap.forEach(doc => arr.push({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setComments(arr);\n    });\n    return () => unsub();\n  }, [editorState.isPresenting, presentationId, courseId, presentation.slides, presentation.currentSlideIndex]);\n\n  // Find selected element from current slide\n  const selectedElement = React.useMemo(() => {\n    const slide = presentation.slides[presentation.currentSlideIndex];\n    if (!slide) return null;\n    return slide.elements.find(el => el.id === editorState.selectedElement) || null;\n  }, [presentation, editorState.selectedElement]);\n\n  // Compute formatting state for toolbar\n  const formattingState = React.useMemo(() => {\n    if (!selectedElement || selectedElement.type !== 'text') return {};\n    const style = selectedElement.style || {};\n    return {\n      bold: style.fontWeight === 'bold',\n      italic: style.fontStyle === 'italic',\n      underline: style.textDecoration === 'underline',\n      fontSize: style.fontSize || 16,\n      color: style.color || '#000000',\n      align: style.textAlign || 'left'\n    };\n  }, [selectedElement]);\n\n  // Handler for formatting actions\n  const handleFormat = useCallback((action, value) => {\n    if (!selectedElement || selectedElement.type !== 'text') return;\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const slide = newSlides[prev.currentSlideIndex];\n      const idx = slide.elements.findIndex(el => el.id === selectedElement.id);\n      if (idx === -1) return prev;\n      const el = slide.elements[idx];\n      const style = {\n        ...el.style\n      };\n      switch (action) {\n        case 'bold':\n          style.fontWeight = style.fontWeight === 'bold' ? 'normal' : 'bold';\n          break;\n        case 'italic':\n          style.fontStyle = style.fontStyle === 'italic' ? 'normal' : 'italic';\n          break;\n        case 'underline':\n          style.textDecoration = style.textDecoration === 'underline' ? 'none' : 'underline';\n          break;\n        case 'fontSize':\n          style.fontSize = value || 20; // Default to 20 if not provided\n          break;\n        case 'color':\n          style.color = value || '#000000';\n          break;\n        case 'align':\n          style.textAlign = value;\n          break;\n        default:\n          break;\n      }\n      slide.elements[idx] = {\n        ...el,\n        style\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, [selectedElement]);\n\n  // DEBUG: Log all relevant Firebase info on mount and when loading presentation\n  useEffect(() => {\n    (async () => {\n      try {\n        console.log('[DEBUG] currentUser:', currentUser);\n        if (currentUser) {\n          console.log('[DEBUG] currentUser.uid:', currentUser.uid);\n        }\n        console.log('[DEBUG] courseId:', courseId);\n        console.log('[DEBUG] presentationId:', presentationId);\n        // Fetch and log user doc\n        if (currentUser) {\n          const userDocRef = doc(db, 'users', currentUser.uid);\n          const userSnap = await getDoc(userDocRef);\n          if (userSnap.exists()) {\n            console.log('[DEBUG] user doc:', userSnap.data());\n          } else {\n            console.log('[DEBUG] user doc does not exist');\n          }\n        }\n        // Fetch and log course doc\n        if (courseId) {\n          const courseDocRef = doc(db, 'courses', courseId);\n          const courseSnap = await getDoc(courseDocRef);\n          if (courseSnap.exists()) {\n            console.log('[DEBUG] course doc:', courseSnap.data());\n          } else {\n            console.log('[DEBUG] course doc does not exist');\n          }\n        }\n        // Fetch and log presentation doc\n        if (courseId && presentationId) {\n          const presDocRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n          const presSnap = await getDoc(presDocRef);\n          if (presSnap.exists()) {\n            console.log('[DEBUG] presentation doc:', presSnap.data());\n          } else {\n            console.log('[DEBUG] presentation doc does not exist');\n          }\n        }\n      } catch (err) {\n        console.error('[DEBUG] Error fetching debug info:', err);\n      }\n    })();\n  }, [currentUser, courseId, presentationId]);\n\n  // Fetch instructorId and userRole for debug panel\n  useEffect(() => {\n    async function fetchDebugInfo() {\n      try {\n        let instructorId = '';\n        let userRole = '';\n        if (courseId) {\n          const courseDoc = await getDoc(doc(db, 'courses', courseId));\n          instructorId = courseDoc.exists() ? courseDoc.data().instructorId : '';\n        }\n        if (currentUser) {\n          const userDoc = await getDoc(doc(db, 'users', currentUser.uid));\n          userRole = userDoc.exists() ? userDoc.data().role : '';\n        }\n        setDebugInfo({\n          instructorId,\n          userRole\n        });\n      } catch (e) {\n        setDebugInfo({\n          instructorId: 'ERR',\n          userRole: 'ERR'\n        });\n      }\n    }\n    fetchDebugInfo();\n  }, [courseId, currentUser]);\n\n  // Loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex items-center justify-center bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading presentation...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Comment submit\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!commentInput.trim() || !currentUser) return;\n    const currentSlide = presentation.slides[presentation.currentSlideIndex];\n    if (!currentSlide) return;\n    const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments');\n    await addDoc(commentsCol, {\n      text: commentInput,\n      username: currentUser.displayName || currentUser.email || currentUser.uid,\n      likedBy: {},\n      timePosted: serverTimestamp(),\n      groupId: null\n    });\n    setCommentInput(\"\");\n  };\n  // Like handler (likedBy map logic)\n  const handleLike = async comment => {\n    let likeUserId;\n    if (currentUser) {\n      likeUserId = currentUser.uid;\n    } else {\n      // Anonymous: use stable anonId from localStorage\n      likeUserId = localStorage.getItem('anonId');\n      if (!likeUserId) {\n        likeUserId = 'anon_' + Math.random().toString(36).substr(2, 9);\n        localStorage.setItem('anonId', likeUserId);\n      }\n    }\n    if (!likeUserId) return;\n    const currentSlide = presentation.slides[presentation.currentSlideIndex];\n    if (!currentSlide) return;\n    if (comment.likedBy && comment.likedBy[likeUserId]) return;\n    const newLikedBy = {\n      ...(comment.likedBy || {})\n    };\n    newLikedBy[likeUserId] = true;\n    const commentRef = doc(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments', comment.id);\n    const payload = {\n      likedBy: newLikedBy\n    };\n    console.log('[handleLike] Updating comment with payload:', payload);\n    await updateDoc(commentRef, payload);\n  };\n\n  // Audience mode change handler\n  const handleAudienceModeChange = async newMode => {\n    try {\n      await PresentationService.setAudienceMode(courseId, presentationId, newMode);\n      setAudienceMode(newMode);\n      addToast(`Audience mode set to ${newMode === 'anonymous' ? 'Anonymous' : 'Enrolled Users'}`, 'success');\n    } catch (err) {\n      addToast('Failed to update audience mode', 'error');\n      console.error('[PresentationEditorV3] Error updating audience mode:', err);\n    }\n  };\n\n  // Debug log for overlay rendering\n  console.log('[OverlayRender] showDiscussion:', showDiscussion, 'isPresenting:', editorState.isPresenting);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(PresentationToolbar, {\n      editorState: editorState,\n      onToolChange: handleToolChange,\n      onSave: handleSave,\n      onPresent: handlePresent,\n      onUndo: () => {} // TODO: Implement undo/redo\n      ,\n      onRedo: () => {},\n      presentationTitle: presentation.title,\n      onTitleChange: handleTitleChange,\n      isSaving: isSaving,\n      selectedElement: selectedElement,\n      formattingState: formattingState,\n      onFormat: handleFormat,\n      audienceMode: audienceMode,\n      onAudienceModeChange: handleAudienceModeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#eee',\n        padding: 8,\n        marginBottom: 8,\n        fontSize: 13,\n        borderRadius: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"DEBUG:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 9\n      }, this), \" user.uid: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: currentUser && currentUser.uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 43\n      }, this), \" | user.role: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: debugInfo.userRole\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 102\n      }, this), \" | courseId: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: courseId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 148\n      }, this), \" | course.instructorId: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: debugInfo.instructorId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 195\n      }, this), \" | presentation.ownerId: \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: presentation.ownerId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 257\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-full overflow-y-auto\",\n        style: {\n          maxHeight: 'calc(100vh - 64px)',\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(SlidesSidebar, {\n          slides: presentation.slides,\n          currentSlideIndex: presentation.currentSlideIndex,\n          onSlideSelect: handleSlideSelect,\n          onAddSlide: handleAddSlide,\n          onDuplicateSlide: handleDuplicateSlide,\n          onDeleteSlide: handleDeleteSlide,\n          onAddSlideAfter: handleAddSlideAfter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlideCanvas, {\n        slide: presentation.slides[presentation.currentSlideIndex],\n        editorState: editorState,\n        onElementSelect: handleElementSelect,\n        onElementUpdate: handleElementUpdate,\n        onElementAdd: handleElementAdd,\n        onElementDelete: handleElementDelete,\n        onSlideChange: handleSlideChange,\n        isLive: editorState.isPresenting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      toasts: toasts,\n      removeToast: removeToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this), editorState.isPresenting && /*#__PURE__*/_jsxDEV(PresentationFullScreen, {\n      slides: presentation.slides,\n      currentIndex: presentation.currentSlideIndex,\n      onClose: () => setEditorState(prev => ({\n        ...prev,\n        isPresenting: false\n      })),\n      onPrev: async () => {\n        setPresentation(prev => {\n          const newIndex = Math.max(0, prev.currentSlideIndex - 1);\n          console.log('[PRESENTER][NAV] Prev Slide Clicked. New currentSlideIndex:', newIndex);\n          if (presentationId && courseId && currentUser) {\n            const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n            console.log('[PRESENTER][NAV] Updating Firestore currentSlideIndex:', newIndex, 'DocRef:', docRef.path);\n            updateDoc(docRef, {\n              currentSlideIndex: newIndex\n            }).then(() => console.log('[PRESENTER][NAV] Firestore update success.')).catch(err => console.error('[PRESENTER][NAV] Firestore update error:', err));\n          }\n          return {\n            ...prev,\n            currentSlideIndex: newIndex\n          };\n        });\n      },\n      onNext: async () => {\n        setPresentation(prev => {\n          const newIndex = Math.min(presentation.slides.length - 1, prev.currentSlideIndex + 1);\n          console.log('[PRESENTER][NAV] Next Slide Clicked. New currentSlideIndex:', newIndex);\n          if (presentationId && courseId && currentUser) {\n            const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n            console.log('[PRESENTER][NAV] Updating Firestore currentSlideIndex:', newIndex, 'DocRef:', docRef.path);\n            updateDoc(docRef, {\n              currentSlideIndex: newIndex\n            }).then(() => console.log('[PRESENTER][NAV] Firestore update success.')).catch(err => console.error('[PRESENTER][NAV] Firestore update error:', err));\n          }\n          return {\n            ...prev,\n            currentSlideIndex: newIndex\n          };\n        });\n      },\n      showDiscussion: showDiscussion,\n      setShowDiscussion: setShowDiscussion,\n      comments: comments,\n      commentInput: commentInput,\n      setCommentInput: setCommentInput,\n      handleCommentSubmit: handleCommentSubmit,\n      handleLike: handleLike,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 9\n    }, this), showDiscussion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-[9999] flex items-center justify-center bg-black bg-opacity-60\",\n      style: {\n        pointerEvents: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0\",\n        onClick: e => {\n          e.stopPropagation();\n          setShowDiscussion(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex w-full h-full z-70\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 bg-gray-100 flex flex-col items-center justify-center border-r border-gray-300\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-400 text-lg\",\n            children: \"(Grouping area placeholder)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[400px] max-w-full bg-white flex flex-col h-full shadow-xl relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between px-4 py-3 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-lg\",\n              children: \"Slide Discussion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ml-2 text-gray-500 hover:text-red-600 text-2xl font-bold focus:outline-none\",\n              onClick: e => {\n                e.stopPropagation();\n                setShowDiscussion(false);\n              },\n              title: \"Close discussion\",\n              \"aria-label\": \"Close discussion\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-3\",\n            children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-400 text-center\",\n              children: \"No messages yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this) : comments.map(c => {\n              const likeUserId = currentUser ? currentUser.uid : '';\n              const alreadyLiked = c.likedBy && likeUserId && c.likedBy[likeUserId];\n              const likeCount = c.likedBy ? Object.keys(c.likedBy).length : 0;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-100 rounded px-3 py-2 flex items-center group\",\n                title: c.username,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `flex items-center mr-3 text-gray-500 hover:text-primary-600 focus:outline-none ${alreadyLiked ? 'opacity-50 cursor-not-allowed' : ''}`,\n                  onClick: () => handleLike(c),\n                  tabIndex: 0,\n                  \"aria-label\": \"Like comment\",\n                  disabled: alreadyLiked,\n                  children: [/*#__PURE__*/_jsxDEV(ThumbsUp, {\n                    className: \"w-5 h-5 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 731,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-semibold\",\n                    children: likeCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 732,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 724,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-800 text-sm\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: c.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 25\n                }, this)]\n              }, c.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"flex items-center border-t px-4 py-3\",\n            onSubmit: handleCommentSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"flex-1 border rounded px-3 py-2 mr-2 focus:outline-none focus:border-primary-500\",\n              placeholder: \"Type a comment...\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-primary-600 text-white px-4 py-2 rounded font-semibold disabled:opacity-50\",\n              disabled: !commentInput.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 594,\n    columnNumber: 5\n  }, this);\n}\n_s(PresentationEditorV3, \"tEAtIDAdT4Pebue2+x23qT295K8=\", false, function () {\n  return [useAuth];\n});\n_c = PresentationEditorV3;\nvar _c;\n$RefreshReg$(_c, \"PresentationEditorV3\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useRef","doc","getDoc","updateDoc","setDoc","collection","getDocs","query","orderBy","onSnapshot","addDoc","serverTimestamp","db","PresentationToolbar","SlidesSidebar","SlideCanvas","ToastContainer","useAuth","PresentationService","ThumbsUp","MessageSquare","PresentationFullScreen","jsxDEV","_jsxDEV","initialPresentation","id","title","slides","elements","createdAt","Date","updatedAt","currentSlideIndex","PresentationEditorV3","courseId","presentationId","_s","currentUser","presentation","setPresentation","editorState","setEditorState","selectedElement","tool","isPresenting","zoom","isLoading","setIsLoading","isSaving","setIsSaving","toasts","setToasts","audienceMode","setAudienceMode","showDiscussion","setShowDiscussion","commentInput","setCommentInput","comments","setComments","saveTimeoutRef","debugInfo","setDebugInfo","instructorId","userRole","addToast","message","type","duration","now","toString","prev","removeToast","filter","toast","loadPresentation","console","log","docRef","docSnap","slidesCol","slidesQuery","slidesSnap","docs","map","data","Array","isArray","exists","_data$createdAt","_data$updatedAt","toDate","Error","ownerId","uid","error","code","includes","forEach","slide","idx","imageUrl","savePresentation","presentationData","current","clearTimeout","setTimeout","handleSave","handleAddSlide","newSlide","length","handleDuplicateSlide","index","slideToDuplicate","newSlides","splice","handleDeleteSlide","_","i","newCurrentIndex","Math","min","handleAddSlideAfter","handleElementSelect","elementId","handleElementUpdate","updates","currentSlide","elementIndex","findIndex","el","handleElementAdd","elementData","newElement","handleElementDelete","handleToolChange","handleTitleChange","handleSlideSelect","handlePresent","setLivePresentation","err","handleSlideChange","field","value","updateCurrentSlideIndex","commentsCol","q","unsub","snap","arr","push","find","formattingState","style","bold","fontWeight","italic","fontStyle","underline","textDecoration","fontSize","color","align","textAlign","handleFormat","action","userDocRef","userSnap","courseDocRef","courseSnap","presDocRef","presSnap","fetchDebugInfo","courseDoc","userDoc","role","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleCommentSubmit","preventDefault","trim","text","username","displayName","email","likedBy","timePosted","groupId","handleLike","comment","likeUserId","localStorage","getItem","random","substr","setItem","newLikedBy","commentRef","payload","handleAudienceModeChange","newMode","onToolChange","onSave","onPresent","onUndo","onRedo","presentationTitle","onTitleChange","onFormat","onAudienceModeChange","background","padding","marginBottom","borderRadius","maxHeight","minWidth","onSlideSelect","onAddSlide","onDuplicateSlide","onDeleteSlide","onAddSlideAfter","onElementSelect","onElementUpdate","onElementAdd","onElementDelete","onSlideChange","isLive","currentIndex","onClose","onPrev","newIndex","max","path","then","catch","onNext","pointerEvents","onClick","stopPropagation","c","alreadyLiked","likeCount","Object","keys","tabIndex","disabled","cursor","onSubmit","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/PresentationEditorV3.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef } from 'react';\nimport { doc, getDoc, updateDoc, setDoc, collection, getDocs, query, orderBy, onSnapshot, addDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { PresentationToolbar } from './PresentationToolbar';\nimport { SlidesSidebar } from './SlidesSidebar';\nimport { SlideCanvas } from './SlideCanvas';\nimport { ToastContainer } from '../components/Toast';\nimport { useAuth } from '../contexts/AuthContext';\nimport PresentationService from '../services/PresentationService';\nimport { ThumbsUp, MessageSquare } from 'lucide-react';\nimport PresentationFullScreen from './PresentationFullScreen';\n\n// Types (replace with import from types/presentation if available)\nconst initialPresentation = {\n  id: 'presentation-1',\n  title: 'Untitled Presentation',\n  slides: [\n    {\n      id: 'slide-1',\n      title: 'Welcome Slide',\n      elements: [],\n    },\n  ],\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  currentSlideIndex: 0,\n};\n\nexport default function PresentationEditorV3({ courseId, presentationId = 'demo-presentation', title }) {\n  const { currentUser } = useAuth();\n  // All hooks must be at the top, before any return or conditional\n  const [presentation, setPresentation] = useState(initialPresentation);\n  const [editorState, setEditorState] = useState({\n    selectedElement: null,\n    tool: 'select',\n    isPresenting: false,\n    zoom: 100,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [toasts, setToasts] = useState([]);\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers');\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const saveTimeoutRef = useRef(null);\n  // Add state for debug info\n  const [debugInfo, setDebugInfo] = useState({ instructorId: '', userRole: '' });\n\n  // Toast management\n  const addToast = useCallback((message, type = 'info', duration = 3000) => {\n    const id = Date.now().toString();\n    setToasts(prev => [...prev, { id, message, type, duration }]);\n  }, []);\n\n  const removeToast = useCallback((id) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Load presentation from Firestore\n  useEffect(() => {\n    const loadPresentation = async () => {\n      try {\n        console.log('Loading presentation:', presentationId);\n        const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n        const docSnap = await getDoc(docRef);\n        let slides = [];\n        // Fetch slides from subcollection\n        const slidesCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides');\n        const slidesQuery = query(slidesCol, orderBy('order'));\n        const slidesSnap = await getDocs(slidesQuery);\n        slides = slidesSnap.docs.map(doc => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n            elements: Array.isArray(data.elements) ? data.elements : [],\n          };\n        });\n        console.log('[PresentationEditorV3] Fetched slides from subcollection:', slides);\n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          setPresentation({\n            ...data,\n            slides,\n            createdAt: data.createdAt?.toDate() || new Date(),\n            updatedAt: data.updatedAt?.toDate() || new Date(),\n          });\n        } else {\n          if (!currentUser) throw new Error('Not authenticated');\n          console.log('No presentation found, creating new one');\n          await setDoc(docRef, {\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            ownerId: currentUser.uid,\n            courseId: courseId || null,\n          });\n          setPresentation({ ...initialPresentation, slides: [], id: presentationId, ownerId: currentUser.uid, courseId: courseId || null });\n        }\n      } catch (error) {\n        console.error('Error loading presentation:', error);\n        if (error.code === 'permission-denied' || error.message.includes('permission')) {\n          addToast('You do not have permission to access this presentation.', 'error', 6000);\n        } else {\n          addToast('Failed to load presentation', 'error');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (currentUser) loadPresentation();\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Add logging after fetching presentation and slides\n  useEffect(() => {\n    if (presentation) {\n      console.log('[PresentationEditorV3] Loaded presentation:', presentation);\n      if (presentation.slides) {\n        console.log('[PresentationEditorV3] Slides array:', presentation.slides);\n        presentation.slides.forEach((slide, idx) => {\n          console.log(`[PresentationEditorV3] Slide ${idx} imageUrl:`, slide.imageUrl);\n        });\n      } else {\n        console.log('[PresentationEditorV3] No slides found in presentation.');\n      }\n    }\n  }, [presentation]);\n\n  // Auto-save with debouncing\n  const savePresentation = useCallback(async (presentationData) => {\n    try {\n      if (!currentUser) throw new Error('Not authenticated');\n      console.log('Saving presentation:', presentationData);\n      setIsSaving(true);\n      \n      const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n      await updateDoc(docRef, {\n        ...presentationData,\n        updatedAt: new Date(),\n        ownerId: currentUser.uid,\n        courseId: courseId || null,\n      });\n      \n      console.log('Presentation saved successfully');\n      addToast('Presentation saved', 'success', 2000);\n    } catch (error) {\n      console.error('Error saving presentation:', error);\n      if (error.code === 'permission-denied' || error.message.includes('permission')) {\n        addToast('You do not have permission to save this presentation.', 'error', 6000);\n      } else {\n        addToast('Failed to save presentation', 'error');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Debounced auto-save\n  useEffect(() => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    \n    if (!isLoading) {\n      saveTimeoutRef.current = setTimeout(() => {\n        savePresentation(presentation);\n      }, 2000); // 2 second delay\n    }\n\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, [presentation, savePresentation, isLoading]);\n\n  // Manual save handler\n  const handleSave = useCallback(async () => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    await savePresentation(presentation);\n  }, [presentation, savePresentation]);\n\n  // Slide management handlers\n  const handleAddSlide = useCallback(() => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: [],\n    };\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: [...prev.slides, newSlide],\n      currentSlideIndex: prev.slides.length,\n    }));\n    \n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  const handleDuplicateSlide = useCallback((index) => {\n    const slideToDuplicate = presentation.slides[index];\n    const newSlide = {\n      ...slideToDuplicate,\n      id: `slide-${Date.now()}`,\n      title: `${slideToDuplicate.title} (Copy)`,\n    };\n    \n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1,\n    }));\n    \n    addToast('Slide duplicated', 'success', 2000);\n  }, [presentation.slides, addToast]);\n\n  const handleDeleteSlide = useCallback((index) => {\n    if (presentation.slides.length <= 1) {\n      addToast('Cannot delete the last slide', 'warning');\n      return;\n    }\n    \n    const newSlides = presentation.slides.filter((_, i) => i !== index);\n    const newCurrentIndex = Math.min(\n      presentation.currentSlideIndex,\n      newSlides.length - 1\n    );\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: newCurrentIndex,\n    }));\n    \n    addToast('Slide deleted', 'success', 2000);\n  }, [presentation.slides, presentation.currentSlideIndex, addToast]);\n\n  const handleAddSlideAfter = useCallback((index) => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: [],\n    };\n    \n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1,\n    }));\n    \n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  // Element management handlers\n  const handleElementSelect = useCallback((elementId) => {\n    setEditorState(prev => ({ ...prev, selectedElement: elementId }));\n  }, []);\n\n  const handleElementUpdate = useCallback((elementId, updates) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      const elementIndex = currentSlide.elements.findIndex(el => el.id === elementId);\n      \n      if (elementIndex !== -1) {\n        newSlides[prev.currentSlideIndex] = {\n          ...currentSlide,\n          elements: currentSlide.elements.map((el, index) =>\n            index === elementIndex ? { ...el, ...updates } : el\n          ),\n        };\n      }\n      \n      return { ...prev, slides: newSlides };\n    });\n  }, []);\n\n  const handleElementAdd = useCallback((elementData) => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      ...elementData,\n    };\n    \n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      \n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: [...currentSlide.elements, newElement],\n      };\n      \n      return { ...prev, slides: newSlides };\n    });\n    \n    // Auto-select the new element\n    setEditorState(prev => ({ ...prev, selectedElement: newElement.id }));\n    addToast('Element added', 'success', 1500);\n  }, [addToast]);\n\n  const handleElementDelete = useCallback((elementId) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      \n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: currentSlide.elements.filter(el => el.id !== elementId),\n      };\n      \n      return { ...prev, slides: newSlides };\n    });\n    \n    setEditorState(prev => ({ ...prev, selectedElement: null }));\n    addToast('Element deleted', 'success', 1500);\n  }, [addToast]);\n\n  // Other handlers\n  const handleToolChange = useCallback((tool) => {\n    setEditorState(prev => ({ ...prev, tool }));\n  }, []);\n\n  const handleTitleChange = useCallback((title) => {\n    setPresentation(prev => ({ ...prev, title }));\n  }, []);\n\n  // Ensure every slide navigation triggers Firestore update\n  const handleSlideSelect = useCallback((index) => {\n    setPresentation(prev => ({ ...prev, currentSlideIndex: index }));\n    setEditorState(prev => ({ ...prev, selectedElement: null }));\n    // Log for debug\n    console.log('[SYNC] handleSlideSelect called, new index:', index);\n  }, []);\n\n  const handlePresent = useCallback(async () => {\n    setEditorState(prev => ({ ...prev, isPresenting: true }));\n    addToast('Starting presentation...', 'info');\n    try {\n      await PresentationService.setLivePresentation(courseId, presentationId);\n      addToast('Presentation is now live!', 'success');\n    } catch (err) {\n      addToast('Failed to set presentation live: ' + (err.message || err), 'error');\n      console.error('[PresentationEditorV3] Error setting presentation live:', err);\n    }\n  }, [addToast, courseId, presentationId]);\n\n  // Remove auto-save useEffect\n  // Add slide change handler\n  const handleSlideChange = useCallback((field, value) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const idx = prev.currentSlideIndex;\n      if (!newSlides[idx]) return prev;\n      newSlides[idx] = { ...newSlides[idx], [field]: value };\n      return { ...prev, slides: newSlides };\n    });\n  }, []);\n\n  // Update currentSlideIndex in Firestore when it changes\n  useEffect(() => {\n    if (!presentationId || !courseId || !currentUser) return;\n    const updateCurrentSlideIndex = async () => {\n      try {\n        const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n        console.log('[SYNC] Writing currentSlideIndex to Firestore:', presentation.currentSlideIndex);\n        await updateDoc(docRef, { currentSlideIndex: presentation.currentSlideIndex });\n      } catch (err) {\n        console.error('[PresentationEditorV3] Error updating currentSlideIndex:', err);\n      }\n    };\n    updateCurrentSlideIndex();\n  }, [presentation.currentSlideIndex, presentationId, courseId, currentUser]);\n\n  // Real-time Firestore sync for comments (current slide)\n  useEffect(() => {\n    if (!editorState.isPresenting || !presentationId || !courseId || !Array.isArray(presentation.slides) || !presentation.slides.length) return;\n    const currentSlide = presentation.slides[presentation.currentSlideIndex];\n    if (!currentSlide) return;\n    const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments');\n    const q = query(commentsCol, orderBy('timePosted', 'asc'));\n    const unsub = onSnapshot(q, (snap) => {\n      const arr = [];\n      snap.forEach(doc => arr.push({ id: doc.id, ...doc.data() }));\n      setComments(arr);\n    });\n    return () => unsub();\n  }, [editorState.isPresenting, presentationId, courseId, presentation.slides, presentation.currentSlideIndex]);\n\n  // Find selected element from current slide\n  const selectedElement = React.useMemo(() => {\n    const slide = presentation.slides[presentation.currentSlideIndex];\n    if (!slide) return null;\n    return slide.elements.find(el => el.id === editorState.selectedElement) || null;\n  }, [presentation, editorState.selectedElement]);\n\n  // Compute formatting state for toolbar\n  const formattingState = React.useMemo(() => {\n    if (!selectedElement || selectedElement.type !== 'text') return {};\n    const style = selectedElement.style || {};\n    return {\n      bold: style.fontWeight === 'bold',\n      italic: style.fontStyle === 'italic',\n      underline: style.textDecoration === 'underline',\n      fontSize: style.fontSize || 16,\n      color: style.color || '#000000',\n      align: style.textAlign || 'left',\n    };\n  }, [selectedElement]);\n\n  // Handler for formatting actions\n  const handleFormat = useCallback((action, value) => {\n    if (!selectedElement || selectedElement.type !== 'text') return;\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const slide = newSlides[prev.currentSlideIndex];\n      const idx = slide.elements.findIndex(el => el.id === selectedElement.id);\n      if (idx === -1) return prev;\n      const el = slide.elements[idx];\n      const style = { ...el.style };\n      switch (action) {\n        case 'bold':\n          style.fontWeight = style.fontWeight === 'bold' ? 'normal' : 'bold';\n          break;\n        case 'italic':\n          style.fontStyle = style.fontStyle === 'italic' ? 'normal' : 'italic';\n          break;\n        case 'underline':\n          style.textDecoration = style.textDecoration === 'underline' ? 'none' : 'underline';\n          break;\n        case 'fontSize':\n          style.fontSize = value || 20; // Default to 20 if not provided\n          break;\n        case 'color':\n          style.color = value || '#000000';\n          break;\n        case 'align':\n          style.textAlign = value;\n          break;\n        default:\n          break;\n      }\n      slide.elements[idx] = { ...el, style };\n      return { ...prev, slides: newSlides };\n    });\n  }, [selectedElement]);\n\n  // DEBUG: Log all relevant Firebase info on mount and when loading presentation\n  useEffect(() => {\n    (async () => {\n      try {\n        console.log('[DEBUG] currentUser:', currentUser);\n        if (currentUser) {\n          console.log('[DEBUG] currentUser.uid:', currentUser.uid);\n        }\n        console.log('[DEBUG] courseId:', courseId);\n        console.log('[DEBUG] presentationId:', presentationId);\n        // Fetch and log user doc\n        if (currentUser) {\n          const userDocRef = doc(db, 'users', currentUser.uid);\n          const userSnap = await getDoc(userDocRef);\n          if (userSnap.exists()) {\n            console.log('[DEBUG] user doc:', userSnap.data());\n          } else {\n            console.log('[DEBUG] user doc does not exist');\n          }\n        }\n        // Fetch and log course doc\n        if (courseId) {\n          const courseDocRef = doc(db, 'courses', courseId);\n          const courseSnap = await getDoc(courseDocRef);\n          if (courseSnap.exists()) {\n            console.log('[DEBUG] course doc:', courseSnap.data());\n          } else {\n            console.log('[DEBUG] course doc does not exist');\n          }\n        }\n        // Fetch and log presentation doc\n        if (courseId && presentationId) {\n          const presDocRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n          const presSnap = await getDoc(presDocRef);\n          if (presSnap.exists()) {\n            console.log('[DEBUG] presentation doc:', presSnap.data());\n          } else {\n            console.log('[DEBUG] presentation doc does not exist');\n          }\n        }\n      } catch (err) {\n        console.error('[DEBUG] Error fetching debug info:', err);\n      }\n    })();\n  }, [currentUser, courseId, presentationId]);\n\n  // Fetch instructorId and userRole for debug panel\n  useEffect(() => {\n    async function fetchDebugInfo() {\n      try {\n        let instructorId = '';\n        let userRole = '';\n        if (courseId) {\n          const courseDoc = await getDoc(doc(db, 'courses', courseId));\n          instructorId = courseDoc.exists() ? courseDoc.data().instructorId : '';\n        }\n        if (currentUser) {\n          const userDoc = await getDoc(doc(db, 'users', currentUser.uid));\n          userRole = userDoc.exists() ? userDoc.data().role : '';\n        }\n        setDebugInfo({ instructorId, userRole });\n      } catch (e) {\n        setDebugInfo({ instructorId: 'ERR', userRole: 'ERR' });\n      }\n    }\n    fetchDebugInfo();\n  }, [courseId, currentUser]);\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"h-screen flex items-center justify-center bg-gray-100\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading presentation...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Comment submit\n  const handleCommentSubmit = async (e) => {\n    e.preventDefault();\n    if (!commentInput.trim() || !currentUser) return;\n    const currentSlide = presentation.slides[presentation.currentSlideIndex];\n    if (!currentSlide) return;\n    const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments');\n    await addDoc(commentsCol, {\n      text: commentInput,\n      username: currentUser.displayName || currentUser.email || currentUser.uid,\n      likedBy: {},\n      timePosted: serverTimestamp(),\n      groupId: null\n    });\n    setCommentInput(\"\");\n  };\n  // Like handler (likedBy map logic)\n  const handleLike = async (comment) => {\n    let likeUserId;\n    if (currentUser) {\n      likeUserId = currentUser.uid;\n    } else {\n      // Anonymous: use stable anonId from localStorage\n      likeUserId = localStorage.getItem('anonId');\n      if (!likeUserId) {\n        likeUserId = 'anon_' + Math.random().toString(36).substr(2, 9);\n        localStorage.setItem('anonId', likeUserId);\n      }\n    }\n    if (!likeUserId) return;\n    const currentSlide = presentation.slides[presentation.currentSlideIndex];\n    if (!currentSlide) return;\n    if (comment.likedBy && comment.likedBy[likeUserId]) return;\n    const newLikedBy = { ...(comment.likedBy || {}) };\n    newLikedBy[likeUserId] = true;\n    const commentRef = doc(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments', comment.id);\n    const payload = { likedBy: newLikedBy };\n    console.log('[handleLike] Updating comment with payload:', payload);\n    await updateDoc(commentRef, payload);\n  };\n\n  // Audience mode change handler\n  const handleAudienceModeChange = async (newMode) => {\n    try {\n      await PresentationService.setAudienceMode(courseId, presentationId, newMode);\n      setAudienceMode(newMode);\n      addToast(`Audience mode set to ${newMode === 'anonymous' ? 'Anonymous' : 'Enrolled Users'}`, 'success');\n    } catch (err) {\n      addToast('Failed to update audience mode', 'error');\n      console.error('[PresentationEditorV3] Error updating audience mode:', err);\n    }\n  };\n\n  // Debug log for overlay rendering\n  console.log('[OverlayRender] showDiscussion:', showDiscussion, 'isPresenting:', editorState.isPresenting);\n  return (\n    <div className=\"h-screen flex flex-col\">\n      {/* Toolbar */}\n      <PresentationToolbar\n        editorState={editorState}\n        onToolChange={handleToolChange}\n        onSave={handleSave}\n        onPresent={handlePresent}\n        onUndo={() => {}} // TODO: Implement undo/redo\n        onRedo={() => {}}\n        presentationTitle={presentation.title}\n        onTitleChange={handleTitleChange}\n        isSaving={isSaving}\n        selectedElement={selectedElement}\n        formattingState={formattingState}\n        onFormat={handleFormat}\n        audienceMode={audienceMode}\n        onAudienceModeChange={handleAudienceModeChange}\n      />\n      {/* Debug Panel */}\n      <div style={{ background: '#eee', padding: 8, marginBottom: 8, fontSize: 13, borderRadius: 4 }}>\n        <strong>DEBUG:</strong> user.uid: <code>{currentUser && currentUser.uid}</code> | user.role: <code>{debugInfo.userRole}</code> | courseId: <code>{courseId}</code> | course.instructorId: <code>{debugInfo.instructorId}</code> | presentation.ownerId: <code>{presentation.ownerId}</code>\n      </div>\n      <div className=\"flex-1 flex\">\n        {/* Sidebar */}\n        <div className=\"h-full overflow-y-auto\" style={{ maxHeight: 'calc(100vh - 64px)', minWidth: 120 }}>\n          <SlidesSidebar\n            slides={presentation.slides}\n            currentSlideIndex={presentation.currentSlideIndex}\n            onSlideSelect={handleSlideSelect}\n            onAddSlide={handleAddSlide}\n            onDuplicateSlide={handleDuplicateSlide}\n            onDeleteSlide={handleDeleteSlide}\n            onAddSlideAfter={handleAddSlideAfter}\n          />\n        </div>\n        {/* Canvas */}\n        <SlideCanvas\n          slide={presentation.slides[presentation.currentSlideIndex]}\n          editorState={editorState}\n          onElementSelect={handleElementSelect}\n          onElementUpdate={handleElementUpdate}\n          onElementAdd={handleElementAdd}\n          onElementDelete={handleElementDelete}\n          onSlideChange={handleSlideChange}\n          isLive={editorState.isPresenting}\n        />\n      </div>\n      {/* Toast notifications */}\n      <ToastContainer toasts={toasts} removeToast={removeToast} />\n      {editorState.isPresenting && (\n        <PresentationFullScreen\n          slides={presentation.slides}\n          currentIndex={presentation.currentSlideIndex}\n          onClose={() => setEditorState(prev => ({ ...prev, isPresenting: false }))}\n          onPrev={async () => {\n            setPresentation(prev => {\n              const newIndex = Math.max(0, prev.currentSlideIndex - 1);\n              console.log('[PRESENTER][NAV] Prev Slide Clicked. New currentSlideIndex:', newIndex);\n              if (presentationId && courseId && currentUser) {\n                const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n                console.log('[PRESENTER][NAV] Updating Firestore currentSlideIndex:', newIndex, 'DocRef:', docRef.path);\n                updateDoc(docRef, { currentSlideIndex: newIndex })\n                  .then(() => console.log('[PRESENTER][NAV] Firestore update success.'))\n                  .catch(err => console.error('[PRESENTER][NAV] Firestore update error:', err));\n              }\n              return { ...prev, currentSlideIndex: newIndex };\n            });\n          }}\n          onNext={async () => {\n            setPresentation(prev => {\n              const newIndex = Math.min(presentation.slides.length - 1, prev.currentSlideIndex + 1);\n              console.log('[PRESENTER][NAV] Next Slide Clicked. New currentSlideIndex:', newIndex);\n              if (presentationId && courseId && currentUser) {\n                const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n                console.log('[PRESENTER][NAV] Updating Firestore currentSlideIndex:', newIndex, 'DocRef:', docRef.path);\n                updateDoc(docRef, { currentSlideIndex: newIndex })\n                  .then(() => console.log('[PRESENTER][NAV] Firestore update success.'))\n                  .catch(err => console.error('[PRESENTER][NAV] Firestore update error:', err));\n              }\n              return { ...prev, currentSlideIndex: newIndex };\n            });\n          }}\n          showDiscussion={showDiscussion}\n          setShowDiscussion={setShowDiscussion}\n          comments={comments}\n          commentInput={commentInput}\n          setCommentInput={setCommentInput}\n          handleCommentSubmit={handleCommentSubmit}\n          handleLike={handleLike}\n          currentUser={currentUser}\n        />\n      )}\n      {/* Discussion Overlay rendered at the top level, not inside PresentationFullScreen */}\n      {showDiscussion && (\n        <div className=\"fixed inset-0 z-[9999] flex items-center justify-center bg-black bg-opacity-60\" style={{pointerEvents: 'auto'}}>\n          <div className=\"absolute inset-0\" onClick={e => { e.stopPropagation(); setShowDiscussion(false); }} />\n          <div className=\"relative flex w-full h-full z-70\">\n            {/* Left: Grouping area (placeholder) */}\n            <div className=\"flex-1 bg-gray-100 flex flex-col items-center justify-center border-r border-gray-300\">\n              <div className=\"text-gray-400 text-lg\">(Grouping area placeholder)</div>\n            </div>\n            {/* Right: Chat/comments */}\n            <div className=\"w-[400px] max-w-full bg-white flex flex-col h-full shadow-xl relative\">\n              {/* Header */}\n              <div className=\"flex items-center justify-between px-4 py-3 border-b\">\n                <div className=\"font-semibold text-lg\">Slide Discussion</div>\n                {/* X button to close overlay */}\n                <button\n                  className=\"ml-2 text-gray-500 hover:text-red-600 text-2xl font-bold focus:outline-none\"\n                  onClick={e => { e.stopPropagation(); setShowDiscussion(false); }}\n                  title=\"Close discussion\"\n                  aria-label=\"Close discussion\"\n                >×</button>\n              </div>\n              {/* Chat panel */}\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-3\">\n                {comments.length === 0 ? (\n                  <div className=\"text-gray-400 text-center\">No messages yet.</div>\n                ) : (\n                  comments.map((c) => {\n                    const likeUserId = currentUser ? currentUser.uid : '';\n                    const alreadyLiked = c.likedBy && likeUserId && c.likedBy[likeUserId];\n                    const likeCount = c.likedBy ? Object.keys(c.likedBy).length : 0;\n                    return (\n                      <div\n                        key={c.id}\n                        className=\"bg-gray-100 rounded px-3 py-2 flex items-center group\"\n                        title={c.username}\n                      >\n                        {/* Like icon and count */}\n                        <button\n                          className={`flex items-center mr-3 text-gray-500 hover:text-primary-600 focus:outline-none ${alreadyLiked ? 'opacity-50 cursor-not-allowed' : ''}`}\n                          onClick={() => handleLike(c)}\n                          tabIndex={0}\n                          aria-label=\"Like comment\"\n                          disabled={alreadyLiked}\n                        >\n                          <ThumbsUp className=\"w-5 h-5 mr-1\" />\n                          <span className=\"text-sm font-semibold\">{likeCount}</span>\n                        </button>\n                        {/* Comment text */}\n                        <span className=\"text-gray-800 text-sm\" style={{ cursor: 'pointer' }}>\n                          {c.text}\n                        </span>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n              {/* Input box */}\n              <form className=\"flex items-center border-t px-4 py-3\" onSubmit={handleCommentSubmit}>\n                <input\n                  type=\"text\"\n                  className=\"flex-1 border rounded px-3 py-2 mr-2 focus:outline-none focus:border-primary-500\"\n                  placeholder=\"Type a comment...\"\n                  value={commentInput}\n                  onChange={e => setCommentInput(e.target.value)}\n                />\n                <button type=\"submit\" className=\"bg-primary-600 text-white px-4 py-2 rounded font-semibold disabled:opacity-50\" disabled={!commentInput.trim()}>\n                  Send\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAChF,SAASC,GAAG,EAAEC,MAAM,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,UAAU,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;AAC7I,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,cAAc,QAAQ,qBAAqB;AACpD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,mBAAmB,MAAM,iCAAiC;AACjE,SAASC,QAAQ,EAAEC,aAAa,QAAQ,cAAc;AACtD,OAAOC,sBAAsB,MAAM,0BAA0B;;AAE7D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,mBAAmB,GAAG;EAC1BC,EAAE,EAAE,gBAAgB;EACpBC,KAAK,EAAE,uBAAuB;EAC9BC,MAAM,EAAE,CACN;IACEF,EAAE,EAAE,SAAS;IACbC,KAAK,EAAE,eAAe;IACtBE,QAAQ,EAAE;EACZ,CAAC,CACF;EACDC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;EACrBC,SAAS,EAAE,IAAID,IAAI,CAAC,CAAC;EACrBE,iBAAiB,EAAE;AACrB,CAAC;AAED,eAAe,SAASC,oBAAoBA,CAAC;EAAEC,QAAQ;EAAEC,cAAc,GAAG,mBAAmB;EAAET;AAAM,CAAC,EAAE;EAAAU,EAAA;EACtG,MAAM;IAAEC;EAAY,CAAC,GAAGpB,OAAO,CAAC,CAAC;EACjC;EACA,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC4B,mBAAmB,CAAC;EACrE,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAG7C,QAAQ,CAAC;IAC7C8C,eAAe,EAAE,IAAI;IACrBC,IAAI,EAAE,QAAQ;IACdC,YAAY,EAAE,KAAK;IACnBC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnD,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoD,QAAQ,EAAEC,WAAW,CAAC,GAAGrD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsD,MAAM,EAAEC,SAAS,CAAC,GAAGvD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACwD,YAAY,EAAEC,eAAe,CAAC,GAAGzD,QAAQ,CAAC,eAAe,CAAC;EACjE,MAAM,CAAC0D,cAAc,EAAEC,iBAAiB,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC4D,YAAY,EAAEC,eAAe,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC8D,QAAQ,EAAEC,WAAW,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgE,cAAc,GAAG5D,MAAM,CAAC,IAAI,CAAC;EACnC;EACA,MAAM,CAAC6D,SAAS,EAAEC,YAAY,CAAC,GAAGlE,QAAQ,CAAC;IAAEmE,YAAY,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;;EAE9E;EACA,MAAMC,QAAQ,GAAGnE,WAAW,CAAC,CAACoE,OAAO,EAAEC,IAAI,GAAG,MAAM,EAAEC,QAAQ,GAAG,IAAI,KAAK;IACxE,MAAM3C,EAAE,GAAGK,IAAI,CAACuC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;IAChCnB,SAAS,CAACoB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAE9C,EAAE;MAAEyC,OAAO;MAAEC,IAAI;MAAEC;IAAS,CAAC,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,WAAW,GAAG1E,WAAW,CAAE2B,EAAE,IAAK;IACtC0B,SAAS,CAACoB,IAAI,IAAIA,IAAI,CAACE,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACjD,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC1D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5B,SAAS,CAAC,MAAM;IACd,MAAM8E,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAE1C,cAAc,CAAC;QACpD,MAAM2C,MAAM,GAAG7E,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,CAAC;QAC5E,MAAM4C,OAAO,GAAG,MAAM7E,MAAM,CAAC4E,MAAM,CAAC;QACpC,IAAInD,MAAM,GAAG,EAAE;QACf;QACA,MAAMqD,SAAS,GAAG3E,UAAU,CAACO,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,EAAE,QAAQ,CAAC;QAChG,MAAM8C,WAAW,GAAG1E,KAAK,CAACyE,SAAS,EAAExE,OAAO,CAAC,OAAO,CAAC,CAAC;QACtD,MAAM0E,UAAU,GAAG,MAAM5E,OAAO,CAAC2E,WAAW,CAAC;QAC7CtD,MAAM,GAAGuD,UAAU,CAACC,IAAI,CAACC,GAAG,CAACnF,GAAG,IAAI;UAClC,MAAMoF,IAAI,GAAGpF,GAAG,CAACoF,IAAI,CAAC,CAAC;UACvB,OAAO;YACL5D,EAAE,EAAExB,GAAG,CAACwB,EAAE;YACV,GAAG4D,IAAI;YACPzD,QAAQ,EAAE0D,KAAK,CAACC,OAAO,CAACF,IAAI,CAACzD,QAAQ,CAAC,GAAGyD,IAAI,CAACzD,QAAQ,GAAG;UAC3D,CAAC;QACH,CAAC,CAAC;QACFgD,OAAO,CAACC,GAAG,CAAC,2DAA2D,EAAElD,MAAM,CAAC;QAChF,IAAIoD,OAAO,CAACS,MAAM,CAAC,CAAC,EAAE;UAAA,IAAAC,eAAA,EAAAC,eAAA;UACpB,MAAML,IAAI,GAAGN,OAAO,CAACM,IAAI,CAAC,CAAC;UAC3B9C,eAAe,CAAC;YACd,GAAG8C,IAAI;YACP1D,MAAM;YACNE,SAAS,EAAE,EAAA4D,eAAA,GAAAJ,IAAI,CAACxD,SAAS,cAAA4D,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,CAAC,CAAC,KAAI,IAAI7D,IAAI,CAAC,CAAC;YACjDC,SAAS,EAAE,EAAA2D,eAAA,GAAAL,IAAI,CAACtD,SAAS,cAAA2D,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,CAAC,CAAC,KAAI,IAAI7D,IAAI,CAAC;UAClD,CAAC,CAAC;QACJ,CAAC,MAAM;UACL,IAAI,CAACO,WAAW,EAAE,MAAM,IAAIuD,KAAK,CAAC,mBAAmB,CAAC;UACtDhB,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;UACtD,MAAMzE,MAAM,CAAC0E,MAAM,EAAE;YACnB,GAAGtD,mBAAmB;YACtBG,MAAM,EAAE,EAAE;YACVF,EAAE,EAAEU,cAAc;YAClBN,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;YACrBC,SAAS,EAAE,IAAID,IAAI,CAAC,CAAC;YACrB+D,OAAO,EAAExD,WAAW,CAACyD,GAAG;YACxB5D,QAAQ,EAAEA,QAAQ,IAAI;UACxB,CAAC,CAAC;UACFK,eAAe,CAAC;YAAE,GAAGf,mBAAmB;YAAEG,MAAM,EAAE,EAAE;YAAEF,EAAE,EAAEU,cAAc;YAAE0D,OAAO,EAAExD,WAAW,CAACyD,GAAG;YAAE5D,QAAQ,EAAEA,QAAQ,IAAI;UAAK,CAAC,CAAC;QACnI;MACF,CAAC,CAAC,OAAO6D,KAAK,EAAE;QACdnB,OAAO,CAACmB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnD,IAAIA,KAAK,CAACC,IAAI,KAAK,mBAAmB,IAAID,KAAK,CAAC7B,OAAO,CAAC+B,QAAQ,CAAC,YAAY,CAAC,EAAE;UAC9EhC,QAAQ,CAAC,yDAAyD,EAAE,OAAO,EAAE,IAAI,CAAC;QACpF,CAAC,MAAM;UACLA,QAAQ,CAAC,6BAA6B,EAAE,OAAO,CAAC;QAClD;MACF,CAAC,SAAS;QACRlB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACD,IAAIV,WAAW,EAAEsC,gBAAgB,CAAC,CAAC;EACrC,CAAC,EAAE,CAACxC,cAAc,EAAE8B,QAAQ,EAAE5B,WAAW,EAAEH,QAAQ,CAAC,CAAC;;EAErD;EACArC,SAAS,CAAC,MAAM;IACd,IAAIyC,YAAY,EAAE;MAChBsC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEvC,YAAY,CAAC;MACxE,IAAIA,YAAY,CAACX,MAAM,EAAE;QACvBiD,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEvC,YAAY,CAACX,MAAM,CAAC;QACxEW,YAAY,CAACX,MAAM,CAACuE,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;UAC1CxB,OAAO,CAACC,GAAG,CAAC,gCAAgCuB,GAAG,YAAY,EAAED,KAAK,CAACE,QAAQ,CAAC;QAC9E,CAAC,CAAC;MACJ,CAAC,MAAM;QACLzB,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;MACxE;IACF;EACF,CAAC,EAAE,CAACvC,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMgE,gBAAgB,GAAGxG,WAAW,CAAC,MAAOyG,gBAAgB,IAAK;IAC/D,IAAI;MACF,IAAI,CAAClE,WAAW,EAAE,MAAM,IAAIuD,KAAK,CAAC,mBAAmB,CAAC;MACtDhB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE0B,gBAAgB,CAAC;MACrDtD,WAAW,CAAC,IAAI,CAAC;MAEjB,MAAM6B,MAAM,GAAG7E,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,CAAC;MAC5E,MAAMhC,SAAS,CAAC2E,MAAM,EAAE;QACtB,GAAGyB,gBAAgB;QACnBxE,SAAS,EAAE,IAAID,IAAI,CAAC,CAAC;QACrB+D,OAAO,EAAExD,WAAW,CAACyD,GAAG;QACxB5D,QAAQ,EAAEA,QAAQ,IAAI;MACxB,CAAC,CAAC;MAEF0C,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;MAC9CZ,QAAQ,CAAC,oBAAoB,EAAE,SAAS,EAAE,IAAI,CAAC;IACjD,CAAC,CAAC,OAAO8B,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,IAAIA,KAAK,CAACC,IAAI,KAAK,mBAAmB,IAAID,KAAK,CAAC7B,OAAO,CAAC+B,QAAQ,CAAC,YAAY,CAAC,EAAE;QAC9EhC,QAAQ,CAAC,uDAAuD,EAAE,OAAO,EAAE,IAAI,CAAC;MAClF,CAAC,MAAM;QACLA,QAAQ,CAAC,6BAA6B,EAAE,OAAO,CAAC;MAClD;IACF,CAAC,SAAS;MACRhB,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC,EAAE,CAACd,cAAc,EAAE8B,QAAQ,EAAE5B,WAAW,EAAEH,QAAQ,CAAC,CAAC;;EAErD;EACArC,SAAS,CAAC,MAAM;IACd,IAAI+D,cAAc,CAAC4C,OAAO,EAAE;MAC1BC,YAAY,CAAC7C,cAAc,CAAC4C,OAAO,CAAC;IACtC;IAEA,IAAI,CAAC1D,SAAS,EAAE;MACdc,cAAc,CAAC4C,OAAO,GAAGE,UAAU,CAAC,MAAM;QACxCJ,gBAAgB,CAAChE,YAAY,CAAC;MAChC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IAEA,OAAO,MAAM;MACX,IAAIsB,cAAc,CAAC4C,OAAO,EAAE;QAC1BC,YAAY,CAAC7C,cAAc,CAAC4C,OAAO,CAAC;MACtC;IACF,CAAC;EACH,CAAC,EAAE,CAAClE,YAAY,EAAEgE,gBAAgB,EAAExD,SAAS,CAAC,CAAC;;EAE/C;EACA,MAAM6D,UAAU,GAAG7G,WAAW,CAAC,YAAY;IACzC,IAAI8D,cAAc,CAAC4C,OAAO,EAAE;MAC1BC,YAAY,CAAC7C,cAAc,CAAC4C,OAAO,CAAC;IACtC;IACA,MAAMF,gBAAgB,CAAChE,YAAY,CAAC;EACtC,CAAC,EAAE,CAACA,YAAY,EAAEgE,gBAAgB,CAAC,CAAC;;EAEpC;EACA,MAAMM,cAAc,GAAG9G,WAAW,CAAC,MAAM;IACvC,MAAM+G,QAAQ,GAAG;MACfpF,EAAE,EAAE,SAASK,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE;MACzB3C,KAAK,EAAE,SAASY,YAAY,CAACX,MAAM,CAACmF,MAAM,GAAG,CAAC,EAAE;MAChDlF,QAAQ,EAAE;IACZ,CAAC;IAEDW,eAAe,CAACgC,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP5C,MAAM,EAAE,CAAC,GAAG4C,IAAI,CAAC5C,MAAM,EAAEkF,QAAQ,CAAC;MAClC7E,iBAAiB,EAAEuC,IAAI,CAAC5C,MAAM,CAACmF;IACjC,CAAC,CAAC,CAAC;IAEH7C,QAAQ,CAAC,iBAAiB,EAAE,SAAS,EAAE,IAAI,CAAC;EAC9C,CAAC,EAAE,CAAC3B,YAAY,CAACX,MAAM,CAACmF,MAAM,EAAE7C,QAAQ,CAAC,CAAC;EAE1C,MAAM8C,oBAAoB,GAAGjH,WAAW,CAAEkH,KAAK,IAAK;IAClD,MAAMC,gBAAgB,GAAG3E,YAAY,CAACX,MAAM,CAACqF,KAAK,CAAC;IACnD,MAAMH,QAAQ,GAAG;MACf,GAAGI,gBAAgB;MACnBxF,EAAE,EAAE,SAASK,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE;MACzB3C,KAAK,EAAE,GAAGuF,gBAAgB,CAACvF,KAAK;IAClC,CAAC;IAED,MAAMwF,SAAS,GAAG,CAAC,GAAG5E,YAAY,CAACX,MAAM,CAAC;IAC1CuF,SAAS,CAACC,MAAM,CAACH,KAAK,GAAG,CAAC,EAAE,CAAC,EAAEH,QAAQ,CAAC;IAExCtE,eAAe,CAACgC,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP5C,MAAM,EAAEuF,SAAS;MACjBlF,iBAAiB,EAAEgF,KAAK,GAAG;IAC7B,CAAC,CAAC,CAAC;IAEH/C,QAAQ,CAAC,kBAAkB,EAAE,SAAS,EAAE,IAAI,CAAC;EAC/C,CAAC,EAAE,CAAC3B,YAAY,CAACX,MAAM,EAAEsC,QAAQ,CAAC,CAAC;EAEnC,MAAMmD,iBAAiB,GAAGtH,WAAW,CAAEkH,KAAK,IAAK;IAC/C,IAAI1E,YAAY,CAACX,MAAM,CAACmF,MAAM,IAAI,CAAC,EAAE;MACnC7C,QAAQ,CAAC,8BAA8B,EAAE,SAAS,CAAC;MACnD;IACF;IAEA,MAAMiD,SAAS,GAAG5E,YAAY,CAACX,MAAM,CAAC8C,MAAM,CAAC,CAAC4C,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKN,KAAK,CAAC;IACnE,MAAMO,eAAe,GAAGC,IAAI,CAACC,GAAG,CAC9BnF,YAAY,CAACN,iBAAiB,EAC9BkF,SAAS,CAACJ,MAAM,GAAG,CACrB,CAAC;IAEDvE,eAAe,CAACgC,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP5C,MAAM,EAAEuF,SAAS;MACjBlF,iBAAiB,EAAEuF;IACrB,CAAC,CAAC,CAAC;IAEHtD,QAAQ,CAAC,eAAe,EAAE,SAAS,EAAE,IAAI,CAAC;EAC5C,CAAC,EAAE,CAAC3B,YAAY,CAACX,MAAM,EAAEW,YAAY,CAACN,iBAAiB,EAAEiC,QAAQ,CAAC,CAAC;EAEnE,MAAMyD,mBAAmB,GAAG5H,WAAW,CAAEkH,KAAK,IAAK;IACjD,MAAMH,QAAQ,GAAG;MACfpF,EAAE,EAAE,SAASK,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE;MACzB3C,KAAK,EAAE,SAASY,YAAY,CAACX,MAAM,CAACmF,MAAM,GAAG,CAAC,EAAE;MAChDlF,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMsF,SAAS,GAAG,CAAC,GAAG5E,YAAY,CAACX,MAAM,CAAC;IAC1CuF,SAAS,CAACC,MAAM,CAACH,KAAK,GAAG,CAAC,EAAE,CAAC,EAAEH,QAAQ,CAAC;IAExCtE,eAAe,CAACgC,IAAI,KAAK;MACvB,GAAGA,IAAI;MACP5C,MAAM,EAAEuF,SAAS;MACjBlF,iBAAiB,EAAEgF,KAAK,GAAG;IAC7B,CAAC,CAAC,CAAC;IAEH/C,QAAQ,CAAC,iBAAiB,EAAE,SAAS,EAAE,IAAI,CAAC;EAC9C,CAAC,EAAE,CAAC3B,YAAY,CAACX,MAAM,CAACmF,MAAM,EAAE7C,QAAQ,CAAC,CAAC;;EAE1C;EACA,MAAM0D,mBAAmB,GAAG7H,WAAW,CAAE8H,SAAS,IAAK;IACrDnF,cAAc,CAAC8B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE7B,eAAe,EAAEkF;IAAU,CAAC,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,mBAAmB,GAAG/H,WAAW,CAAC,CAAC8H,SAAS,EAAEE,OAAO,KAAK;IAC9DvF,eAAe,CAACgC,IAAI,IAAI;MACtB,MAAM2C,SAAS,GAAG,CAAC,GAAG3C,IAAI,CAAC5C,MAAM,CAAC;MAClC,MAAMoG,YAAY,GAAGb,SAAS,CAAC3C,IAAI,CAACvC,iBAAiB,CAAC;MACtD,MAAMgG,YAAY,GAAGD,YAAY,CAACnG,QAAQ,CAACqG,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACzG,EAAE,KAAKmG,SAAS,CAAC;MAE/E,IAAII,YAAY,KAAK,CAAC,CAAC,EAAE;QACvBd,SAAS,CAAC3C,IAAI,CAACvC,iBAAiB,CAAC,GAAG;UAClC,GAAG+F,YAAY;UACfnG,QAAQ,EAAEmG,YAAY,CAACnG,QAAQ,CAACwD,GAAG,CAAC,CAAC8C,EAAE,EAAElB,KAAK,KAC5CA,KAAK,KAAKgB,YAAY,GAAG;YAAE,GAAGE,EAAE;YAAE,GAAGJ;UAAQ,CAAC,GAAGI,EACnD;QACF,CAAC;MACH;MAEA,OAAO;QAAE,GAAG3D,IAAI;QAAE5C,MAAM,EAAEuF;MAAU,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMiB,gBAAgB,GAAGrI,WAAW,CAAEsI,WAAW,IAAK;IACpD,MAAMC,UAAU,GAAG;MACjB5G,EAAE,EAAE,WAAWK,IAAI,CAACuC,GAAG,CAAC,CAAC,EAAE;MAC3B,GAAG+D;IACL,CAAC;IAED7F,eAAe,CAACgC,IAAI,IAAI;MACtB,MAAM2C,SAAS,GAAG,CAAC,GAAG3C,IAAI,CAAC5C,MAAM,CAAC;MAClC,MAAMoG,YAAY,GAAGb,SAAS,CAAC3C,IAAI,CAACvC,iBAAiB,CAAC;MAEtDkF,SAAS,CAAC3C,IAAI,CAACvC,iBAAiB,CAAC,GAAG;QAClC,GAAG+F,YAAY;QACfnG,QAAQ,EAAE,CAAC,GAAGmG,YAAY,CAACnG,QAAQ,EAAEyG,UAAU;MACjD,CAAC;MAED,OAAO;QAAE,GAAG9D,IAAI;QAAE5C,MAAM,EAAEuF;MAAU,CAAC;IACvC,CAAC,CAAC;;IAEF;IACAzE,cAAc,CAAC8B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE7B,eAAe,EAAE2F,UAAU,CAAC5G;IAAG,CAAC,CAAC,CAAC;IACrEwC,QAAQ,CAAC,eAAe,EAAE,SAAS,EAAE,IAAI,CAAC;EAC5C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMqE,mBAAmB,GAAGxI,WAAW,CAAE8H,SAAS,IAAK;IACrDrF,eAAe,CAACgC,IAAI,IAAI;MACtB,MAAM2C,SAAS,GAAG,CAAC,GAAG3C,IAAI,CAAC5C,MAAM,CAAC;MAClC,MAAMoG,YAAY,GAAGb,SAAS,CAAC3C,IAAI,CAACvC,iBAAiB,CAAC;MAEtDkF,SAAS,CAAC3C,IAAI,CAACvC,iBAAiB,CAAC,GAAG;QAClC,GAAG+F,YAAY;QACfnG,QAAQ,EAAEmG,YAAY,CAACnG,QAAQ,CAAC6C,MAAM,CAACyD,EAAE,IAAIA,EAAE,CAACzG,EAAE,KAAKmG,SAAS;MAClE,CAAC;MAED,OAAO;QAAE,GAAGrD,IAAI;QAAE5C,MAAM,EAAEuF;MAAU,CAAC;IACvC,CAAC,CAAC;IAEFzE,cAAc,CAAC8B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE7B,eAAe,EAAE;IAAK,CAAC,CAAC,CAAC;IAC5DuB,QAAQ,CAAC,iBAAiB,EAAE,SAAS,EAAE,IAAI,CAAC;EAC9C,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMsE,gBAAgB,GAAGzI,WAAW,CAAE6C,IAAI,IAAK;IAC7CF,cAAc,CAAC8B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE5B;IAAK,CAAC,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM6F,iBAAiB,GAAG1I,WAAW,CAAE4B,KAAK,IAAK;IAC/Ca,eAAe,CAACgC,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE7C;IAAM,CAAC,CAAC,CAAC;EAC/C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM+G,iBAAiB,GAAG3I,WAAW,CAAEkH,KAAK,IAAK;IAC/CzE,eAAe,CAACgC,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAEvC,iBAAiB,EAAEgF;IAAM,CAAC,CAAC,CAAC;IAChEvE,cAAc,CAAC8B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE7B,eAAe,EAAE;IAAK,CAAC,CAAC,CAAC;IAC5D;IACAkC,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEmC,KAAK,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM0B,aAAa,GAAG5I,WAAW,CAAC,YAAY;IAC5C2C,cAAc,CAAC8B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE3B,YAAY,EAAE;IAAK,CAAC,CAAC,CAAC;IACzDqB,QAAQ,CAAC,0BAA0B,EAAE,MAAM,CAAC;IAC5C,IAAI;MACF,MAAM/C,mBAAmB,CAACyH,mBAAmB,CAACzG,QAAQ,EAAEC,cAAc,CAAC;MACvE8B,QAAQ,CAAC,2BAA2B,EAAE,SAAS,CAAC;IAClD,CAAC,CAAC,OAAO2E,GAAG,EAAE;MACZ3E,QAAQ,CAAC,mCAAmC,IAAI2E,GAAG,CAAC1E,OAAO,IAAI0E,GAAG,CAAC,EAAE,OAAO,CAAC;MAC7EhE,OAAO,CAACmB,KAAK,CAAC,yDAAyD,EAAE6C,GAAG,CAAC;IAC/E;EACF,CAAC,EAAE,CAAC3E,QAAQ,EAAE/B,QAAQ,EAAEC,cAAc,CAAC,CAAC;;EAExC;EACA;EACA,MAAM0G,iBAAiB,GAAG/I,WAAW,CAAC,CAACgJ,KAAK,EAAEC,KAAK,KAAK;IACtDxG,eAAe,CAACgC,IAAI,IAAI;MACtB,MAAM2C,SAAS,GAAG,CAAC,GAAG3C,IAAI,CAAC5C,MAAM,CAAC;MAClC,MAAMyE,GAAG,GAAG7B,IAAI,CAACvC,iBAAiB;MAClC,IAAI,CAACkF,SAAS,CAACd,GAAG,CAAC,EAAE,OAAO7B,IAAI;MAChC2C,SAAS,CAACd,GAAG,CAAC,GAAG;QAAE,GAAGc,SAAS,CAACd,GAAG,CAAC;QAAE,CAAC0C,KAAK,GAAGC;MAAM,CAAC;MACtD,OAAO;QAAE,GAAGxE,IAAI;QAAE5C,MAAM,EAAEuF;MAAU,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArH,SAAS,CAAC,MAAM;IACd,IAAI,CAACsC,cAAc,IAAI,CAACD,QAAQ,IAAI,CAACG,WAAW,EAAE;IAClD,MAAM2G,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACF,MAAMlE,MAAM,GAAG7E,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,CAAC;QAC5EyC,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEvC,YAAY,CAACN,iBAAiB,CAAC;QAC7F,MAAM7B,SAAS,CAAC2E,MAAM,EAAE;UAAE9C,iBAAiB,EAAEM,YAAY,CAACN;QAAkB,CAAC,CAAC;MAChF,CAAC,CAAC,OAAO4G,GAAG,EAAE;QACZhE,OAAO,CAACmB,KAAK,CAAC,0DAA0D,EAAE6C,GAAG,CAAC;MAChF;IACF,CAAC;IACDI,uBAAuB,CAAC,CAAC;EAC3B,CAAC,EAAE,CAAC1G,YAAY,CAACN,iBAAiB,EAAEG,cAAc,EAAED,QAAQ,EAAEG,WAAW,CAAC,CAAC;;EAE3E;EACAxC,SAAS,CAAC,MAAM;IACd,IAAI,CAAC2C,WAAW,CAACI,YAAY,IAAI,CAACT,cAAc,IAAI,CAACD,QAAQ,IAAI,CAACoD,KAAK,CAACC,OAAO,CAACjD,YAAY,CAACX,MAAM,CAAC,IAAI,CAACW,YAAY,CAACX,MAAM,CAACmF,MAAM,EAAE;IACrI,MAAMiB,YAAY,GAAGzF,YAAY,CAACX,MAAM,CAACW,YAAY,CAACN,iBAAiB,CAAC;IACxE,IAAI,CAAC+F,YAAY,EAAE;IACnB,MAAMkB,WAAW,GAAG5I,UAAU,CAACO,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,EAAE,QAAQ,EAAE4F,YAAY,CAACtG,EAAE,EAAE,UAAU,CAAC;IAC/H,MAAMyH,CAAC,GAAG3I,KAAK,CAAC0I,WAAW,EAAEzI,OAAO,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IAC1D,MAAM2I,KAAK,GAAG1I,UAAU,CAACyI,CAAC,EAAGE,IAAI,IAAK;MACpC,MAAMC,GAAG,GAAG,EAAE;MACdD,IAAI,CAAClD,OAAO,CAACjG,GAAG,IAAIoJ,GAAG,CAACC,IAAI,CAAC;QAAE7H,EAAE,EAAExB,GAAG,CAACwB,EAAE;QAAE,GAAGxB,GAAG,CAACoF,IAAI,CAAC;MAAE,CAAC,CAAC,CAAC;MAC5D1B,WAAW,CAAC0F,GAAG,CAAC;IAClB,CAAC,CAAC;IACF,OAAO,MAAMF,KAAK,CAAC,CAAC;EACtB,CAAC,EAAE,CAAC3G,WAAW,CAACI,YAAY,EAAET,cAAc,EAAED,QAAQ,EAAEI,YAAY,CAACX,MAAM,EAAEW,YAAY,CAACN,iBAAiB,CAAC,CAAC;;EAE7G;EACA,MAAMU,eAAe,GAAG/C,KAAK,CAACI,OAAO,CAAC,MAAM;IAC1C,MAAMoG,KAAK,GAAG7D,YAAY,CAACX,MAAM,CAACW,YAAY,CAACN,iBAAiB,CAAC;IACjE,IAAI,CAACmE,KAAK,EAAE,OAAO,IAAI;IACvB,OAAOA,KAAK,CAACvE,QAAQ,CAAC2H,IAAI,CAACrB,EAAE,IAAIA,EAAE,CAACzG,EAAE,KAAKe,WAAW,CAACE,eAAe,CAAC,IAAI,IAAI;EACjF,CAAC,EAAE,CAACJ,YAAY,EAAEE,WAAW,CAACE,eAAe,CAAC,CAAC;;EAE/C;EACA,MAAM8G,eAAe,GAAG7J,KAAK,CAACI,OAAO,CAAC,MAAM;IAC1C,IAAI,CAAC2C,eAAe,IAAIA,eAAe,CAACyB,IAAI,KAAK,MAAM,EAAE,OAAO,CAAC,CAAC;IAClE,MAAMsF,KAAK,GAAG/G,eAAe,CAAC+G,KAAK,IAAI,CAAC,CAAC;IACzC,OAAO;MACLC,IAAI,EAAED,KAAK,CAACE,UAAU,KAAK,MAAM;MACjCC,MAAM,EAAEH,KAAK,CAACI,SAAS,KAAK,QAAQ;MACpCC,SAAS,EAAEL,KAAK,CAACM,cAAc,KAAK,WAAW;MAC/CC,QAAQ,EAAEP,KAAK,CAACO,QAAQ,IAAI,EAAE;MAC9BC,KAAK,EAAER,KAAK,CAACQ,KAAK,IAAI,SAAS;MAC/BC,KAAK,EAAET,KAAK,CAACU,SAAS,IAAI;IAC5B,CAAC;EACH,CAAC,EAAE,CAACzH,eAAe,CAAC,CAAC;;EAErB;EACA,MAAM0H,YAAY,GAAGtK,WAAW,CAAC,CAACuK,MAAM,EAAEtB,KAAK,KAAK;IAClD,IAAI,CAACrG,eAAe,IAAIA,eAAe,CAACyB,IAAI,KAAK,MAAM,EAAE;IACzD5B,eAAe,CAACgC,IAAI,IAAI;MACtB,MAAM2C,SAAS,GAAG,CAAC,GAAG3C,IAAI,CAAC5C,MAAM,CAAC;MAClC,MAAMwE,KAAK,GAAGe,SAAS,CAAC3C,IAAI,CAACvC,iBAAiB,CAAC;MAC/C,MAAMoE,GAAG,GAAGD,KAAK,CAACvE,QAAQ,CAACqG,SAAS,CAACC,EAAE,IAAIA,EAAE,CAACzG,EAAE,KAAKiB,eAAe,CAACjB,EAAE,CAAC;MACxE,IAAI2E,GAAG,KAAK,CAAC,CAAC,EAAE,OAAO7B,IAAI;MAC3B,MAAM2D,EAAE,GAAG/B,KAAK,CAACvE,QAAQ,CAACwE,GAAG,CAAC;MAC9B,MAAMqD,KAAK,GAAG;QAAE,GAAGvB,EAAE,CAACuB;MAAM,CAAC;MAC7B,QAAQY,MAAM;QACZ,KAAK,MAAM;UACTZ,KAAK,CAACE,UAAU,GAAGF,KAAK,CAACE,UAAU,KAAK,MAAM,GAAG,QAAQ,GAAG,MAAM;UAClE;QACF,KAAK,QAAQ;UACXF,KAAK,CAACI,SAAS,GAAGJ,KAAK,CAACI,SAAS,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ;UACpE;QACF,KAAK,WAAW;UACdJ,KAAK,CAACM,cAAc,GAAGN,KAAK,CAACM,cAAc,KAAK,WAAW,GAAG,MAAM,GAAG,WAAW;UAClF;QACF,KAAK,UAAU;UACbN,KAAK,CAACO,QAAQ,GAAGjB,KAAK,IAAI,EAAE,CAAC,CAAC;UAC9B;QACF,KAAK,OAAO;UACVU,KAAK,CAACQ,KAAK,GAAGlB,KAAK,IAAI,SAAS;UAChC;QACF,KAAK,OAAO;UACVU,KAAK,CAACU,SAAS,GAAGpB,KAAK;UACvB;QACF;UACE;MACJ;MACA5C,KAAK,CAACvE,QAAQ,CAACwE,GAAG,CAAC,GAAG;QAAE,GAAG8B,EAAE;QAAEuB;MAAM,CAAC;MACtC,OAAO;QAAE,GAAGlF,IAAI;QAAE5C,MAAM,EAAEuF;MAAU,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACxE,eAAe,CAAC,CAAC;;EAErB;EACA7C,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,IAAI;QACF+E,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAExC,WAAW,CAAC;QAChD,IAAIA,WAAW,EAAE;UACfuC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAExC,WAAW,CAACyD,GAAG,CAAC;QAC1D;QACAlB,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE3C,QAAQ,CAAC;QAC1C0C,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE1C,cAAc,CAAC;QACtD;QACA,IAAIE,WAAW,EAAE;UACf,MAAMiI,UAAU,GAAGrK,GAAG,CAACW,EAAE,EAAE,OAAO,EAAEyB,WAAW,CAACyD,GAAG,CAAC;UACpD,MAAMyE,QAAQ,GAAG,MAAMrK,MAAM,CAACoK,UAAU,CAAC;UACzC,IAAIC,QAAQ,CAAC/E,MAAM,CAAC,CAAC,EAAE;YACrBZ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE0F,QAAQ,CAAClF,IAAI,CAAC,CAAC,CAAC;UACnD,CAAC,MAAM;YACLT,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;UAChD;QACF;QACA;QACA,IAAI3C,QAAQ,EAAE;UACZ,MAAMsI,YAAY,GAAGvK,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,CAAC;UACjD,MAAMuI,UAAU,GAAG,MAAMvK,MAAM,CAACsK,YAAY,CAAC;UAC7C,IAAIC,UAAU,CAACjF,MAAM,CAAC,CAAC,EAAE;YACvBZ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE4F,UAAU,CAACpF,IAAI,CAAC,CAAC,CAAC;UACvD,CAAC,MAAM;YACLT,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;UAClD;QACF;QACA;QACA,IAAI3C,QAAQ,IAAIC,cAAc,EAAE;UAC9B,MAAMuI,UAAU,GAAGzK,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,CAAC;UAChF,MAAMwI,QAAQ,GAAG,MAAMzK,MAAM,CAACwK,UAAU,CAAC;UACzC,IAAIC,QAAQ,CAACnF,MAAM,CAAC,CAAC,EAAE;YACrBZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE8F,QAAQ,CAACtF,IAAI,CAAC,CAAC,CAAC;UAC3D,CAAC,MAAM;YACLT,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;UACxD;QACF;MACF,CAAC,CAAC,OAAO+D,GAAG,EAAE;QACZhE,OAAO,CAACmB,KAAK,CAAC,oCAAoC,EAAE6C,GAAG,CAAC;MAC1D;IACF,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,CAACvG,WAAW,EAAEH,QAAQ,EAAEC,cAAc,CAAC,CAAC;;EAE3C;EACAtC,SAAS,CAAC,MAAM;IACd,eAAe+K,cAAcA,CAAA,EAAG;MAC9B,IAAI;QACF,IAAI7G,YAAY,GAAG,EAAE;QACrB,IAAIC,QAAQ,GAAG,EAAE;QACjB,IAAI9B,QAAQ,EAAE;UACZ,MAAM2I,SAAS,GAAG,MAAM3K,MAAM,CAACD,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,CAAC,CAAC;UAC5D6B,YAAY,GAAG8G,SAAS,CAACrF,MAAM,CAAC,CAAC,GAAGqF,SAAS,CAACxF,IAAI,CAAC,CAAC,CAACtB,YAAY,GAAG,EAAE;QACxE;QACA,IAAI1B,WAAW,EAAE;UACf,MAAMyI,OAAO,GAAG,MAAM5K,MAAM,CAACD,GAAG,CAACW,EAAE,EAAE,OAAO,EAAEyB,WAAW,CAACyD,GAAG,CAAC,CAAC;UAC/D9B,QAAQ,GAAG8G,OAAO,CAACtF,MAAM,CAAC,CAAC,GAAGsF,OAAO,CAACzF,IAAI,CAAC,CAAC,CAAC0F,IAAI,GAAG,EAAE;QACxD;QACAjH,YAAY,CAAC;UAAEC,YAAY;UAAEC;QAAS,CAAC,CAAC;MAC1C,CAAC,CAAC,OAAOgH,CAAC,EAAE;QACVlH,YAAY,CAAC;UAAEC,YAAY,EAAE,KAAK;UAAEC,QAAQ,EAAE;QAAM,CAAC,CAAC;MACxD;IACF;IACA4G,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAAC1I,QAAQ,EAAEG,WAAW,CAAC,CAAC;;EAE3B;EACA,IAAIS,SAAS,EAAE;IACb,oBACEvB,OAAA;MAAK0J,SAAS,EAAC,uDAAuD;MAAAC,QAAA,eACpE3J,OAAA;QAAK0J,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B3J,OAAA;UAAK0J,SAAS,EAAC;QAA8F;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpH/J,OAAA;UAAG0J,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,MAAMC,mBAAmB,GAAG,MAAOP,CAAC,IAAK;IACvCA,CAAC,CAACQ,cAAc,CAAC,CAAC;IAClB,IAAI,CAAChI,YAAY,CAACiI,IAAI,CAAC,CAAC,IAAI,CAACpJ,WAAW,EAAE;IAC1C,MAAM0F,YAAY,GAAGzF,YAAY,CAACX,MAAM,CAACW,YAAY,CAACN,iBAAiB,CAAC;IACxE,IAAI,CAAC+F,YAAY,EAAE;IACnB,MAAMkB,WAAW,GAAG5I,UAAU,CAACO,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,EAAE,QAAQ,EAAE4F,YAAY,CAACtG,EAAE,EAAE,UAAU,CAAC;IAC/H,MAAMf,MAAM,CAACuI,WAAW,EAAE;MACxByC,IAAI,EAAElI,YAAY;MAClBmI,QAAQ,EAAEtJ,WAAW,CAACuJ,WAAW,IAAIvJ,WAAW,CAACwJ,KAAK,IAAIxJ,WAAW,CAACyD,GAAG;MACzEgG,OAAO,EAAE,CAAC,CAAC;MACXC,UAAU,EAAEpL,eAAe,CAAC,CAAC;MAC7BqL,OAAO,EAAE;IACX,CAAC,CAAC;IACFvI,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EACD;EACA,MAAMwI,UAAU,GAAG,MAAOC,OAAO,IAAK;IACpC,IAAIC,UAAU;IACd,IAAI9J,WAAW,EAAE;MACf8J,UAAU,GAAG9J,WAAW,CAACyD,GAAG;IAC9B,CAAC,MAAM;MACL;MACAqG,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC3C,IAAI,CAACF,UAAU,EAAE;QACfA,UAAU,GAAG,OAAO,GAAG3E,IAAI,CAAC8E,MAAM,CAAC,CAAC,CAAChI,QAAQ,CAAC,EAAE,CAAC,CAACiI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9DH,YAAY,CAACI,OAAO,CAAC,QAAQ,EAAEL,UAAU,CAAC;MAC5C;IACF;IACA,IAAI,CAACA,UAAU,EAAE;IACjB,MAAMpE,YAAY,GAAGzF,YAAY,CAACX,MAAM,CAACW,YAAY,CAACN,iBAAiB,CAAC;IACxE,IAAI,CAAC+F,YAAY,EAAE;IACnB,IAAImE,OAAO,CAACJ,OAAO,IAAII,OAAO,CAACJ,OAAO,CAACK,UAAU,CAAC,EAAE;IACpD,MAAMM,UAAU,GAAG;MAAE,IAAIP,OAAO,CAACJ,OAAO,IAAI,CAAC,CAAC;IAAE,CAAC;IACjDW,UAAU,CAACN,UAAU,CAAC,GAAG,IAAI;IAC7B,MAAMO,UAAU,GAAGzM,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,EAAE,QAAQ,EAAE4F,YAAY,CAACtG,EAAE,EAAE,UAAU,EAAEyK,OAAO,CAACzK,EAAE,CAAC;IACnI,MAAMkL,OAAO,GAAG;MAAEb,OAAO,EAAEW;IAAW,CAAC;IACvC7H,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAE8H,OAAO,CAAC;IACnE,MAAMxM,SAAS,CAACuM,UAAU,EAAEC,OAAO,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,wBAAwB,GAAG,MAAOC,OAAO,IAAK;IAClD,IAAI;MACF,MAAM3L,mBAAmB,CAACmC,eAAe,CAACnB,QAAQ,EAAEC,cAAc,EAAE0K,OAAO,CAAC;MAC5ExJ,eAAe,CAACwJ,OAAO,CAAC;MACxB5I,QAAQ,CAAC,wBAAwB4I,OAAO,KAAK,WAAW,GAAG,WAAW,GAAG,gBAAgB,EAAE,EAAE,SAAS,CAAC;IACzG,CAAC,CAAC,OAAOjE,GAAG,EAAE;MACZ3E,QAAQ,CAAC,gCAAgC,EAAE,OAAO,CAAC;MACnDW,OAAO,CAACmB,KAAK,CAAC,sDAAsD,EAAE6C,GAAG,CAAC;IAC5E;EACF,CAAC;;EAED;EACAhE,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEvB,cAAc,EAAE,eAAe,EAAEd,WAAW,CAACI,YAAY,CAAC;EACzG,oBACErB,OAAA;IAAK0J,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAErC3J,OAAA,CAACV,mBAAmB;MAClB2B,WAAW,EAAEA,WAAY;MACzBsK,YAAY,EAAEvE,gBAAiB;MAC/BwE,MAAM,EAAEpG,UAAW;MACnBqG,SAAS,EAAEtE,aAAc;MACzBuE,MAAM,EAAEA,CAAA,KAAM,CAAC,CAAE,CAAC;MAAA;MAClBC,MAAM,EAAEA,CAAA,KAAM,CAAC,CAAE;MACjBC,iBAAiB,EAAE7K,YAAY,CAACZ,KAAM;MACtC0L,aAAa,EAAE5E,iBAAkB;MACjCxF,QAAQ,EAAEA,QAAS;MACnBN,eAAe,EAAEA,eAAgB;MACjC8G,eAAe,EAAEA,eAAgB;MACjC6D,QAAQ,EAAEjD,YAAa;MACvBhH,YAAY,EAAEA,YAAa;MAC3BkK,oBAAoB,EAAEV;IAAyB;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eAEF/J,OAAA;MAAKkI,KAAK,EAAE;QAAE8D,UAAU,EAAE,MAAM;QAAEC,OAAO,EAAE,CAAC;QAAEC,YAAY,EAAE,CAAC;QAAEzD,QAAQ,EAAE,EAAE;QAAE0D,YAAY,EAAE;MAAE,CAAE;MAAAxC,QAAA,gBAC7F3J,OAAA;QAAA2J,QAAA,EAAQ;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAAW,eAAA/J,OAAA;QAAA2J,QAAA,EAAO7I,WAAW,IAAIA,WAAW,CAACyD;MAAG;QAAAqF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,kBAAc,eAAA/J,OAAA;QAAA2J,QAAA,EAAOrH,SAAS,CAACG;MAAQ;QAAAmH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,iBAAa,eAAA/J,OAAA;QAAA2J,QAAA,EAAOhJ;MAAQ;QAAAiJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,4BAAwB,eAAA/J,OAAA;QAAA2J,QAAA,EAAOrH,SAAS,CAACE;MAAY;QAAAoH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,6BAAyB,eAAA/J,OAAA;QAAA2J,QAAA,EAAO5I,YAAY,CAACuD;MAAO;QAAAsF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxR,CAAC,eACN/J,OAAA;MAAK0J,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAE1B3J,OAAA;QAAK0J,SAAS,EAAC,wBAAwB;QAACxB,KAAK,EAAE;UAAEkE,SAAS,EAAE,oBAAoB;UAAEC,QAAQ,EAAE;QAAI,CAAE;QAAA1C,QAAA,eAChG3J,OAAA,CAACT,aAAa;UACZa,MAAM,EAAEW,YAAY,CAACX,MAAO;UAC5BK,iBAAiB,EAAEM,YAAY,CAACN,iBAAkB;UAClD6L,aAAa,EAAEpF,iBAAkB;UACjCqF,UAAU,EAAElH,cAAe;UAC3BmH,gBAAgB,EAAEhH,oBAAqB;UACvCiH,aAAa,EAAE5G,iBAAkB;UACjC6G,eAAe,EAAEvG;QAAoB;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEN/J,OAAA,CAACR,WAAW;QACVoF,KAAK,EAAE7D,YAAY,CAACX,MAAM,CAACW,YAAY,CAACN,iBAAiB,CAAE;QAC3DQ,WAAW,EAAEA,WAAY;QACzB0L,eAAe,EAAEvG,mBAAoB;QACrCwG,eAAe,EAAEtG,mBAAoB;QACrCuG,YAAY,EAAEjG,gBAAiB;QAC/BkG,eAAe,EAAE/F,mBAAoB;QACrCgG,aAAa,EAAEzF,iBAAkB;QACjC0F,MAAM,EAAE/L,WAAW,CAACI;MAAa;QAAAuI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN/J,OAAA,CAACP,cAAc;MAACkC,MAAM,EAAEA,MAAO;MAACsB,WAAW,EAAEA;IAAY;MAAA2G,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3D9I,WAAW,CAACI,YAAY,iBACvBrB,OAAA,CAACF,sBAAsB;MACrBM,MAAM,EAAEW,YAAY,CAACX,MAAO;MAC5B6M,YAAY,EAAElM,YAAY,CAACN,iBAAkB;MAC7CyM,OAAO,EAAEA,CAAA,KAAMhM,cAAc,CAAC8B,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE3B,YAAY,EAAE;MAAM,CAAC,CAAC,CAAE;MAC1E8L,MAAM,EAAE,MAAAA,CAAA,KAAY;QAClBnM,eAAe,CAACgC,IAAI,IAAI;UACtB,MAAMoK,QAAQ,GAAGnH,IAAI,CAACoH,GAAG,CAAC,CAAC,EAAErK,IAAI,CAACvC,iBAAiB,GAAG,CAAC,CAAC;UACxD4C,OAAO,CAACC,GAAG,CAAC,6DAA6D,EAAE8J,QAAQ,CAAC;UACpF,IAAIxM,cAAc,IAAID,QAAQ,IAAIG,WAAW,EAAE;YAC7C,MAAMyC,MAAM,GAAG7E,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,CAAC;YAC5EyC,OAAO,CAACC,GAAG,CAAC,wDAAwD,EAAE8J,QAAQ,EAAE,SAAS,EAAE7J,MAAM,CAAC+J,IAAI,CAAC;YACvG1O,SAAS,CAAC2E,MAAM,EAAE;cAAE9C,iBAAiB,EAAE2M;YAAS,CAAC,CAAC,CAC/CG,IAAI,CAAC,MAAMlK,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC,CAAC,CACrEkK,KAAK,CAACnG,GAAG,IAAIhE,OAAO,CAACmB,KAAK,CAAC,0CAA0C,EAAE6C,GAAG,CAAC,CAAC;UACjF;UACA,OAAO;YAAE,GAAGrE,IAAI;YAAEvC,iBAAiB,EAAE2M;UAAS,CAAC;QACjD,CAAC,CAAC;MACJ,CAAE;MACFK,MAAM,EAAE,MAAAA,CAAA,KAAY;QAClBzM,eAAe,CAACgC,IAAI,IAAI;UACtB,MAAMoK,QAAQ,GAAGnH,IAAI,CAACC,GAAG,CAACnF,YAAY,CAACX,MAAM,CAACmF,MAAM,GAAG,CAAC,EAAEvC,IAAI,CAACvC,iBAAiB,GAAG,CAAC,CAAC;UACrF4C,OAAO,CAACC,GAAG,CAAC,6DAA6D,EAAE8J,QAAQ,CAAC;UACpF,IAAIxM,cAAc,IAAID,QAAQ,IAAIG,WAAW,EAAE;YAC7C,MAAMyC,MAAM,GAAG7E,GAAG,CAACW,EAAE,EAAE,SAAS,EAAEsB,QAAQ,EAAE,eAAe,EAAEC,cAAc,CAAC;YAC5EyC,OAAO,CAACC,GAAG,CAAC,wDAAwD,EAAE8J,QAAQ,EAAE,SAAS,EAAE7J,MAAM,CAAC+J,IAAI,CAAC;YACvG1O,SAAS,CAAC2E,MAAM,EAAE;cAAE9C,iBAAiB,EAAE2M;YAAS,CAAC,CAAC,CAC/CG,IAAI,CAAC,MAAMlK,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC,CAAC,CACrEkK,KAAK,CAACnG,GAAG,IAAIhE,OAAO,CAACmB,KAAK,CAAC,0CAA0C,EAAE6C,GAAG,CAAC,CAAC;UACjF;UACA,OAAO;YAAE,GAAGrE,IAAI;YAAEvC,iBAAiB,EAAE2M;UAAS,CAAC;QACjD,CAAC,CAAC;MACJ,CAAE;MACFrL,cAAc,EAAEA,cAAe;MAC/BC,iBAAiB,EAAEA,iBAAkB;MACrCG,QAAQ,EAAEA,QAAS;MACnBF,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA,eAAgB;MACjC8H,mBAAmB,EAAEA,mBAAoB;MACzCU,UAAU,EAAEA,UAAW;MACvB5J,WAAW,EAAEA;IAAY;MAAA8I,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACF,EAEAhI,cAAc,iBACb/B,OAAA;MAAK0J,SAAS,EAAC,gFAAgF;MAACxB,KAAK,EAAE;QAACwF,aAAa,EAAE;MAAM,CAAE;MAAA/D,QAAA,gBAC7H3J,OAAA;QAAK0J,SAAS,EAAC,kBAAkB;QAACiE,OAAO,EAAElE,CAAC,IAAI;UAAEA,CAAC,CAACmE,eAAe,CAAC,CAAC;UAAE5L,iBAAiB,CAAC,KAAK,CAAC;QAAE;MAAE;QAAA4H,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtG/J,OAAA;QAAK0J,SAAS,EAAC,kCAAkC;QAAAC,QAAA,gBAE/C3J,OAAA;UAAK0J,SAAS,EAAC,uFAAuF;UAAAC,QAAA,eACpG3J,OAAA;YAAK0J,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAC;UAA2B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE,CAAC,eAEN/J,OAAA;UAAK0J,SAAS,EAAC,uEAAuE;UAAAC,QAAA,gBAEpF3J,OAAA;YAAK0J,SAAS,EAAC,sDAAsD;YAAAC,QAAA,gBACnE3J,OAAA;cAAK0J,SAAS,EAAC,uBAAuB;cAAAC,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAE7D/J,OAAA;cACE0J,SAAS,EAAC,6EAA6E;cACvFiE,OAAO,EAAElE,CAAC,IAAI;gBAAEA,CAAC,CAACmE,eAAe,CAAC,CAAC;gBAAE5L,iBAAiB,CAAC,KAAK,CAAC;cAAE,CAAE;cACjE7B,KAAK,EAAC,kBAAkB;cACxB,cAAW,kBAAkB;cAAAwJ,QAAA,EAC9B;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eAEN/J,OAAA;YAAK0J,SAAS,EAAC,sCAAsC;YAAAC,QAAA,EAClDxH,QAAQ,CAACoD,MAAM,KAAK,CAAC,gBACpBvF,OAAA;cAAK0J,SAAS,EAAC,2BAA2B;cAAAC,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,GAEjE5H,QAAQ,CAAC0B,GAAG,CAAEgK,CAAC,IAAK;cAClB,MAAMjD,UAAU,GAAG9J,WAAW,GAAGA,WAAW,CAACyD,GAAG,GAAG,EAAE;cACrD,MAAMuJ,YAAY,GAAGD,CAAC,CAACtD,OAAO,IAAIK,UAAU,IAAIiD,CAAC,CAACtD,OAAO,CAACK,UAAU,CAAC;cACrE,MAAMmD,SAAS,GAAGF,CAAC,CAACtD,OAAO,GAAGyD,MAAM,CAACC,IAAI,CAACJ,CAAC,CAACtD,OAAO,CAAC,CAAChF,MAAM,GAAG,CAAC;cAC/D,oBACEvF,OAAA;gBAEE0J,SAAS,EAAC,uDAAuD;gBACjEvJ,KAAK,EAAE0N,CAAC,CAACzD,QAAS;gBAAAT,QAAA,gBAGlB3J,OAAA;kBACE0J,SAAS,EAAE,kFAAkFoE,YAAY,GAAG,+BAA+B,GAAG,EAAE,EAAG;kBACnJH,OAAO,EAAEA,CAAA,KAAMjD,UAAU,CAACmD,CAAC,CAAE;kBAC7BK,QAAQ,EAAE,CAAE;kBACZ,cAAW,cAAc;kBACzBC,QAAQ,EAAEL,YAAa;kBAAAnE,QAAA,gBAEvB3J,OAAA,CAACJ,QAAQ;oBAAC8J,SAAS,EAAC;kBAAc;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,eACrC/J,OAAA;oBAAM0J,SAAS,EAAC,uBAAuB;oBAAAC,QAAA,EAAEoE;kBAAS;oBAAAnE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CAAC,eAET/J,OAAA;kBAAM0J,SAAS,EAAC,uBAAuB;kBAACxB,KAAK,EAAE;oBAAEkG,MAAM,EAAE;kBAAU,CAAE;kBAAAzE,QAAA,EAClEkE,CAAC,CAAC1D;gBAAI;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC;cAAA,GAlBF8D,CAAC,CAAC3N,EAAE;gBAAA0J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAmBN,CAAC;YAEV,CAAC;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEN/J,OAAA;YAAM0J,SAAS,EAAC,sCAAsC;YAAC2E,QAAQ,EAAErE,mBAAoB;YAAAL,QAAA,gBACnF3J,OAAA;cACE4C,IAAI,EAAC,MAAM;cACX8G,SAAS,EAAC,kFAAkF;cAC5F4E,WAAW,EAAC,mBAAmB;cAC/B9G,KAAK,EAAEvF,YAAa;cACpBsM,QAAQ,EAAE9E,CAAC,IAAIvH,eAAe,CAACuH,CAAC,CAAC+E,MAAM,CAAChH,KAAK;YAAE;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eACF/J,OAAA;cAAQ4C,IAAI,EAAC,QAAQ;cAAC8G,SAAS,EAAC,+EAA+E;cAACyE,QAAQ,EAAE,CAAClM,YAAY,CAACiI,IAAI,CAAC,CAAE;cAAAP,QAAA,EAAC;YAEhJ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClJ,EAAA,CA7tBuBH,oBAAoB;EAAA,QAClBhB,OAAO;AAAA;AAAA+O,EAAA,GADT/N,oBAAoB;AAAA,IAAA+N,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}