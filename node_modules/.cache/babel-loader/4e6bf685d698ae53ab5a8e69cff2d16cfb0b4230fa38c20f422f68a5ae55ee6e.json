{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\LivePresentationViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PresentationService from '../services/PresentationService';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomCode() {\n  return Math.floor(10000 + Math.random() * 90000).toString();\n}\nconst LivePresentationViewer = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth();\n  const [presentationId, setPresentationId] = useState(null);\n  const [presentation, setPresentation] = useState(null);\n  const [slides, setSlides] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers'); // TODO: fetch from Firestore if needed\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState('');\n  const [showPrompt, setShowPrompt] = useState(false);\n  useEffect(() => {\n    const fetchLive = async () => {\n      const liveId = await PresentationService.getLivePresentation(courseId);\n      setPresentationId(liveId);\n      if (liveId) {\n        // Fetch presentation data and slides\n        // (Assume PresentationService.getPresentationWithSlides exists or use Firestore directly)\n        // Fetch audience mode from presentation doc\n        try {\n          const pres = await PresentationService.getPresentation(liveId, courseId);\n          setPresentation(pres);\n          if (pres && pres.audienceMode) {\n            setAudienceMode(pres.audienceMode);\n            console.log('[LiveViewer] Audience mode:', pres.audienceMode);\n          }\n        } catch (err) {\n          console.error('[LiveViewer] Error fetching presentation:', err);\n        }\n      }\n    };\n    fetchLive();\n  }, [courseId]);\n  useEffect(() => {\n    // If audienceMode is enrolledUsers and not logged in, redirect to login\n    if (audienceMode === 'enrolledUsers' && !currentUser) {\n      console.log('[LiveViewer] Not authenticated, redirecting to login for enrolledUsers mode');\n      navigate('/login', {\n        replace: true\n      });\n    }\n    // If anonymous and no userId, show prompt\n    if (audienceMode === 'anonymous' && !userId) {\n      setShowPrompt(true);\n    }\n  }, [audienceMode, currentUser, userId, navigate]);\n  const handleUsernameSubmit = e => {\n    e.preventDefault();\n    if (username.trim()) {\n      setUserId(username.trim() + '_' + getRandomCode());\n      setShowPrompt(false);\n    }\n  };\n  if (!presentationId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen text-xl text-gray-600\",\n      children: \"No live presentation is currently being delivered for this course.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  if (audienceMode === 'anonymous' && showPrompt) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUsernameSubmit,\n        className: \"bg-white p-8 rounded shadow-lg flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Enter a username to join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"border px-4 py-2 rounded mb-4 text-lg\",\n          placeholder: \"Your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 text-white px-6 py-2 rounded font-semibold\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Live Presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-gray-700\",\n      children: [\"Presentation ID: \", presentationId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), audienceMode === 'anonymous' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-gray-700\",\n      children: [\"You are: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[960px] h-[540px] bg-white border shadow rounded flex items-center justify-center text-gray-400 text-3xl\",\n      children: \"Slide will appear here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 text-gray-500\",\n      children: \"Polls and interactions will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(LivePresentationViewer, \"7IOP7D1VfmJZNacUfy9oCgrI4hQ=\", false, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = LivePresentationViewer;\nexport default LivePresentationViewer;\nvar _c;\n$RefreshReg$(_c, \"LivePresentationViewer\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PresentationService","useAuth","useNavigate","jsxDEV","_jsxDEV","getRandomCode","Math","floor","random","toString","LivePresentationViewer","_s","courseId","navigate","currentUser","presentationId","setPresentationId","presentation","setPresentation","slides","setSlides","currentSlide","setCurrentSlide","audienceMode","setAudienceMode","username","setUsername","userId","setUserId","showPrompt","setShowPrompt","fetchLive","liveId","getLivePresentation","pres","getPresentation","console","log","err","error","replace","handleUsernameSubmit","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/LivePresentationViewer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PresentationService from '../services/PresentationService';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction getRandomCode() {\r\n  return Math.floor(10000 + Math.random() * 90000).toString();\r\n}\r\n\r\nconst LivePresentationViewer = () => {\r\n  const { courseId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  const [presentationId, setPresentationId] = useState(null);\r\n  const [presentation, setPresentation] = useState(null);\r\n  const [slides, setSlides] = useState([]);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers'); // TODO: fetch from Firestore if needed\r\n  const [username, setUsername] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLive = async () => {\r\n      const liveId = await PresentationService.getLivePresentation(courseId);\r\n      setPresentationId(liveId);\r\n      if (liveId) {\r\n        // Fetch presentation data and slides\r\n        // (Assume PresentationService.getPresentationWithSlides exists or use Firestore directly)\r\n        // Fetch audience mode from presentation doc\r\n        try {\r\n          const pres = await PresentationService.getPresentation(liveId, courseId);\r\n          setPresentation(pres);\r\n          if (pres && pres.audienceMode) {\r\n            setAudienceMode(pres.audienceMode);\r\n            console.log('[LiveViewer] Audience mode:', pres.audienceMode);\r\n          }\r\n        } catch (err) {\r\n          console.error('[LiveViewer] Error fetching presentation:', err);\r\n        }\r\n      }\r\n    };\r\n    fetchLive();\r\n  }, [courseId]);\r\n\r\n  useEffect(() => {\r\n    // If audienceMode is enrolledUsers and not logged in, redirect to login\r\n    if (audienceMode === 'enrolledUsers' && !currentUser) {\r\n      console.log('[LiveViewer] Not authenticated, redirecting to login for enrolledUsers mode');\r\n      navigate('/login', { replace: true });\r\n    }\r\n    // If anonymous and no userId, show prompt\r\n    if (audienceMode === 'anonymous' && !userId) {\r\n      setShowPrompt(true);\r\n    }\r\n  }, [audienceMode, currentUser, userId, navigate]);\r\n\r\n  const handleUsernameSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim()) {\r\n      setUserId(username.trim() + '_' + getRandomCode());\r\n      setShowPrompt(false);\r\n    }\r\n  };\r\n\r\n  if (!presentationId) {\r\n    return <div className=\"flex items-center justify-center min-h-screen text-xl text-gray-600\">No live presentation is currently being delivered for this course.</div>;\r\n  }\r\n\r\n  if (audienceMode === 'anonymous' && showPrompt) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\r\n        <form onSubmit={handleUsernameSubmit} className=\"bg-white p-8 rounded shadow-lg flex flex-col items-center\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Enter a username to join</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n            className=\"border px-4 py-2 rounded mb-4 text-lg\"\r\n            placeholder=\"Your name\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"bg-blue-600 text-white px-6 py-2 rounded font-semibold\">Join</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-50\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Live Presentation</h1>\r\n      <div className=\"mb-2 text-gray-700\">Presentation ID: {presentationId}</div>\r\n      {audienceMode === 'anonymous' && <div className=\"mb-2 text-gray-700\">You are: {userId}</div>}\r\n      {/* Slide display placeholder */}\r\n      <div className=\"w-[960px] h-[540px] bg-white border shadow rounded flex items-center justify-center text-gray-400 text-3xl\">\r\n        Slide will appear here\r\n      </div>\r\n      {/* Poll/interaction placeholder */}\r\n      <div className=\"mt-8 text-gray-500\">Polls and interactions will appear here.</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LivePresentationViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}