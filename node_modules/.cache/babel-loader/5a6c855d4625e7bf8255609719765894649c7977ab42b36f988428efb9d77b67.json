{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\PresentationEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { Loader, ArrowLeft, Plus } from 'lucide-react';\n\n// Placeholder for slide templates\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SLIDE_TEMPLATES = [{\n  type: 'title',\n  label: 'Title Template',\n  content: {\n    title: '',\n    subtitle: ''\n  }\n}, {\n  type: 'basic',\n  label: 'Basic Template',\n  content: {\n    title: '',\n    body: ''\n  }\n}, {\n  type: 'mcq',\n  label: 'MC Template',\n  content: {\n    question: '',\n    options: ['', '', '', ''],\n    correct: []\n  }\n}, {\n  type: 'open',\n  label: 'Open-ended',\n  content: {\n    question: '',\n    answer: ''\n  }\n}];\nconst PresentationEditor = () => {\n  _s();\n  var _slides$selectedSlide, _slides$selectedSlide2, _slides$selectedSlide3, _slides$selectedSlide6;\n  const {\n    courseId,\n    presentationId\n  } = useParams();\n  const navigate = useNavigate();\n  const [slides, setSlides] = useState([]);\n  const [selectedSlide, setSelectedSlide] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [template, setTemplate] = useState('title');\n\n  // Placeholder: fetch slides from Firestore in real app\n  useEffect(() => {\n    // TODO: fetch slides for this presentation\n    setSlides([{\n      type: 'title',\n      title: '',\n      subtitle: ''\n    }]);\n    setSelectedSlide(0);\n  }, [presentationId]);\n  const handleAddSlide = type => {\n    const templateObj = SLIDE_TEMPLATES.find(t => t.type === type);\n    setSlides(prev => [...prev, {\n      ...templateObj.content,\n      type\n    }]);\n    setSelectedSlide(slides.length);\n  };\n  const handleSlideChange = (field, value) => {\n    setSlides(prev => prev.map((slide, idx) => idx === selectedSlide ? {\n      ...slide,\n      [field]: value\n    } : slide));\n  };\n\n  // MCQ: toggle bold for correct answer\n  const toggleMCQCorrect = optionIdx => {\n    setSlides(prev => prev.map((slide, idx) => {\n      if (idx !== selectedSlide) return slide;\n      const correct = slide.correct || [];\n      const isCorrect = correct.includes(optionIdx);\n      return {\n        ...slide,\n        correct: isCorrect ? correct.filter(i => i !== optionIdx) : [...correct, optionIdx]\n      };\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 py-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto px-4 flex gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-1/4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary flex items-center\",\n            onClick: () => handleAddSlide(template),\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              className: \"h-4 w-4 mr-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), \" Slide\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"ml-2 input-field\",\n            value: template,\n            onChange: e => setTemplate(e.target.value),\n            children: SLIDE_TEMPLATES.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: t.type,\n              children: t.label\n            }, t.type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-2\",\n          children: slides.map((slide, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `border rounded p-2 cursor-pointer ${selectedSlide === idx ? 'border-primary-600 bg-primary-50' : 'border-gray-200 bg-white'}`,\n            onClick: () => setSelectedSlide(idx),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs font-semibold text-gray-700\",\n              children: [slide.type.charAt(0).toUpperCase() + slide.type.slice(1), \" Slide\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"truncate text-gray-500 text-xs\",\n              children: slide.title || slide.question || 'Untitled'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 bg-white rounded-lg shadow-lg p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/course/${courseId}`,\n              className: \"btn-secondary\",\n              children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n                className: \"h-4 w-4 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), \" Back to Course\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-lg font-semibold text-gray-700\",\n              children: \"Slide Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            children: \"Present\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 flex gap-2\",\n          children: [SLIDE_TEMPLATES.map(t => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn-secondary ${template === t.type ? 'bg-primary-100 text-primary-700' : ''}`,\n            onClick: () => setTemplate(t.type),\n            children: t.label\n          }, t.type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-secondary\",\n            onClick: () => setSlides(prev => prev.map((s, i) => i === selectedSlide ? {\n              ...s,\n              ...SLIDE_TEMPLATES.find(t => t.type === template).content,\n              type: template\n            } : s)),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border rounded-lg p-8 min-h-[300px] bg-gray-50\",\n          children: [((_slides$selectedSlide = slides[selectedSlide]) === null || _slides$selectedSlide === void 0 ? void 0 : _slides$selectedSlide.type) === 'title' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"w-full text-2xl font-bold mb-2 border-b border-gray-300 bg-transparent focus:outline-none\",\n              placeholder: \"Click to add title...\",\n              value: slides[selectedSlide].title,\n              onChange: e => handleSlideChange('title', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"w-full text-lg text-gray-500 border-b border-gray-200 bg-transparent focus:outline-none\",\n              placeholder: \"Click to add subtitle...\",\n              value: slides[selectedSlide].subtitle,\n              onChange: e => handleSlideChange('subtitle', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), ((_slides$selectedSlide2 = slides[selectedSlide]) === null || _slides$selectedSlide2 === void 0 ? void 0 : _slides$selectedSlide2.type) === 'basic' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"w-full text-2xl font-bold mb-2 border-b border-gray-300 bg-transparent focus:outline-none\",\n              placeholder: \"Click to add title...\",\n              value: slides[selectedSlide].title,\n              onChange: e => handleSlideChange('title', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"w-full text-base border-b border-gray-200 bg-transparent focus:outline-none\",\n              placeholder: \"Click to add body...\",\n              value: slides[selectedSlide].body,\n              onChange: e => handleSlideChange('body', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), ((_slides$selectedSlide3 = slides[selectedSlide]) === null || _slides$selectedSlide3 === void 0 ? void 0 : _slides$selectedSlide3.type) === 'mcq' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"w-full text-xl font-bold mb-2 border-b border-gray-300 bg-transparent focus:outline-none\",\n              placeholder: \"Click to add question...\",\n              value: slides[selectedSlide].question,\n              onChange: e => handleSlideChange('question', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2 mt-2\",\n              children: [slides[selectedSlide].options.map((opt, i) => {\n                var _slides$selectedSlide4, _slides$selectedSlide5;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-gray-400 select-none\",\n                    children: [i + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: `flex-1 border-b border-gray-200 bg-transparent focus:outline-none ${(_slides$selectedSlide4 = slides[selectedSlide].correct) !== null && _slides$selectedSlide4 !== void 0 && _slides$selectedSlide4.includes(i) ? 'font-bold text-primary-700' : ''}`,\n                    placeholder: `Option ${i + 1}`,\n                    value: opt,\n                    onChange: e => {\n                      setSlides(prev => prev.map((slide, idx) => idx === selectedSlide ? {\n                        ...slide,\n                        options: slide.options.map((o, oi) => oi === i ? e.target.value : o)\n                      } : slide));\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: `btn-secondary px-2 py-1 text-xs ${(_slides$selectedSlide5 = slides[selectedSlide].correct) !== null && _slides$selectedSlide5 !== void 0 && _slides$selectedSlide5.includes(i) ? 'bg-primary-200 font-bold' : ''}`,\n                    onClick: () => toggleMCQCorrect(i),\n                    title: \"Mark as correct answer\",\n                    children: \"Bold\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn-secondary mt-2\",\n                onClick: () => setSlides(prev => prev.map((slide, idx) => idx === selectedSlide ? {\n                  ...slide,\n                  options: [...slide.options, '']\n                } : slide)),\n                children: \"+ Add Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), ((_slides$selectedSlide6 = slides[selectedSlide]) === null || _slides$selectedSlide6 === void 0 ? void 0 : _slides$selectedSlide6.type) === 'open' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"w-full text-xl font-bold mb-2 border-b border-gray-300 bg-transparent focus:outline-none\",\n              placeholder: \"Click to add question...\",\n              value: slides[selectedSlide].question,\n              onChange: e => handleSlideChange('question', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 text-gray-400 italic\",\n              children: \"(Student will type their answer here)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(PresentationEditor, \"QcjfzpdsNs4rnf9PiBX21InG+I8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PresentationEditor;\nexport default PresentationEditor;\nvar _c;\n$RefreshReg$(_c, \"PresentationEditor\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useNavigate","Loader","ArrowLeft","Plus","jsxDEV","_jsxDEV","Fragment","_Fragment","SLIDE_TEMPLATES","type","label","content","title","subtitle","body","question","options","correct","answer","PresentationEditor","_s","_slides$selectedSlide","_slides$selectedSlide2","_slides$selectedSlide3","_slides$selectedSlide6","courseId","presentationId","navigate","slides","setSlides","selectedSlide","setSelectedSlide","loading","setLoading","template","setTemplate","handleAddSlide","templateObj","find","t","prev","length","handleSlideChange","field","value","map","slide","idx","toggleMCQCorrect","optionIdx","isCorrect","includes","filter","i","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","charAt","toUpperCase","slice","to","s","placeholder","opt","_slides$selectedSlide4","_slides$selectedSlide5","o","oi","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/PresentationEditor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport { Loader, ArrowLeft, Plus } from 'lucide-react';\r\n\r\n// Placeholder for slide templates\r\nconst SLIDE_TEMPLATES = [\r\n  { type: 'title', label: 'Title Template', content: { title: '', subtitle: '' } },\r\n  { type: 'basic', label: 'Basic Template', content: { title: '', body: '' } },\r\n  { type: 'mcq', label: 'MC Template', content: { question: '', options: ['', '', '', ''], correct: [] } },\r\n  { type: 'open', label: 'Open-ended', content: { question: '', answer: '' } },\r\n];\r\n\r\nconst PresentationEditor = () => {\r\n  const { courseId, presentationId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [slides, setSlides] = useState([]);\r\n  const [selectedSlide, setSelectedSlide] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [template, setTemplate] = useState('title');\r\n\r\n  // Placeholder: fetch slides from Firestore in real app\r\n  useEffect(() => {\r\n    // TODO: fetch slides for this presentation\r\n    setSlides([{ type: 'title', title: '', subtitle: '' }]);\r\n    setSelectedSlide(0);\r\n  }, [presentationId]);\r\n\r\n  const handleAddSlide = (type) => {\r\n    const templateObj = SLIDE_TEMPLATES.find(t => t.type === type);\r\n    setSlides(prev => [...prev, { ...templateObj.content, type }]);\r\n    setSelectedSlide(slides.length);\r\n  };\r\n\r\n  const handleSlideChange = (field, value) => {\r\n    setSlides(prev => prev.map((slide, idx) => idx === selectedSlide ? { ...slide, [field]: value } : slide));\r\n  };\r\n\r\n  // MCQ: toggle bold for correct answer\r\n  const toggleMCQCorrect = (optionIdx) => {\r\n    setSlides(prev => prev.map((slide, idx) => {\r\n      if (idx !== selectedSlide) return slide;\r\n      const correct = slide.correct || [];\r\n      const isCorrect = correct.includes(optionIdx);\r\n      return {\r\n        ...slide,\r\n        correct: isCorrect ? correct.filter(i => i !== optionIdx) : [...correct, optionIdx]\r\n      };\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 py-8\">\r\n      <div className=\"max-w-6xl mx-auto px-4 flex gap-8\">\r\n        {/* Slide Preview Panel */}\r\n        <div className=\"w-1/4\">\r\n          <div className=\"flex items-center mb-4\">\r\n            <button\r\n              className=\"btn-primary flex items-center\"\r\n              onClick={() => handleAddSlide(template)}\r\n            >\r\n              <Plus className=\"h-4 w-4 mr-1\" /> Slide\r\n            </button>\r\n            <select\r\n              className=\"ml-2 input-field\"\r\n              value={template}\r\n              onChange={e => setTemplate(e.target.value)}\r\n            >\r\n              {SLIDE_TEMPLATES.map(t => (\r\n                <option key={t.type} value={t.type}>{t.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"space-y-2\">\r\n            {slides.map((slide, idx) => (\r\n              <div\r\n                key={idx}\r\n                className={`border rounded p-2 cursor-pointer ${selectedSlide === idx ? 'border-primary-600 bg-primary-50' : 'border-gray-200 bg-white'}`}\r\n                onClick={() => setSelectedSlide(idx)}\r\n              >\r\n                <div className=\"text-xs font-semibold text-gray-700\">{slide.type.charAt(0).toUpperCase() + slide.type.slice(1)} Slide</div>\r\n                <div className=\"truncate text-gray-500 text-xs\">{slide.title || slide.question || 'Untitled'}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Slide Editor */}\r\n        <div className=\"flex-1 bg-white rounded-lg shadow-lg p-8\">\r\n          <div className=\"mb-4 flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <Link to={`/course/${courseId}`} className=\"btn-secondary\">\r\n                <ArrowLeft className=\"h-4 w-4 mr-2\" /> Back to Course\r\n              </Link>\r\n              <span className=\"text-lg font-semibold text-gray-700\">Slide Editor</span>\r\n            </div>\r\n            <button className=\"btn-primary\">Present</button>\r\n          </div>\r\n\r\n          {/* Slide Templates Toolbar */}\r\n          <div className=\"mb-4 flex gap-2\">\r\n            {SLIDE_TEMPLATES.map(t => (\r\n              <button\r\n                key={t.type}\r\n                className={`btn-secondary ${template === t.type ? 'bg-primary-100 text-primary-700' : ''}`}\r\n                onClick={() => setTemplate(t.type)}\r\n              >\r\n                {t.label}\r\n              </button>\r\n            ))}\r\n            <button className=\"btn-secondary\" onClick={() => setSlides(prev => prev.map((s, i) => i === selectedSlide ? { ...s, ...SLIDE_TEMPLATES.find(t => t.type === template).content, type: template } : s))}>Clear</button>\r\n          </div>\r\n\r\n          {/* Slide Content Editor */}\r\n          <div className=\"border rounded-lg p-8 min-h-[300px] bg-gray-50\">\r\n            {slides[selectedSlide]?.type === 'title' && (\r\n              <>\r\n                <input\r\n                  className=\"w-full text-2xl font-bold mb-2 border-b border-gray-300 bg-transparent focus:outline-none\"\r\n                  placeholder=\"Click to add title...\"\r\n                  value={slides[selectedSlide].title}\r\n                  onChange={e => handleSlideChange('title', e.target.value)}\r\n                />\r\n                <input\r\n                  className=\"w-full text-lg text-gray-500 border-b border-gray-200 bg-transparent focus:outline-none\"\r\n                  placeholder=\"Click to add subtitle...\"\r\n                  value={slides[selectedSlide].subtitle}\r\n                  onChange={e => handleSlideChange('subtitle', e.target.value)}\r\n                />\r\n              </>\r\n            )}\r\n            {slides[selectedSlide]?.type === 'basic' && (\r\n              <>\r\n                <input\r\n                  className=\"w-full text-2xl font-bold mb-2 border-b border-gray-300 bg-transparent focus:outline-none\"\r\n                  placeholder=\"Click to add title...\"\r\n                  value={slides[selectedSlide].title}\r\n                  onChange={e => handleSlideChange('title', e.target.value)}\r\n                />\r\n                <textarea\r\n                  className=\"w-full text-base border-b border-gray-200 bg-transparent focus:outline-none\"\r\n                  placeholder=\"Click to add body...\"\r\n                  value={slides[selectedSlide].body}\r\n                  onChange={e => handleSlideChange('body', e.target.value)}\r\n                />\r\n              </>\r\n            )}\r\n            {slides[selectedSlide]?.type === 'mcq' && (\r\n              <>\r\n                <input\r\n                  className=\"w-full text-xl font-bold mb-2 border-b border-gray-300 bg-transparent focus:outline-none\"\r\n                  placeholder=\"Click to add question...\"\r\n                  value={slides[selectedSlide].question}\r\n                  onChange={e => handleSlideChange('question', e.target.value)}\r\n                />\r\n                <div className=\"space-y-2 mt-2\">\r\n                  {slides[selectedSlide].options.map((opt, i) => (\r\n                    <div key={i} className=\"flex items-center gap-2\">\r\n                      <span className=\"text-gray-400 select-none\">{i + 1}.</span>\r\n                      <input\r\n                        className={`flex-1 border-b border-gray-200 bg-transparent focus:outline-none ${slides[selectedSlide].correct?.includes(i) ? 'font-bold text-primary-700' : ''}`}\r\n                        placeholder={`Option ${i + 1}`}\r\n                        value={opt}\r\n                        onChange={e => {\r\n                          setSlides(prev => prev.map((slide, idx) => idx === selectedSlide ? { ...slide, options: slide.options.map((o, oi) => oi === i ? e.target.value : o) } : slide));\r\n                        }}\r\n                      />\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`btn-secondary px-2 py-1 text-xs ${slides[selectedSlide].correct?.includes(i) ? 'bg-primary-200 font-bold' : ''}`}\r\n                        onClick={() => toggleMCQCorrect(i)}\r\n                        title=\"Mark as correct answer\"\r\n                      >\r\n                        Bold\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                  {/* Add option on Enter or with a button */}\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-secondary mt-2\"\r\n                    onClick={() => setSlides(prev => prev.map((slide, idx) => idx === selectedSlide ? { ...slide, options: [...slide.options, ''] } : slide))}\r\n                  >\r\n                    + Add Option\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n            {slides[selectedSlide]?.type === 'open' && (\r\n              <>\r\n                <input\r\n                  className=\"w-full text-xl font-bold mb-2 border-b border-gray-300 bg-transparent focus:outline-none\"\r\n                  placeholder=\"Click to add question...\"\r\n                  value={slides[selectedSlide].question}\r\n                  onChange={e => handleSlideChange('question', e.target.value)}\r\n                />\r\n                <div className=\"mt-4 text-gray-400 italic\">(Student will type their answer here)</div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PresentationEditor; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}