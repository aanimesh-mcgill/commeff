{"ast":null,"code":"import { collection, addDoc, getDocs, updateDoc, doc, deleteDoc, orderBy, query, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nclass SlideService {\n  getSlidesCollection(courseId, presentationId) {\n    return collection(db, 'courses', courseId, 'presentations', presentationId, 'slides');\n  }\n  async addSlide(courseId, presentationId, slide) {\n    const slidesCol = this.getSlidesCollection(courseId, presentationId);\n    const docRef = await addDoc(slidesCol, {\n      ...slide,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp()\n    });\n    return docRef;\n  }\n  async getSlides(courseId, presentationId) {\n    const slidesCol = this.getSlidesCollection(courseId, presentationId);\n    const q = query(slidesCol, orderBy('createdAt', 'asc'));\n    const snapshot = await getDocs(q);\n    return snapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  }\n  async updateSlide(courseId, presentationId, slideId, updates) {\n    const slideDoc = doc(db, 'courses', courseId, 'presentations', presentationId, 'slides', slideId);\n    await updateDoc(slideDoc, {\n      ...updates,\n      updatedAt: serverTimestamp()\n    });\n  }\n  async deleteSlide(courseId, presentationId, slideId) {\n    const slideDoc = doc(db, 'courses', courseId, 'presentations', presentationId, 'slides', slideId);\n    await deleteDoc(slideDoc);\n  }\n}\nexport default new SlideService();","map":{"version":3,"names":["collection","addDoc","getDocs","updateDoc","doc","deleteDoc","orderBy","query","serverTimestamp","db","SlideService","getSlidesCollection","courseId","presentationId","addSlide","slide","slidesCol","docRef","createdAt","updatedAt","getSlides","q","snapshot","docs","map","id","data","updateSlide","slideId","updates","slideDoc","deleteSlide"],"sources":["C:/Users/aanime/commeff3/src/services/SlideService.js"],"sourcesContent":["import { collection, addDoc, getDocs, updateDoc, doc, deleteDoc, orderBy, query, serverTimestamp } from 'firebase/firestore';\r\nimport { db } from '../firebase/config';\r\n\r\nclass SlideService {\r\n  getSlidesCollection(courseId, presentationId) {\r\n    return collection(db, 'courses', courseId, 'presentations', presentationId, 'slides');\r\n  }\r\n\r\n  async addSlide(courseId, presentationId, slide) {\r\n    const slidesCol = this.getSlidesCollection(courseId, presentationId);\r\n    const docRef = await addDoc(slidesCol, {\r\n      ...slide,\r\n      createdAt: serverTimestamp(),\r\n      updatedAt: serverTimestamp(),\r\n    });\r\n    return docRef;\r\n  }\r\n\r\n  async getSlides(courseId, presentationId) {\r\n    const slidesCol = this.getSlidesCollection(courseId, presentationId);\r\n    const q = query(slidesCol, orderBy('createdAt', 'asc'));\r\n    const snapshot = await getDocs(q);\r\n    return snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n  }\r\n\r\n  async updateSlide(courseId, presentationId, slideId, updates) {\r\n    const slideDoc = doc(db, 'courses', courseId, 'presentations', presentationId, 'slides', slideId);\r\n    await updateDoc(slideDoc, { ...updates, updatedAt: serverTimestamp() });\r\n  }\r\n\r\n  async deleteSlide(courseId, presentationId, slideId) {\r\n    const slideDoc = doc(db, 'courses', courseId, 'presentations', presentationId, 'slides', slideId);\r\n    await deleteDoc(slideDoc);\r\n  }\r\n}\r\n\r\nexport default new SlideService(); "],"mappings":"AAAA,SAASA,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAEC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAEC,KAAK,EAAEC,eAAe,QAAQ,oBAAoB;AAC5H,SAASC,EAAE,QAAQ,oBAAoB;AAEvC,MAAMC,YAAY,CAAC;EACjBC,mBAAmBA,CAACC,QAAQ,EAAEC,cAAc,EAAE;IAC5C,OAAOb,UAAU,CAACS,EAAE,EAAE,SAAS,EAAEG,QAAQ,EAAE,eAAe,EAAEC,cAAc,EAAE,QAAQ,CAAC;EACvF;EAEA,MAAMC,QAAQA,CAACF,QAAQ,EAAEC,cAAc,EAAEE,KAAK,EAAE;IAC9C,MAAMC,SAAS,GAAG,IAAI,CAACL,mBAAmB,CAACC,QAAQ,EAAEC,cAAc,CAAC;IACpE,MAAMI,MAAM,GAAG,MAAMhB,MAAM,CAACe,SAAS,EAAE;MACrC,GAAGD,KAAK;MACRG,SAAS,EAAEV,eAAe,CAAC,CAAC;MAC5BW,SAAS,EAAEX,eAAe,CAAC;IAC7B,CAAC,CAAC;IACF,OAAOS,MAAM;EACf;EAEA,MAAMG,SAASA,CAACR,QAAQ,EAAEC,cAAc,EAAE;IACxC,MAAMG,SAAS,GAAG,IAAI,CAACL,mBAAmB,CAACC,QAAQ,EAAEC,cAAc,CAAC;IACpE,MAAMQ,CAAC,GAAGd,KAAK,CAACS,SAAS,EAAEV,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IACvD,MAAMgB,QAAQ,GAAG,MAAMpB,OAAO,CAACmB,CAAC,CAAC;IACjC,OAAOC,QAAQ,CAACC,IAAI,CAACC,GAAG,CAACpB,GAAG,KAAK;MAAEqB,EAAE,EAAErB,GAAG,CAACqB,EAAE;MAAE,GAAGrB,GAAG,CAACsB,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EAClE;EAEA,MAAMC,WAAWA,CAACf,QAAQ,EAAEC,cAAc,EAAEe,OAAO,EAAEC,OAAO,EAAE;IAC5D,MAAMC,QAAQ,GAAG1B,GAAG,CAACK,EAAE,EAAE,SAAS,EAAEG,QAAQ,EAAE,eAAe,EAAEC,cAAc,EAAE,QAAQ,EAAEe,OAAO,CAAC;IACjG,MAAMzB,SAAS,CAAC2B,QAAQ,EAAE;MAAE,GAAGD,OAAO;MAAEV,SAAS,EAAEX,eAAe,CAAC;IAAE,CAAC,CAAC;EACzE;EAEA,MAAMuB,WAAWA,CAACnB,QAAQ,EAAEC,cAAc,EAAEe,OAAO,EAAE;IACnD,MAAME,QAAQ,GAAG1B,GAAG,CAACK,EAAE,EAAE,SAAS,EAAEG,QAAQ,EAAE,eAAe,EAAEC,cAAc,EAAE,QAAQ,EAAEe,OAAO,CAAC;IACjG,MAAMvB,SAAS,CAACyB,QAAQ,CAAC;EAC3B;AACF;AAEA,eAAe,IAAIpB,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}