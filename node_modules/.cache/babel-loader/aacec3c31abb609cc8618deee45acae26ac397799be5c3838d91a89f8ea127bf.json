{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\LivePresentationViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PresentationService from '../services/PresentationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomCode() {\n  return Math.floor(10000 + Math.random() * 90000).toString();\n}\nconst LivePresentationViewer = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const [presentationId, setPresentationId] = useState(null);\n  const [presentation, setPresentation] = useState(null);\n  const [slides, setSlides] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers'); // TODO: fetch from Firestore if needed\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState('');\n  const [showPrompt, setShowPrompt] = useState(false);\n  useEffect(() => {\n    const fetchLive = async () => {\n      const liveId = await PresentationService.getLivePresentation(courseId);\n      setPresentationId(liveId);\n      if (liveId) {\n        // Fetch presentation data and slides\n        // (Assume PresentationService.getPresentationWithSlides exists or use Firestore directly)\n      }\n    };\n    fetchLive();\n  }, [courseId]);\n  useEffect(() => {\n    if (audienceMode === 'anonymous' && !userId) {\n      setShowPrompt(true);\n    }\n  }, [audienceMode, userId]);\n  const handleUsernameSubmit = e => {\n    e.preventDefault();\n    if (username.trim()) {\n      setUserId(username.trim() + '_' + getRandomCode());\n      setShowPrompt(false);\n    }\n  };\n  if (!presentationId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen text-xl text-gray-600\",\n      children: \"No live presentation is currently being delivered for this course.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (audienceMode === 'anonymous' && showPrompt) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUsernameSubmit,\n        className: \"bg-white p-8 rounded shadow-lg flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Enter a username to join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"border px-4 py-2 rounded mb-4 text-lg\",\n          placeholder: \"Your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 text-white px-6 py-2 rounded font-semibold\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Live Presentation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-gray-700\",\n      children: [\"Presentation ID: \", presentationId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), audienceMode === 'anonymous' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 text-gray-700\",\n      children: [\"You are: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-[960px] h-[540px] bg-white border shadow rounded flex items-center justify-center text-gray-400 text-3xl\",\n      children: \"Slide will appear here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 text-gray-500\",\n      children: \"Polls and interactions will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(LivePresentationViewer, \"j5Lk2X5rETcSvGNu/4o+JgH0pnE=\", false, function () {\n  return [useParams];\n});\n_c = LivePresentationViewer;\nexport default LivePresentationViewer;\nvar _c;\n$RefreshReg$(_c, \"LivePresentationViewer\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PresentationService","jsxDEV","_jsxDEV","getRandomCode","Math","floor","random","toString","LivePresentationViewer","_s","courseId","presentationId","setPresentationId","presentation","setPresentation","slides","setSlides","currentSlide","setCurrentSlide","audienceMode","setAudienceMode","username","setUsername","userId","setUserId","showPrompt","setShowPrompt","fetchLive","liveId","getLivePresentation","handleUsernameSubmit","e","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/LivePresentationViewer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PresentationService from '../services/PresentationService';\r\n\r\nfunction getRandomCode() {\r\n  return Math.floor(10000 + Math.random() * 90000).toString();\r\n}\r\n\r\nconst LivePresentationViewer = () => {\r\n  const { courseId } = useParams();\r\n  const [presentationId, setPresentationId] = useState(null);\r\n  const [presentation, setPresentation] = useState(null);\r\n  const [slides, setSlides] = useState([]);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers'); // TODO: fetch from Firestore if needed\r\n  const [username, setUsername] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLive = async () => {\r\n      const liveId = await PresentationService.getLivePresentation(courseId);\r\n      setPresentationId(liveId);\r\n      if (liveId) {\r\n        // Fetch presentation data and slides\r\n        // (Assume PresentationService.getPresentationWithSlides exists or use Firestore directly)\r\n      }\r\n    };\r\n    fetchLive();\r\n  }, [courseId]);\r\n\r\n  useEffect(() => {\r\n    if (audienceMode === 'anonymous' && !userId) {\r\n      setShowPrompt(true);\r\n    }\r\n  }, [audienceMode, userId]);\r\n\r\n  const handleUsernameSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim()) {\r\n      setUserId(username.trim() + '_' + getRandomCode());\r\n      setShowPrompt(false);\r\n    }\r\n  };\r\n\r\n  if (!presentationId) {\r\n    return <div className=\"flex items-center justify-center min-h-screen text-xl text-gray-600\">No live presentation is currently being delivered for this course.</div>;\r\n  }\r\n\r\n  if (audienceMode === 'anonymous' && showPrompt) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\r\n        <form onSubmit={handleUsernameSubmit} className=\"bg-white p-8 rounded shadow-lg flex flex-col items-center\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Enter a username to join</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n            className=\"border px-4 py-2 rounded mb-4 text-lg\"\r\n            placeholder=\"Your name\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"bg-blue-600 text-white px-6 py-2 rounded font-semibold\">Join</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-50\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Live Presentation</h1>\r\n      <div className=\"mb-2 text-gray-700\">Presentation ID: {presentationId}</div>\r\n      {audienceMode === 'anonymous' && <div className=\"mb-2 text-gray-700\">You are: {userId}</div>}\r\n      {/* Slide display placeholder */}\r\n      <div className=\"w-[960px] h-[540px] bg-white border shadow rounded flex items-center justify-center text-gray-400 text-3xl\">\r\n        Slide will appear here\r\n      </div>\r\n      {/* Poll/interaction placeholder */}\r\n      <div className=\"mt-8 text-gray-500\">Polls and interactions will appear here.</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LivePresentationViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}