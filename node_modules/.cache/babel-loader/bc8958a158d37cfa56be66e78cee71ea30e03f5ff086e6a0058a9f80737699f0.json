{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\PresentationEditorV3.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { doc, getDoc, updateDoc, setDoc } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { PresentationToolbar } from './PresentationToolbar';\nimport { SlidesSidebar } from './SlidesSidebar';\nimport { SlideCanvas } from './SlideCanvas';\nimport { ToastContainer } from '../components/Toast';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Types (replace with import from types/presentation if available)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialPresentation = {\n  id: 'presentation-1',\n  title: 'Untitled Presentation',\n  slides: [{\n    id: 'slide-1',\n    title: 'Welcome Slide',\n    elements: []\n  }],\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  currentSlideIndex: 0\n};\nexport default function PresentationEditorV3({\n  courseId,\n  presentationId = 'demo-presentation',\n  title\n}) {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const [presentation, setPresentation] = useState(initialPresentation);\n  const [editorState, setEditorState] = useState({\n    selectedElement: null,\n    tool: 'select',\n    isPresenting: false,\n    zoom: 100\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [toasts, setToasts] = useState([]);\n\n  // Toast management\n  const addToast = useCallback((message, type = 'info', duration = 3000) => {\n    const id = Date.now().toString();\n    setToasts(prev => [...prev, {\n      id,\n      message,\n      type,\n      duration\n    }]);\n  }, []);\n  const removeToast = useCallback(id => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Load presentation from Firestore\n  useEffect(() => {\n    const loadPresentation = async () => {\n      try {\n        console.log('Loading presentation:', presentationId);\n        const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n        const docSnap = await getDoc(docRef);\n        if (docSnap.exists()) {\n          var _data$createdAt, _data$updatedAt;\n          const data = docSnap.data();\n          console.log('Loaded presentation data:', data);\n          setPresentation({\n            ...data,\n            slides: Array.isArray(data.slides) ? data.slides : [],\n            createdAt: ((_data$createdAt = data.createdAt) === null || _data$createdAt === void 0 ? void 0 : _data$createdAt.toDate()) || new Date(),\n            updatedAt: ((_data$updatedAt = data.updatedAt) === null || _data$updatedAt === void 0 ? void 0 : _data$updatedAt.toDate()) || new Date()\n          });\n        } else {\n          if (!currentUser) throw new Error('Not authenticated');\n          console.log('No presentation found, creating new one');\n          // Create new presentation with ownerId\n          await setDoc(docRef, {\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            ownerId: currentUser.uid,\n            courseId: courseId || null\n          });\n          setPresentation({\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            ownerId: currentUser.uid,\n            courseId: courseId || null\n          });\n        }\n      } catch (error) {\n        console.error('Error loading presentation:', error);\n        if (error.code === 'permission-denied' || error.message.includes('permission')) {\n          addToast('You do not have permission to access this presentation.', 'error', 6000);\n        } else {\n          addToast('Failed to load presentation', 'error');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (currentUser) loadPresentation();\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Add logging after fetching presentation and slides\n  useEffect(() => {\n    if (presentation) {\n      console.log('[PresentationEditorV3] Loaded presentation:', presentation);\n      if (presentation.slides) {\n        console.log('[PresentationEditorV3] Slides array:', presentation.slides);\n        presentation.slides.forEach((slide, idx) => {\n          console.log(`[PresentationEditorV3] Slide ${idx} imageUrl:`, slide.imageUrl);\n        });\n      } else {\n        console.log('[PresentationEditorV3] No slides found in presentation.');\n      }\n    }\n  }, [presentation]);\n\n  // Auto-save with debouncing\n  const saveTimeoutRef = React.useRef(null);\n  const savePresentation = useCallback(async presentationData => {\n    try {\n      if (!currentUser) throw new Error('Not authenticated');\n      console.log('Saving presentation:', presentationData);\n      setIsSaving(true);\n      const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n      await updateDoc(docRef, {\n        ...presentationData,\n        updatedAt: new Date(),\n        ownerId: currentUser.uid,\n        courseId: courseId || null\n      });\n      console.log('Presentation saved successfully');\n      addToast('Presentation saved', 'success', 2000);\n    } catch (error) {\n      console.error('Error saving presentation:', error);\n      if (error.code === 'permission-denied' || error.message.includes('permission')) {\n        addToast('You do not have permission to save this presentation.', 'error', 6000);\n      } else {\n        addToast('Failed to save presentation', 'error');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Debounced auto-save\n  useEffect(() => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    if (!isLoading) {\n      saveTimeoutRef.current = setTimeout(() => {\n        savePresentation(presentation);\n      }, 2000); // 2 second delay\n    }\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, [presentation, savePresentation, isLoading]);\n\n  // Manual save handler\n  const handleSave = useCallback(async () => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    await savePresentation(presentation);\n  }, [presentation, savePresentation]);\n\n  // Slide management handlers\n  const handleAddSlide = useCallback(() => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: []\n    };\n    setPresentation(prev => ({\n      ...prev,\n      slides: [...prev.slides, newSlide],\n      currentSlideIndex: prev.slides.length\n    }));\n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n  const handleDuplicateSlide = useCallback(index => {\n    const slideToDuplicate = presentation.slides[index];\n    const newSlide = {\n      ...slideToDuplicate,\n      id: `slide-${Date.now()}`,\n      title: `${slideToDuplicate.title} (Copy)`\n    };\n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1\n    }));\n    addToast('Slide duplicated', 'success', 2000);\n  }, [presentation.slides, addToast]);\n  const handleDeleteSlide = useCallback(index => {\n    if (presentation.slides.length <= 1) {\n      addToast('Cannot delete the last slide', 'warning');\n      return;\n    }\n    const newSlides = presentation.slides.filter((_, i) => i !== index);\n    const newCurrentIndex = Math.min(presentation.currentSlideIndex, newSlides.length - 1);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: newCurrentIndex\n    }));\n    addToast('Slide deleted', 'success', 2000);\n  }, [presentation.slides, presentation.currentSlideIndex, addToast]);\n  const handleAddSlideAfter = useCallback(index => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: []\n    };\n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1\n    }));\n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  // Element management handlers\n  const handleElementSelect = useCallback(elementId => {\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: elementId\n    }));\n  }, []);\n  const handleElementUpdate = useCallback((elementId, updates) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      const elementIndex = currentSlide.elements.findIndex(el => el.id === elementId);\n      if (elementIndex !== -1) {\n        newSlides[prev.currentSlideIndex] = {\n          ...currentSlide,\n          elements: currentSlide.elements.map((el, index) => index === elementIndex ? {\n            ...el,\n            ...updates\n          } : el)\n        };\n      }\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, []);\n  const handleElementAdd = useCallback(elementData => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      ...elementData\n    };\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: [...currentSlide.elements, newElement]\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n\n    // Auto-select the new element\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: newElement.id\n    }));\n    addToast('Element added', 'success', 1500);\n  }, [addToast]);\n  const handleElementDelete = useCallback(elementId => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: currentSlide.elements.filter(el => el.id !== elementId)\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: null\n    }));\n    addToast('Element deleted', 'success', 1500);\n  }, [addToast]);\n\n  // Other handlers\n  const handleToolChange = useCallback(tool => {\n    setEditorState(prev => ({\n      ...prev,\n      tool\n    }));\n  }, []);\n  const handleTitleChange = useCallback(title => {\n    setPresentation(prev => ({\n      ...prev,\n      title\n    }));\n  }, []);\n  const handleSlideSelect = useCallback(index => {\n    setPresentation(prev => ({\n      ...prev,\n      currentSlideIndex: index\n    }));\n    setEditorState(prev => ({\n      ...prev,\n      selectedElement: null\n    }));\n  }, []);\n  const handlePresent = useCallback(() => {\n    setEditorState(prev => ({\n      ...prev,\n      isPresenting: true\n    }));\n    addToast('Starting presentation...', 'info');\n  }, [addToast]);\n\n  // Remove auto-save useEffect\n  // Add slide change handler\n  const handleSlideChange = useCallback((field, value) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const idx = prev.currentSlideIndex;\n      if (!newSlides[idx]) return prev;\n      newSlides[idx] = {\n        ...newSlides[idx],\n        [field]: value\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, []);\n\n  // Find selected element from current slide\n  const selectedElement = React.useMemo(() => {\n    const slide = presentation.slides[presentation.currentSlideIndex];\n    if (!slide) return null;\n    return slide.elements.find(el => el.id === editorState.selectedElement) || null;\n  }, [presentation, editorState.selectedElement]);\n\n  // Compute formatting state for toolbar\n  const formattingState = React.useMemo(() => {\n    if (!selectedElement || selectedElement.type !== 'text') return {};\n    const style = selectedElement.style || {};\n    return {\n      bold: style.fontWeight === 'bold',\n      italic: style.fontStyle === 'italic',\n      underline: style.textDecoration === 'underline',\n      fontSize: style.fontSize || 16,\n      color: style.color || '#000000',\n      align: style.textAlign || 'left'\n    };\n  }, [selectedElement]);\n\n  // Handler for formatting actions\n  const handleFormat = useCallback((action, value) => {\n    if (!selectedElement || selectedElement.type !== 'text') return;\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const slide = newSlides[prev.currentSlideIndex];\n      const idx = slide.elements.findIndex(el => el.id === selectedElement.id);\n      if (idx === -1) return prev;\n      const el = slide.elements[idx];\n      const style = {\n        ...el.style\n      };\n      switch (action) {\n        case 'bold':\n          style.fontWeight = style.fontWeight === 'bold' ? 'normal' : 'bold';\n          break;\n        case 'italic':\n          style.fontStyle = style.fontStyle === 'italic' ? 'normal' : 'italic';\n          break;\n        case 'underline':\n          style.textDecoration = style.textDecoration === 'underline' ? 'none' : 'underline';\n          break;\n        case 'fontSize':\n          style.fontSize = value || 20; // Default to 20 if not provided\n          break;\n        case 'color':\n          style.color = value || '#000000';\n          break;\n        case 'align':\n          style.textAlign = value;\n          break;\n        default:\n          break;\n      }\n      slide.elements[idx] = {\n        ...el,\n        style\n      };\n      return {\n        ...prev,\n        slides: newSlides\n      };\n    });\n  }, [selectedElement]);\n\n  // Loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen flex items-center justify-center bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Loading presentation...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this);\n  }\n  const slides = Array.isArray(presentation.slides) ? presentation.slides : [];\n  const currentSlide = slides[presentation.currentSlideIndex] || {\n    elements: []\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(PresentationToolbar, {\n      editorState: editorState,\n      onToolChange: handleToolChange,\n      onSave: handleSave,\n      onPresent: handlePresent,\n      onUndo: () => {} // TODO: Implement undo/redo\n      ,\n      onRedo: () => {},\n      presentationTitle: presentation.title,\n      onTitleChange: handleTitleChange,\n      isSaving: isSaving,\n      selectedElement: selectedElement,\n      formattingState: formattingState,\n      onFormat: handleFormat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 flex\",\n      children: [/*#__PURE__*/_jsxDEV(SlidesSidebar, {\n        slides: presentation.slides,\n        currentSlideIndex: presentation.currentSlideIndex,\n        onSlideSelect: handleSlideSelect,\n        onAddSlide: handleAddSlide,\n        onDuplicateSlide: handleDuplicateSlide,\n        onDeleteSlide: handleDeleteSlide,\n        onAddSlideAfter: handleAddSlideAfter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SlideCanvas, {\n        slide: currentSlide,\n        editorState: editorState,\n        onElementSelect: handleElementSelect,\n        onElementUpdate: handleElementUpdate,\n        onElementAdd: handleElementAdd,\n        onElementDelete: handleElementDelete,\n        onSlideChange: handleSlideChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      toasts: toasts,\n      removeToast: removeToast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 414,\n    columnNumber: 5\n  }, this);\n}\n_s(PresentationEditorV3, \"TJZaTCGuEph57GBAeWMzMcmE5ME=\", false, function () {\n  return [useAuth];\n});\n_c = PresentationEditorV3;\nvar _c;\n$RefreshReg$(_c, \"PresentationEditorV3\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","doc","getDoc","updateDoc","setDoc","db","PresentationToolbar","SlidesSidebar","SlideCanvas","ToastContainer","useAuth","jsxDEV","_jsxDEV","initialPresentation","id","title","slides","elements","createdAt","Date","updatedAt","currentSlideIndex","PresentationEditorV3","courseId","presentationId","_s","currentUser","presentation","setPresentation","editorState","setEditorState","selectedElement","tool","isPresenting","zoom","isLoading","setIsLoading","isSaving","setIsSaving","toasts","setToasts","addToast","message","type","duration","now","toString","prev","removeToast","filter","toast","loadPresentation","console","log","docRef","docSnap","exists","_data$createdAt","_data$updatedAt","data","Array","isArray","toDate","Error","ownerId","uid","error","code","includes","forEach","slide","idx","imageUrl","saveTimeoutRef","useRef","savePresentation","presentationData","current","clearTimeout","setTimeout","handleSave","handleAddSlide","newSlide","length","handleDuplicateSlide","index","slideToDuplicate","newSlides","splice","handleDeleteSlide","_","i","newCurrentIndex","Math","min","handleAddSlideAfter","handleElementSelect","elementId","handleElementUpdate","updates","currentSlide","elementIndex","findIndex","el","map","handleElementAdd","elementData","newElement","handleElementDelete","handleToolChange","handleTitleChange","handleSlideSelect","handlePresent","handleSlideChange","field","value","useMemo","find","formattingState","style","bold","fontWeight","italic","fontStyle","underline","textDecoration","fontSize","color","align","textAlign","handleFormat","action","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onToolChange","onSave","onPresent","onUndo","onRedo","presentationTitle","onTitleChange","onFormat","onSlideSelect","onAddSlide","onDuplicateSlide","onDeleteSlide","onAddSlideAfter","onElementSelect","onElementUpdate","onElementAdd","onElementDelete","onSlideChange","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/PresentationEditorV3.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { doc, getDoc, updateDoc, setDoc } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { PresentationToolbar } from './PresentationToolbar';\nimport { SlidesSidebar } from './SlidesSidebar';\nimport { SlideCanvas } from './SlideCanvas';\nimport { ToastContainer } from '../components/Toast';\nimport { useAuth } from '../contexts/AuthContext';\n\n// Types (replace with import from types/presentation if available)\nconst initialPresentation = {\n  id: 'presentation-1',\n  title: 'Untitled Presentation',\n  slides: [\n    {\n      id: 'slide-1',\n      title: 'Welcome Slide',\n      elements: [],\n    },\n  ],\n  createdAt: new Date(),\n  updatedAt: new Date(),\n  currentSlideIndex: 0,\n};\n\nexport default function PresentationEditorV3({ courseId, presentationId = 'demo-presentation', title }) {\n  const { currentUser } = useAuth();\n  const [presentation, setPresentation] = useState(initialPresentation);\n  const [editorState, setEditorState] = useState({\n    selectedElement: null,\n    tool: 'select',\n    isPresenting: false,\n    zoom: 100,\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [toasts, setToasts] = useState([]);\n\n  // Toast management\n  const addToast = useCallback((message, type = 'info', duration = 3000) => {\n    const id = Date.now().toString();\n    setToasts(prev => [...prev, { id, message, type, duration }]);\n  }, []);\n\n  const removeToast = useCallback((id) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  // Load presentation from Firestore\n  useEffect(() => {\n    const loadPresentation = async () => {\n      try {\n        console.log('Loading presentation:', presentationId);\n        const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n        const docSnap = await getDoc(docRef);\n        \n        if (docSnap.exists()) {\n          const data = docSnap.data();\n          console.log('Loaded presentation data:', data);\n          setPresentation({\n            ...data,\n            slides: Array.isArray(data.slides) ? data.slides : [],\n            createdAt: data.createdAt?.toDate() || new Date(),\n            updatedAt: data.updatedAt?.toDate() || new Date(),\n          });\n        } else {\n          if (!currentUser) throw new Error('Not authenticated');\n          console.log('No presentation found, creating new one');\n          // Create new presentation with ownerId\n          await setDoc(docRef, {\n            ...initialPresentation,\n            slides: [],\n            id: presentationId,\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            ownerId: currentUser.uid,\n            courseId: courseId || null,\n          });\n          setPresentation({ ...initialPresentation, slides: [], id: presentationId, ownerId: currentUser.uid, courseId: courseId || null });\n        }\n      } catch (error) {\n        console.error('Error loading presentation:', error);\n        if (error.code === 'permission-denied' || error.message.includes('permission')) {\n          addToast('You do not have permission to access this presentation.', 'error', 6000);\n        } else {\n          addToast('Failed to load presentation', 'error');\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    if (currentUser) loadPresentation();\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Add logging after fetching presentation and slides\n  useEffect(() => {\n    if (presentation) {\n      console.log('[PresentationEditorV3] Loaded presentation:', presentation);\n      if (presentation.slides) {\n        console.log('[PresentationEditorV3] Slides array:', presentation.slides);\n        presentation.slides.forEach((slide, idx) => {\n          console.log(`[PresentationEditorV3] Slide ${idx} imageUrl:`, slide.imageUrl);\n        });\n      } else {\n        console.log('[PresentationEditorV3] No slides found in presentation.');\n      }\n    }\n  }, [presentation]);\n\n  // Auto-save with debouncing\n  const saveTimeoutRef = React.useRef(null);\n  const savePresentation = useCallback(async (presentationData) => {\n    try {\n      if (!currentUser) throw new Error('Not authenticated');\n      console.log('Saving presentation:', presentationData);\n      setIsSaving(true);\n      \n      const docRef = doc(db, 'courses', courseId, 'presentations', presentationId);\n      await updateDoc(docRef, {\n        ...presentationData,\n        updatedAt: new Date(),\n        ownerId: currentUser.uid,\n        courseId: courseId || null,\n      });\n      \n      console.log('Presentation saved successfully');\n      addToast('Presentation saved', 'success', 2000);\n    } catch (error) {\n      console.error('Error saving presentation:', error);\n      if (error.code === 'permission-denied' || error.message.includes('permission')) {\n        addToast('You do not have permission to save this presentation.', 'error', 6000);\n      } else {\n        addToast('Failed to save presentation', 'error');\n      }\n    } finally {\n      setIsSaving(false);\n    }\n  }, [presentationId, addToast, currentUser, courseId]);\n\n  // Debounced auto-save\n  useEffect(() => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    \n    if (!isLoading) {\n      saveTimeoutRef.current = setTimeout(() => {\n        savePresentation(presentation);\n      }, 2000); // 2 second delay\n    }\n\n    return () => {\n      if (saveTimeoutRef.current) {\n        clearTimeout(saveTimeoutRef.current);\n      }\n    };\n  }, [presentation, savePresentation, isLoading]);\n\n  // Manual save handler\n  const handleSave = useCallback(async () => {\n    if (saveTimeoutRef.current) {\n      clearTimeout(saveTimeoutRef.current);\n    }\n    await savePresentation(presentation);\n  }, [presentation, savePresentation]);\n\n  // Slide management handlers\n  const handleAddSlide = useCallback(() => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: [],\n    };\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: [...prev.slides, newSlide],\n      currentSlideIndex: prev.slides.length,\n    }));\n    \n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  const handleDuplicateSlide = useCallback((index) => {\n    const slideToDuplicate = presentation.slides[index];\n    const newSlide = {\n      ...slideToDuplicate,\n      id: `slide-${Date.now()}`,\n      title: `${slideToDuplicate.title} (Copy)`,\n    };\n    \n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1,\n    }));\n    \n    addToast('Slide duplicated', 'success', 2000);\n  }, [presentation.slides, addToast]);\n\n  const handleDeleteSlide = useCallback((index) => {\n    if (presentation.slides.length <= 1) {\n      addToast('Cannot delete the last slide', 'warning');\n      return;\n    }\n    \n    const newSlides = presentation.slides.filter((_, i) => i !== index);\n    const newCurrentIndex = Math.min(\n      presentation.currentSlideIndex,\n      newSlides.length - 1\n    );\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: newCurrentIndex,\n    }));\n    \n    addToast('Slide deleted', 'success', 2000);\n  }, [presentation.slides, presentation.currentSlideIndex, addToast]);\n\n  const handleAddSlideAfter = useCallback((index) => {\n    const newSlide = {\n      id: `slide-${Date.now()}`,\n      title: `Slide ${presentation.slides.length + 1}`,\n      elements: [],\n    };\n    \n    const newSlides = [...presentation.slides];\n    newSlides.splice(index + 1, 0, newSlide);\n    \n    setPresentation(prev => ({\n      ...prev,\n      slides: newSlides,\n      currentSlideIndex: index + 1,\n    }));\n    \n    addToast('New slide added', 'success', 2000);\n  }, [presentation.slides.length, addToast]);\n\n  // Element management handlers\n  const handleElementSelect = useCallback((elementId) => {\n    setEditorState(prev => ({ ...prev, selectedElement: elementId }));\n  }, []);\n\n  const handleElementUpdate = useCallback((elementId, updates) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      const elementIndex = currentSlide.elements.findIndex(el => el.id === elementId);\n      \n      if (elementIndex !== -1) {\n        newSlides[prev.currentSlideIndex] = {\n          ...currentSlide,\n          elements: currentSlide.elements.map((el, index) =>\n            index === elementIndex ? { ...el, ...updates } : el\n          ),\n        };\n      }\n      \n      return { ...prev, slides: newSlides };\n    });\n  }, []);\n\n  const handleElementAdd = useCallback((elementData) => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      ...elementData,\n    };\n    \n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      \n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: [...currentSlide.elements, newElement],\n      };\n      \n      return { ...prev, slides: newSlides };\n    });\n    \n    // Auto-select the new element\n    setEditorState(prev => ({ ...prev, selectedElement: newElement.id }));\n    addToast('Element added', 'success', 1500);\n  }, [addToast]);\n\n  const handleElementDelete = useCallback((elementId) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const currentSlide = newSlides[prev.currentSlideIndex];\n      \n      newSlides[prev.currentSlideIndex] = {\n        ...currentSlide,\n        elements: currentSlide.elements.filter(el => el.id !== elementId),\n      };\n      \n      return { ...prev, slides: newSlides };\n    });\n    \n    setEditorState(prev => ({ ...prev, selectedElement: null }));\n    addToast('Element deleted', 'success', 1500);\n  }, [addToast]);\n\n  // Other handlers\n  const handleToolChange = useCallback((tool) => {\n    setEditorState(prev => ({ ...prev, tool }));\n  }, []);\n\n  const handleTitleChange = useCallback((title) => {\n    setPresentation(prev => ({ ...prev, title }));\n  }, []);\n\n  const handleSlideSelect = useCallback((index) => {\n    setPresentation(prev => ({ ...prev, currentSlideIndex: index }));\n    setEditorState(prev => ({ ...prev, selectedElement: null }));\n  }, []);\n\n  const handlePresent = useCallback(() => {\n    setEditorState(prev => ({ ...prev, isPresenting: true }));\n    addToast('Starting presentation...', 'info');\n  }, [addToast]);\n\n  // Remove auto-save useEffect\n  // Add slide change handler\n  const handleSlideChange = useCallback((field, value) => {\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const idx = prev.currentSlideIndex;\n      if (!newSlides[idx]) return prev;\n      newSlides[idx] = { ...newSlides[idx], [field]: value };\n      return { ...prev, slides: newSlides };\n    });\n  }, []);\n\n  // Find selected element from current slide\n  const selectedElement = React.useMemo(() => {\n    const slide = presentation.slides[presentation.currentSlideIndex];\n    if (!slide) return null;\n    return slide.elements.find(el => el.id === editorState.selectedElement) || null;\n  }, [presentation, editorState.selectedElement]);\n\n  // Compute formatting state for toolbar\n  const formattingState = React.useMemo(() => {\n    if (!selectedElement || selectedElement.type !== 'text') return {};\n    const style = selectedElement.style || {};\n    return {\n      bold: style.fontWeight === 'bold',\n      italic: style.fontStyle === 'italic',\n      underline: style.textDecoration === 'underline',\n      fontSize: style.fontSize || 16,\n      color: style.color || '#000000',\n      align: style.textAlign || 'left',\n    };\n  }, [selectedElement]);\n\n  // Handler for formatting actions\n  const handleFormat = useCallback((action, value) => {\n    if (!selectedElement || selectedElement.type !== 'text') return;\n    setPresentation(prev => {\n      const newSlides = [...prev.slides];\n      const slide = newSlides[prev.currentSlideIndex];\n      const idx = slide.elements.findIndex(el => el.id === selectedElement.id);\n      if (idx === -1) return prev;\n      const el = slide.elements[idx];\n      const style = { ...el.style };\n      switch (action) {\n        case 'bold':\n          style.fontWeight = style.fontWeight === 'bold' ? 'normal' : 'bold';\n          break;\n        case 'italic':\n          style.fontStyle = style.fontStyle === 'italic' ? 'normal' : 'italic';\n          break;\n        case 'underline':\n          style.textDecoration = style.textDecoration === 'underline' ? 'none' : 'underline';\n          break;\n        case 'fontSize':\n          style.fontSize = value || 20; // Default to 20 if not provided\n          break;\n        case 'color':\n          style.color = value || '#000000';\n          break;\n        case 'align':\n          style.textAlign = value;\n          break;\n        default:\n          break;\n      }\n      slide.elements[idx] = { ...el, style };\n      return { ...prev, slides: newSlides };\n    });\n  }, [selectedElement]);\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"h-screen flex items-center justify-center bg-gray-100\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading presentation...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const slides = Array.isArray(presentation.slides) ? presentation.slides : [];\n  const currentSlide = slides[presentation.currentSlideIndex] || { elements: [] };\n\n  return (\n    <div className=\"h-screen flex flex-col\">\n      {/* Toolbar */}\n      <PresentationToolbar\n        editorState={editorState}\n        onToolChange={handleToolChange}\n        onSave={handleSave}\n        onPresent={handlePresent}\n        onUndo={() => {}} // TODO: Implement undo/redo\n        onRedo={() => {}}\n        presentationTitle={presentation.title}\n        onTitleChange={handleTitleChange}\n        isSaving={isSaving}\n        selectedElement={selectedElement}\n        formattingState={formattingState}\n        onFormat={handleFormat}\n      />\n      <div className=\"flex-1 flex\">\n        {/* Sidebar */}\n        <SlidesSidebar\n          slides={presentation.slides}\n          currentSlideIndex={presentation.currentSlideIndex}\n          onSlideSelect={handleSlideSelect}\n          onAddSlide={handleAddSlide}\n          onDuplicateSlide={handleDuplicateSlide}\n          onDeleteSlide={handleDeleteSlide}\n          onAddSlideAfter={handleAddSlideAfter}\n        />\n        {/* Canvas */}\n        <SlideCanvas\n          slide={currentSlide}\n          editorState={editorState}\n          onElementSelect={handleElementSelect}\n          onElementUpdate={handleElementUpdate}\n          onElementAdd={handleElementAdd}\n          onElementDelete={handleElementDelete}\n          onSlideChange={handleSlideChange}\n        />\n      </div>\n      {/* Toast notifications */}\n      <ToastContainer toasts={toasts} removeToast={removeToast} />\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}