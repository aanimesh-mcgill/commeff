{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\LivePresentationViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PresentationService from '../services/PresentationService';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { onSnapshot, doc, collection, getDocs, query, orderBy, addDoc, serverTimestamp, updateDoc, getDoc } from 'firebase/firestore';\nimport { MessageSquare, ThumbsUp } from 'lucide-react';\nimport { db } from '../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getRandomCode() {\n  return Math.floor(10000 + Math.random() * 90000).toString();\n}\n\n// Utility to get or generate a stable anonId for anonymous users\nfunction getAnonId() {\n  let anonId = localStorage.getItem('anonId');\n  if (!anonId) {\n    anonId = 'anon_' + Math.random().toString(36).substr(2, 9);\n    localStorage.setItem('anonId', anonId);\n  }\n  return anonId;\n}\nconst LivePresentationViewer = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    currentUser\n  } = useAuth();\n  const isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n  const {\n    userProfile\n  } = require('../contexts/AuthContext').useAuth();\n  // const db = PresentationService.db || require('../firebase/config').db; // This line is removed\n\n  const [presentationId, setPresentationId] = useState(null);\n  const [presentation, setPresentation] = useState(null);\n  const [slides, setSlides] = useState([]);\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers'); // TODO: fetch from Firestore if needed\n  const [loadingAudienceMode, setLoadingAudienceMode] = useState(true);\n  const [username, setUsername] = useState('');\n  const [userId, setUserId] = useState('');\n  const [showPrompt, setShowPrompt] = useState(false);\n  const [showDiscussion, setShowDiscussion] = useState(false);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [comments, setComments] = useState([]); // Local state for now\n\n  // DEBUG LOGGING for Firestore rule troubleshooting\n  useEffect(() => {\n    console.log('[DEBUG] Current user uid:', currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid);\n    if (userProfile) {\n      console.log('[DEBUG] userProfile.enrolledCourses:', userProfile.enrolledCourses);\n    } else {\n      console.log('[DEBUG] userProfile is null');\n    }\n    if (presentation) {\n      console.log('[DEBUG] Presentation doc:', {\n        id: presentation.id,\n        isLive: presentation.isLive,\n        archived: presentation.archived,\n        currentSlideIndex: presentation.currentSlideIndex\n      });\n    } else {\n      console.log('[DEBUG] Presentation doc is null');\n    }\n  }, [currentUser, userProfile, presentation]);\n  useEffect(() => {\n    console.log('[DEBUG] --- LivePresentationViewer Diagnostics ---');\n    console.log('[DEBUG] courseId:', courseId);\n    console.log('[DEBUG] presentationId:', presentationId);\n    console.log('[DEBUG] currentUser:', currentUser);\n    console.log('[DEBUG] userProfile:', userProfile);\n    if (userProfile) {\n      console.log('[DEBUG] userProfile.enrolledCourses:', userProfile.enrolledCourses);\n      if (Array.isArray(userProfile.enrolledCourses)) {\n        const enrolled = userProfile.enrolledCourses.includes(courseId);\n        console.log('[DEBUG] Firestore rule simulation: enrolledCourses.includes(courseId):', enrolled);\n        console.log('[DEBUG] CourseId in enrolledCourses array:', userProfile.enrolledCourses.indexOf(courseId));\n      }\n    } else {\n      console.log('[DEBUG] userProfile is null');\n    }\n    if (presentation) {\n      console.log('[DEBUG] Presentation doc:', {\n        id: presentation.id,\n        isLive: presentation.isLive,\n        archived: presentation.archived,\n        currentSlideIndex: presentation.currentSlideIndex,\n        audienceMode: presentation.audienceMode,\n        title: presentation.title,\n        ownerId: presentation.ownerId\n      });\n    } else {\n      console.log('[DEBUG] Presentation doc is null');\n    }\n    console.log('[DEBUG] slides:', slides);\n    console.log('[DEBUG] slides.length:', slides.length);\n    if (slides.length > 0) {\n      console.log('[DEBUG] Slide 0:', slides[0]);\n    }\n    console.log('[DEBUG] --- End Diagnostics ---');\n  }, [courseId, presentationId, currentUser, userProfile, presentation, slides]);\n\n  // Add comprehensive Firestore document logging\n  useEffect(() => {\n    const logFirestoreDocuments = async () => {\n      try {\n        console.log('[DEBUG] === FIRESTORE DOCUMENT ANALYSIS ===');\n\n        // 1. Log Course Document\n        console.log('[DEBUG] 1. Checking Course Document: courses/' + courseId);\n        const courseDoc = doc(db, 'courses', courseId);\n        const courseSnap = await getDoc(courseDoc);\n        if (courseSnap.exists()) {\n          const courseData = courseSnap.data();\n          console.log('[DEBUG] Course Document Fields:', {\n            id: courseSnap.id,\n            name: courseData.name,\n            instructorId: courseData.instructorId,\n            isActive: courseData.isActive,\n            livePresentation: courseData.livePresentation,\n            createdAt: courseData.createdAt,\n            updatedAt: courseData.updatedAt\n          });\n        } else {\n          console.log('[DEBUG] Course Document does not exist!');\n        }\n\n        // 2. Log Presentation Document (if we have presentationId)\n        if (presentationId) {\n          console.log('[DEBUG] 2. Checking Presentation Document: courses/' + courseId + '/presentations/' + presentationId);\n          const presentationDoc = doc(db, 'courses', courseId, 'presentations', presentationId);\n          const presentationSnap = await getDoc(presentationDoc);\n          if (presentationSnap.exists()) {\n            const presentationData = presentationSnap.data();\n            console.log('[DEBUG] Presentation Document Fields:', {\n              id: presentationSnap.id,\n              title: presentationData.title,\n              isLive: presentationData.isLive,\n              archived: presentationData.archived,\n              currentSlideIndex: presentationData.currentSlideIndex,\n              audienceMode: presentationData.audienceMode,\n              ownerId: presentationData.ownerId,\n              createdAt: presentationData.createdAt,\n              updatedAt: presentationData.updatedAt\n            });\n          } else {\n            console.log('[DEBUG] Presentation Document does not exist!');\n          }\n        } else {\n          console.log('[DEBUG] 2. No presentationId available to check presentation document');\n        }\n\n        // 3. Log User Document\n        if (currentUser) {\n          console.log('[DEBUG] 3. Checking User Document: users/' + currentUser.uid);\n          const userDoc = doc(db, 'users', currentUser.uid);\n          const userSnap = await getDoc(userDoc);\n          if (userSnap.exists()) {\n            const userData = userSnap.data();\n            console.log('[DEBUG] User Document Fields:', {\n              id: userSnap.id,\n              displayName: userData.displayName,\n              email: userData.email,\n              role: userData.role,\n              enrolledCourses: userData.enrolledCourses,\n              createdAt: userData.createdAt,\n              updatedAt: userData.updatedAt\n            });\n          } else {\n            console.log('[DEBUG] User Document does not exist!');\n          }\n        } else {\n          console.log('[DEBUG] 3. No currentUser available to check user document');\n        }\n\n        // 4. Firestore Rule Analysis\n        console.log('[DEBUG] 4. Firestore Rule Analysis:');\n        console.log('[DEBUG] - Rule for presentations requires:');\n        console.log('[DEBUG]   * request.auth != null: true');\n        console.log('[DEBUG]   * (resource.data.archived == true || resource.data.isLive == true):', presentation ? presentation.archived === true || presentation.isLive === true : 'unknown');\n        console.log('[DEBUG]   * enrolledCourses.hasAny([courseId]):', userProfile && Array.isArray(userProfile.enrolledCourses) ? userProfile.enrolledCourses.includes(courseId) : 'unknown');\n        console.log('[DEBUG] === END FIRESTORE DOCUMENT ANALYSIS ===');\n      } catch (error) {\n        console.error('[DEBUG] Error in Firestore document analysis:', error);\n      }\n    };\n    if (courseId) {\n      logFirestoreDocuments();\n    }\n  }, [courseId, presentationId, currentUser, userProfile, presentation]);\n\n  // Auto-fix missing isLive field on presentation document\n  useEffect(() => {\n    const fixPresentationDocument = async () => {\n      if (!presentationId || !currentUser) return;\n      try {\n        console.log('[DEBUG] Attempting to fix presentation document...');\n        const presentationDoc = doc(db, 'courses', courseId, 'presentations', presentationId);\n\n        // Try to read the presentation document\n        const presentationSnap = await getDoc(presentationDoc);\n        if (presentationSnap.exists()) {\n          const presentationData = presentationSnap.data();\n          console.log('[DEBUG] Presentation document exists, checking isLive field:', presentationData.isLive);\n\n          // If isLive is missing or false, set it to true\n          if (presentationData.isLive !== true) {\n            console.log('[DEBUG] Setting isLive: true on presentation document...');\n            await updateDoc(presentationDoc, {\n              isLive: true,\n              updatedAt: serverTimestamp()\n            });\n            console.log('[DEBUG] Successfully set isLive: true on presentation document');\n          } else {\n            console.log('[DEBUG] isLive field is already true');\n          }\n        } else {\n          console.log('[DEBUG] Presentation document does not exist, cannot fix');\n        }\n      } catch (error) {\n        console.error('[DEBUG] Error fixing presentation document:', error);\n      }\n    };\n\n    // Only try to fix if we have a presentationId and the user is enrolled\n    if (presentationId && userProfile && Array.isArray(userProfile.enrolledCourses) && userProfile.enrolledCourses.includes(courseId)) {\n      fixPresentationDocument();\n    }\n  }, [presentationId, courseId, currentUser, userProfile]);\n  useEffect(() => {\n    console.log('[LiveViewer] MOUNTED. courseId:', courseId);\n    const fetchLive = async () => {\n      try {\n        const liveId = await PresentationService.getLivePresentation(courseId);\n        setPresentationId(liveId);\n        console.log('[LiveViewer] livePresentationId:', liveId);\n        if (liveId) {\n          // Real-time listener for presentation\n          const presentationDoc = doc(db, 'courses', courseId, 'presentations', liveId);\n          const unsubPres = onSnapshot(presentationDoc, doc => {\n            if (doc.exists()) {\n              const pres = {\n                id: doc.id,\n                ...doc.data()\n              };\n              console.log('[LiveViewer] [onSnapshot] fetched presentation:', pres);\n              setPresentation(pres);\n              setAudienceMode(pres.audienceMode || 'enrolledUsers');\n              setLoadingAudienceMode(false);\n            } else {\n              console.log('[LiveViewer] [onSnapshot] presentation doc does not exist');\n              setPresentation(null);\n            }\n          }, error => {\n            console.error('[LiveViewer][ERROR] onSnapshot presentation:', error);\n            console.error('[LiveViewer][ERROR] Error details:', {\n              code: error.code,\n              message: error.message,\n              stack: error.stack,\n              courseId: courseId,\n              presentationId: liveId,\n              userUid: currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid\n            });\n            setPresentation(null);\n          });\n          // Real-time listener for slides\n          const slidesCol = collection(db, 'courses', courseId, 'presentations', liveId, 'slides');\n          const slidesQuery = query(slidesCol, orderBy('order', 'asc'));\n          const unsubSlides = onSnapshot(slidesQuery, snap => {\n            const slidesArr = [];\n            snap.forEach(doc => slidesArr.push({\n              id: doc.id,\n              ...doc.data()\n            }));\n            setSlides(slidesArr);\n            console.log('[LiveViewer] [onSnapshot] fetched slides:', slidesArr);\n          }, error => {\n            console.error('[LiveViewer][ERROR] onSnapshot slides:', error);\n          });\n          // Cleanup\n          return () => {\n            unsubPres();\n            unsubSlides();\n          };\n        } else {\n          setLoadingAudienceMode(false);\n        }\n      } catch (err) {\n        console.error('[LiveViewer][ERROR] fetchLive:', err);\n      }\n    };\n    fetchLive();\n    // eslint-disable-next-line\n  }, [courseId]);\n  useEffect(() => {\n    if (loadingAudienceMode) return; // Don't redirect until loaded\n    if (audienceMode === 'enrolledUsers' && !currentUser) {\n      console.log('[LiveViewer] Not authenticated, redirecting to login for enrolledUsers mode');\n      navigate('/login', {\n        replace: true\n      });\n    }\n    if (audienceMode === 'anonymous' && !userId) {\n      setShowPrompt(true);\n      console.log('[LiveViewer] Anonymous mode, showing username prompt');\n    }\n  }, [audienceMode, currentUser, userId, navigate, loadingAudienceMode]);\n  const handleUsernameSubmit = e => {\n    e.preventDefault();\n    if (username.trim()) {\n      setUserId(username.trim() + '_' + getRandomCode());\n      setShowPrompt(false);\n    }\n  };\n\n  // Real-time Firestore sync for comments\n  useEffect(() => {\n    if (!presentationId || !presentation || !slides.length) return;\n    const currentSlide = slides[presentation.currentSlideIndex];\n    if (!currentSlide) return;\n    const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments');\n    const q = query(commentsCol, orderBy('timePosted', 'asc'));\n    const unsub = onSnapshot(q, snap => {\n      const arr = [];\n      snap.forEach(doc => arr.push({\n        id: doc.id,\n        ...doc.data()\n      }));\n      setComments(arr);\n    });\n    return () => unsub();\n  }, [presentationId, presentation, slides, courseId]);\n  const handleCommentSubmit = async e => {\n    e.preventDefault();\n    if (!commentInput.trim()) return;\n    const currentSlide = slides[presentation.currentSlideIndex];\n    if (!currentSlide) return;\n    const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments');\n    await addDoc(commentsCol, {\n      text: commentInput,\n      username: userId,\n      likedBy: {},\n      timePosted: serverTimestamp(),\n      groupId: null\n    });\n    setCommentInput(\"\");\n  };\n\n  // Like handler (likedBy map logic)\n  const handleLike = async comment => {\n    let likeUserId = '';\n    let updatePayload = {};\n    if (audienceMode === 'enrolledUsers' && currentUser) {\n      likeUserId = currentUser.uid;\n    } else if (audienceMode === 'anonymous') {\n      likeUserId = getAnonId();\n      updatePayload.anonId = likeUserId; // Needed for Firestore rules\n    } else {\n      return;\n    }\n    // Prevent double-like\n    if (comment.likedBy && comment.likedBy[likeUserId]) return;\n    const newLikedBy = {\n      ...(comment.likedBy || {})\n    };\n    newLikedBy[likeUserId] = true;\n    const commentRef = doc(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments', comment.id);\n    await updateDoc(commentRef, {\n      ...comment,\n      likedBy: newLikedBy,\n      ...updatePayload\n    });\n  };\n  if (!presentationId) {\n    console.warn('[LiveViewer] No live presentationId, rendering fallback');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen text-xl text-gray-600\",\n      children: \"No live presentation is currently being delivered for this course.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 12\n    }, this);\n  }\n  if (audienceMode === 'anonymous' && showPrompt) {\n    console.log('[LiveViewer] Rendering username prompt UI');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleUsernameSubmit,\n        className: \"bg-white p-8 rounded shadow-lg flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Enter a username to join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          className: \"border px-4 py-2 rounded mb-4 text-lg\",\n          placeholder: \"Your name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-600 text-white px-6 py-2 rounded font-semibold\",\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\n  console.log('[LiveViewer][DEBUG] currentSlideIndex:', presentation && presentation.currentSlideIndex, 'slides.length:', slides.length, 'slide:', presentation && typeof presentation.currentSlideIndex === 'number' ? slides[presentation.currentSlideIndex] : undefined);\n\n  // Robust fallback for missing/invalid presentation or currentSlideIndex\n  if (!presentation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen text-xl text-red-600\",\n      children: \"Unable to load live presentation. You may not have access, or the presentation is not live.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this);\n  }\n  let slideToShow = null;\n  if (typeof presentation.currentSlideIndex === 'number' && slides[presentation.currentSlideIndex]) {\n    slideToShow = slides[presentation.currentSlideIndex];\n  } else if (slides.length > 0) {\n    slideToShow = slides[0];\n  }\n  console.log('[LiveViewer] Rendering main viewer UI. presentation:', presentation, 'audienceMode:', audienceMode, 'userId:', userId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-screen h-screen bg-black overflow-hidden\",\n    children: [isDev && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        background: 'rgba(255,255,255,0.95)',\n        color: '#222',\n        zIndex: 9999,\n        padding: 12,\n        fontSize: 13,\n        maxWidth: 400,\n        borderBottomRightRadius: 8,\n        boxShadow: '0 2px 8px #0002'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"DEBUG PANEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"User:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 16\n        }, this), \" \", currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Enrolled Courses:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 16\n        }, this), \" \", JSON.stringify(userProfile === null || userProfile === void 0 ? void 0 : userProfile.enrolledCourses)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Presentation:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 16\n        }, this), \" \", presentation ? JSON.stringify({\n          id: presentation.id,\n          isLive: presentation.isLive,\n          archived: presentation.archived,\n          currentSlideIndex: presentation.currentSlideIndex\n        }) : 'null']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-8 z-20 text-white text-sm bg-black/60 px-3 py-1 rounded-full shadow\",\n      children: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"absolute top-4 right-24 z-30 bg-white bg-opacity-80 rounded-full p-2 shadow hover:bg-primary-100\",\n      title: \"Open discussion\",\n      onClick: () => setShowDiscussion(true),\n      children: /*#__PURE__*/_jsxDEV(MessageSquare, {\n        className: \"w-6 h-6 text-primary-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center w-full h-full\",\n      children: slides.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 text-2xl\",\n        children: \"No slides found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this) : slideToShow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-full flex flex-col items-center justify-center\",\n        children: [slideToShow.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: slideToShow.imageUrl,\n          alt: \"Slide\",\n          className: \"object-contain w-full h-full max-h-[90vh] max-w-[90vw] rounded shadow-lg bg-white\",\n          style: {\n            background: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-center w-full h-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-white text-3xl font-semibold text-center px-8 py-4 bg-black/60 rounded-lg shadow\",\n            children: slideToShow.content || slideToShow.text || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 flex items-center justify-center pointer-events-none z-30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-400 text-2xl\",\n        children: \"Slide will appear here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), showDiscussion && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-40 flex items-center justify-center bg-black bg-opacity-60\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0\",\n        onClick: () => setShowDiscussion(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative flex w-full h-full z-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 bg-gray-100 flex flex-col items-center justify-center border-r border-gray-300\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-400 text-lg\",\n            children: \"(Grouping area placeholder)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[400px] max-w-full bg-white flex flex-col h-full shadow-xl\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between px-4 py-3 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-lg\",\n              children: \"Slide Discussion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowDiscussion(false),\n              className: \"text-gray-500 hover:text-primary-600 text-xl\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-1 overflow-y-auto p-4 space-y-3\",\n            children: comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-400 text-center\",\n              children: \"No messages yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 19\n            }, this) : comments.map(c => {\n              let likeUserId = '';\n              if (audienceMode === 'enrolledUsers' && currentUser) {\n                likeUserId = currentUser.uid;\n              } else if (audienceMode === 'anonymous') {\n                likeUserId = getAnonId();\n              }\n              const alreadyLiked = c.likedBy && likeUserId && c.likedBy[likeUserId];\n              const likeCount = c.likedBy ? Object.keys(c.likedBy).length : 0;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-100 rounded px-3 py-2 flex items-center group\",\n                title: c.username,\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `flex items-center mr-3 text-gray-500 hover:text-primary-600 focus:outline-none ${alreadyLiked ? 'opacity-50 cursor-not-allowed' : ''}`,\n                  onClick: () => handleLike(c),\n                  tabIndex: 0,\n                  \"aria-label\": \"Like comment\",\n                  disabled: alreadyLiked,\n                  children: [/*#__PURE__*/_jsxDEV(ThumbsUp, {\n                    className: \"w-5 h-5 mr-1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm font-semibold\",\n                    children: likeCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-800 text-sm\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: c.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 25\n                }, this)]\n              }, c.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"flex items-center border-t px-4 py-3\",\n            onSubmit: handleCommentSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"flex-1 border rounded px-3 py-2 mr-2 focus:outline-none focus:border-primary-500\",\n              placeholder: \"Type a comment...\",\n              value: commentInput,\n              onChange: e => setCommentInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"bg-primary-600 text-white px-4 py-2 rounded font-semibold disabled:opacity-50\",\n              disabled: !commentInput.trim(),\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }, this), slides.length > 0 && presentation && typeof presentation.currentSlideIndex === 'number' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bottom-6 right-8 z-20 text-white text-lg bg-black/60 px-4 py-2 rounded-full shadow\",\n      children: [presentation.currentSlideIndex + 1, \" / \", slides.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 5\n  }, this);\n};\n_s(LivePresentationViewer, \"7BElzu4H7cA53eA3VnCKTSJUy2Q=\", true, function () {\n  return [useParams, useNavigate, useAuth];\n});\n_c = LivePresentationViewer;\nexport default LivePresentationViewer;\nvar _c;\n$RefreshReg$(_c, \"LivePresentationViewer\");","map":{"version":3,"names":["React","useEffect","useState","useParams","PresentationService","useAuth","useNavigate","onSnapshot","doc","collection","getDocs","query","orderBy","addDoc","serverTimestamp","updateDoc","getDoc","MessageSquare","ThumbsUp","db","jsxDEV","_jsxDEV","getRandomCode","Math","floor","random","toString","getAnonId","anonId","localStorage","getItem","substr","setItem","LivePresentationViewer","_s","courseId","navigate","currentUser","isDev","process","env","NODE_ENV","userProfile","require","presentationId","setPresentationId","presentation","setPresentation","slides","setSlides","currentSlide","setCurrentSlide","audienceMode","setAudienceMode","loadingAudienceMode","setLoadingAudienceMode","username","setUsername","userId","setUserId","showPrompt","setShowPrompt","showDiscussion","setShowDiscussion","commentInput","setCommentInput","comments","setComments","console","log","uid","enrolledCourses","id","isLive","archived","currentSlideIndex","Array","isArray","enrolled","includes","indexOf","title","ownerId","length","logFirestoreDocuments","courseDoc","courseSnap","exists","courseData","data","name","instructorId","isActive","livePresentation","createdAt","updatedAt","presentationDoc","presentationSnap","presentationData","userDoc","userSnap","userData","displayName","email","role","error","fixPresentationDocument","fetchLive","liveId","getLivePresentation","unsubPres","pres","code","message","stack","userUid","slidesCol","slidesQuery","unsubSlides","snap","slidesArr","forEach","push","err","replace","handleUsernameSubmit","e","preventDefault","trim","commentsCol","q","unsub","arr","handleCommentSubmit","text","likedBy","timePosted","groupId","handleLike","comment","likeUserId","updatePayload","newLikedBy","commentRef","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","undefined","slideToShow","style","position","top","left","background","color","zIndex","padding","fontSize","maxWidth","borderBottomRightRadius","boxShadow","JSON","stringify","onClick","imageUrl","src","alt","content","map","c","alreadyLiked","likeCount","Object","keys","tabIndex","disabled","cursor","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/LivePresentationViewer.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PresentationService from '../services/PresentationService';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { onSnapshot, doc, collection, getDocs, query, orderBy, addDoc, serverTimestamp, updateDoc, getDoc } from 'firebase/firestore';\r\nimport { MessageSquare, ThumbsUp } from 'lucide-react';\r\nimport { db } from '../firebase/config';\r\n\r\nfunction getRandomCode() {\r\n  return Math.floor(10000 + Math.random() * 90000).toString();\r\n}\r\n\r\n// Utility to get or generate a stable anonId for anonymous users\r\nfunction getAnonId() {\r\n  let anonId = localStorage.getItem('anonId');\r\n  if (!anonId) {\r\n    anonId = 'anon_' + Math.random().toString(36).substr(2, 9);\r\n    localStorage.setItem('anonId', anonId);\r\n  }\r\n  return anonId;\r\n}\r\n\r\nconst LivePresentationViewer = () => {\r\n  const { courseId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { currentUser } = useAuth();\r\n  const isDev = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\r\n  const { userProfile } = require('../contexts/AuthContext').useAuth();\r\n  // const db = PresentationService.db || require('../firebase/config').db; // This line is removed\r\n\r\n  const [presentationId, setPresentationId] = useState(null);\r\n  const [presentation, setPresentation] = useState(null);\r\n  const [slides, setSlides] = useState([]);\r\n  const [currentSlide, setCurrentSlide] = useState(0);\r\n  const [audienceMode, setAudienceMode] = useState('enrolledUsers'); // TODO: fetch from Firestore if needed\r\n  const [loadingAudienceMode, setLoadingAudienceMode] = useState(true);\r\n  const [username, setUsername] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const [showPrompt, setShowPrompt] = useState(false);\r\n  const [showDiscussion, setShowDiscussion] = useState(false);\r\n  const [commentInput, setCommentInput] = useState(\"\");\r\n  const [comments, setComments] = useState([]); // Local state for now\r\n\r\n  // DEBUG LOGGING for Firestore rule troubleshooting\r\n  useEffect(() => {\r\n    console.log('[DEBUG] Current user uid:', currentUser?.uid);\r\n    if (userProfile) {\r\n      console.log('[DEBUG] userProfile.enrolledCourses:', userProfile.enrolledCourses);\r\n    } else {\r\n      console.log('[DEBUG] userProfile is null');\r\n    }\r\n    if (presentation) {\r\n      console.log('[DEBUG] Presentation doc:', {\r\n        id: presentation.id,\r\n        isLive: presentation.isLive,\r\n        archived: presentation.archived,\r\n        currentSlideIndex: presentation.currentSlideIndex\r\n      });\r\n    } else {\r\n      console.log('[DEBUG] Presentation doc is null');\r\n    }\r\n  }, [currentUser, userProfile, presentation]);\r\n\r\n  useEffect(() => {\r\n    console.log('[DEBUG] --- LivePresentationViewer Diagnostics ---');\r\n    console.log('[DEBUG] courseId:', courseId);\r\n    console.log('[DEBUG] presentationId:', presentationId);\r\n    console.log('[DEBUG] currentUser:', currentUser);\r\n    console.log('[DEBUG] userProfile:', userProfile);\r\n    if (userProfile) {\r\n      console.log('[DEBUG] userProfile.enrolledCourses:', userProfile.enrolledCourses);\r\n      if (Array.isArray(userProfile.enrolledCourses)) {\r\n        const enrolled = userProfile.enrolledCourses.includes(courseId);\r\n        console.log('[DEBUG] Firestore rule simulation: enrolledCourses.includes(courseId):', enrolled);\r\n        console.log('[DEBUG] CourseId in enrolledCourses array:', userProfile.enrolledCourses.indexOf(courseId));\r\n      }\r\n    } else {\r\n      console.log('[DEBUG] userProfile is null');\r\n    }\r\n    if (presentation) {\r\n      console.log('[DEBUG] Presentation doc:', {\r\n        id: presentation.id,\r\n        isLive: presentation.isLive,\r\n        archived: presentation.archived,\r\n        currentSlideIndex: presentation.currentSlideIndex,\r\n        audienceMode: presentation.audienceMode,\r\n        title: presentation.title,\r\n        ownerId: presentation.ownerId\r\n      });\r\n    } else {\r\n      console.log('[DEBUG] Presentation doc is null');\r\n    }\r\n    console.log('[DEBUG] slides:', slides);\r\n    console.log('[DEBUG] slides.length:', slides.length);\r\n    if (slides.length > 0) {\r\n      console.log('[DEBUG] Slide 0:', slides[0]);\r\n    }\r\n    console.log('[DEBUG] --- End Diagnostics ---');\r\n  }, [courseId, presentationId, currentUser, userProfile, presentation, slides]);\r\n\r\n  // Add comprehensive Firestore document logging\r\n  useEffect(() => {\r\n    const logFirestoreDocuments = async () => {\r\n      try {\r\n        console.log('[DEBUG] === FIRESTORE DOCUMENT ANALYSIS ===');\r\n        \r\n        // 1. Log Course Document\r\n        console.log('[DEBUG] 1. Checking Course Document: courses/' + courseId);\r\n        const courseDoc = doc(db, 'courses', courseId);\r\n        const courseSnap = await getDoc(courseDoc);\r\n        if (courseSnap.exists()) {\r\n          const courseData = courseSnap.data();\r\n          console.log('[DEBUG] Course Document Fields:', {\r\n            id: courseSnap.id,\r\n            name: courseData.name,\r\n            instructorId: courseData.instructorId,\r\n            isActive: courseData.isActive,\r\n            livePresentation: courseData.livePresentation,\r\n            createdAt: courseData.createdAt,\r\n            updatedAt: courseData.updatedAt\r\n          });\r\n        } else {\r\n          console.log('[DEBUG] Course Document does not exist!');\r\n        }\r\n\r\n        // 2. Log Presentation Document (if we have presentationId)\r\n        if (presentationId) {\r\n          console.log('[DEBUG] 2. Checking Presentation Document: courses/' + courseId + '/presentations/' + presentationId);\r\n          const presentationDoc = doc(db, 'courses', courseId, 'presentations', presentationId);\r\n          const presentationSnap = await getDoc(presentationDoc);\r\n          if (presentationSnap.exists()) {\r\n            const presentationData = presentationSnap.data();\r\n            console.log('[DEBUG] Presentation Document Fields:', {\r\n              id: presentationSnap.id,\r\n              title: presentationData.title,\r\n              isLive: presentationData.isLive,\r\n              archived: presentationData.archived,\r\n              currentSlideIndex: presentationData.currentSlideIndex,\r\n              audienceMode: presentationData.audienceMode,\r\n              ownerId: presentationData.ownerId,\r\n              createdAt: presentationData.createdAt,\r\n              updatedAt: presentationData.updatedAt\r\n            });\r\n          } else {\r\n            console.log('[DEBUG] Presentation Document does not exist!');\r\n          }\r\n        } else {\r\n          console.log('[DEBUG] 2. No presentationId available to check presentation document');\r\n        }\r\n\r\n        // 3. Log User Document\r\n        if (currentUser) {\r\n          console.log('[DEBUG] 3. Checking User Document: users/' + currentUser.uid);\r\n          const userDoc = doc(db, 'users', currentUser.uid);\r\n          const userSnap = await getDoc(userDoc);\r\n          if (userSnap.exists()) {\r\n            const userData = userSnap.data();\r\n            console.log('[DEBUG] User Document Fields:', {\r\n              id: userSnap.id,\r\n              displayName: userData.displayName,\r\n              email: userData.email,\r\n              role: userData.role,\r\n              enrolledCourses: userData.enrolledCourses,\r\n              createdAt: userData.createdAt,\r\n              updatedAt: userData.updatedAt\r\n            });\r\n          } else {\r\n            console.log('[DEBUG] User Document does not exist!');\r\n          }\r\n        } else {\r\n          console.log('[DEBUG] 3. No currentUser available to check user document');\r\n        }\r\n\r\n        // 4. Firestore Rule Analysis\r\n        console.log('[DEBUG] 4. Firestore Rule Analysis:');\r\n        console.log('[DEBUG] - Rule for presentations requires:');\r\n        console.log('[DEBUG]   * request.auth != null: true');\r\n        console.log('[DEBUG]   * (resource.data.archived == true || resource.data.isLive == true):', \r\n          presentation ? (presentation.archived === true || presentation.isLive === true) : 'unknown');\r\n        console.log('[DEBUG]   * enrolledCourses.hasAny([courseId]):', \r\n          userProfile && Array.isArray(userProfile.enrolledCourses) ? \r\n          userProfile.enrolledCourses.includes(courseId) : 'unknown');\r\n\r\n        console.log('[DEBUG] === END FIRESTORE DOCUMENT ANALYSIS ===');\r\n      } catch (error) {\r\n        console.error('[DEBUG] Error in Firestore document analysis:', error);\r\n      }\r\n    };\r\n\r\n    if (courseId) {\r\n      logFirestoreDocuments();\r\n    }\r\n  }, [courseId, presentationId, currentUser, userProfile, presentation]);\r\n\r\n  // Auto-fix missing isLive field on presentation document\r\n  useEffect(() => {\r\n    const fixPresentationDocument = async () => {\r\n      if (!presentationId || !currentUser) return;\r\n      \r\n      try {\r\n        console.log('[DEBUG] Attempting to fix presentation document...');\r\n        const presentationDoc = doc(db, 'courses', courseId, 'presentations', presentationId);\r\n        \r\n        // Try to read the presentation document\r\n        const presentationSnap = await getDoc(presentationDoc);\r\n        if (presentationSnap.exists()) {\r\n          const presentationData = presentationSnap.data();\r\n          console.log('[DEBUG] Presentation document exists, checking isLive field:', presentationData.isLive);\r\n          \r\n          // If isLive is missing or false, set it to true\r\n          if (presentationData.isLive !== true) {\r\n            console.log('[DEBUG] Setting isLive: true on presentation document...');\r\n            await updateDoc(presentationDoc, {\r\n              isLive: true,\r\n              updatedAt: serverTimestamp()\r\n            });\r\n            console.log('[DEBUG] Successfully set isLive: true on presentation document');\r\n          } else {\r\n            console.log('[DEBUG] isLive field is already true');\r\n          }\r\n        } else {\r\n          console.log('[DEBUG] Presentation document does not exist, cannot fix');\r\n        }\r\n      } catch (error) {\r\n        console.error('[DEBUG] Error fixing presentation document:', error);\r\n      }\r\n    };\r\n\r\n    // Only try to fix if we have a presentationId and the user is enrolled\r\n    if (presentationId && userProfile && Array.isArray(userProfile.enrolledCourses) && \r\n        userProfile.enrolledCourses.includes(courseId)) {\r\n      fixPresentationDocument();\r\n    }\r\n  }, [presentationId, courseId, currentUser, userProfile]);\r\n\r\n  useEffect(() => {\r\n    console.log('[LiveViewer] MOUNTED. courseId:', courseId);\r\n    const fetchLive = async () => {\r\n      try {\r\n        const liveId = await PresentationService.getLivePresentation(courseId);\r\n        setPresentationId(liveId);\r\n        console.log('[LiveViewer] livePresentationId:', liveId);\r\n        if (liveId) {\r\n          // Real-time listener for presentation\r\n          const presentationDoc = doc(db, 'courses', courseId, 'presentations', liveId);\r\n          const unsubPres = onSnapshot(\r\n            presentationDoc,\r\n            (doc) => {\r\n              if (doc.exists()) {\r\n                const pres = { id: doc.id, ...doc.data() };\r\n                console.log('[LiveViewer] [onSnapshot] fetched presentation:', pres);\r\n                setPresentation(pres);\r\n                setAudienceMode(pres.audienceMode || 'enrolledUsers');\r\n                setLoadingAudienceMode(false);\r\n              } else {\r\n                console.log('[LiveViewer] [onSnapshot] presentation doc does not exist');\r\n                setPresentation(null);\r\n              }\r\n            },\r\n            (error) => {\r\n              console.error('[LiveViewer][ERROR] onSnapshot presentation:', error);\r\n              console.error('[LiveViewer][ERROR] Error details:', {\r\n                code: error.code,\r\n                message: error.message,\r\n                stack: error.stack,\r\n                courseId: courseId,\r\n                presentationId: liveId,\r\n                userUid: currentUser?.uid\r\n              });\r\n              setPresentation(null);\r\n            }\r\n          );\r\n          // Real-time listener for slides\r\n          const slidesCol = collection(db, 'courses', courseId, 'presentations', liveId, 'slides');\r\n          const slidesQuery = query(slidesCol, orderBy('order', 'asc'));\r\n          const unsubSlides = onSnapshot(slidesQuery, (snap) => {\r\n            const slidesArr = [];\r\n            snap.forEach(doc => slidesArr.push({ id: doc.id, ...doc.data() }));\r\n            setSlides(slidesArr);\r\n            console.log('[LiveViewer] [onSnapshot] fetched slides:', slidesArr);\r\n          }, (error) => {\r\n            console.error('[LiveViewer][ERROR] onSnapshot slides:', error);\r\n          });\r\n          // Cleanup\r\n          return () => {\r\n            unsubPres();\r\n            unsubSlides();\r\n          };\r\n        } else {\r\n          setLoadingAudienceMode(false);\r\n        }\r\n      } catch (err) {\r\n        console.error('[LiveViewer][ERROR] fetchLive:', err);\r\n      }\r\n    };\r\n    fetchLive();\r\n    // eslint-disable-next-line\r\n  }, [courseId]);\r\n\r\n  useEffect(() => {\r\n    if (loadingAudienceMode) return; // Don't redirect until loaded\r\n    if (audienceMode === 'enrolledUsers' && !currentUser) {\r\n      console.log('[LiveViewer] Not authenticated, redirecting to login for enrolledUsers mode');\r\n      navigate('/login', { replace: true });\r\n    }\r\n    if (audienceMode === 'anonymous' && !userId) {\r\n      setShowPrompt(true);\r\n      console.log('[LiveViewer] Anonymous mode, showing username prompt');\r\n    }\r\n  }, [audienceMode, currentUser, userId, navigate, loadingAudienceMode]);\r\n\r\n  const handleUsernameSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (username.trim()) {\r\n      setUserId(username.trim() + '_' + getRandomCode());\r\n      setShowPrompt(false);\r\n    }\r\n  };\r\n\r\n  // Real-time Firestore sync for comments\r\n  useEffect(() => {\r\n    if (!presentationId || !presentation || !slides.length) return;\r\n    const currentSlide = slides[presentation.currentSlideIndex];\r\n    if (!currentSlide) return;\r\n    const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments');\r\n    const q = query(commentsCol, orderBy('timePosted', 'asc'));\r\n    const unsub = onSnapshot(q, (snap) => {\r\n      const arr = [];\r\n      snap.forEach(doc => arr.push({ id: doc.id, ...doc.data() }));\r\n      setComments(arr);\r\n    });\r\n    return () => unsub();\r\n  }, [presentationId, presentation, slides, courseId]);\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!commentInput.trim()) return;\r\n    const currentSlide = slides[presentation.currentSlideIndex];\r\n    if (!currentSlide) return;\r\n    const commentsCol = collection(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments');\r\n    await addDoc(commentsCol, {\r\n      text: commentInput,\r\n      username: userId,\r\n      likedBy: {},\r\n      timePosted: serverTimestamp(),\r\n      groupId: null\r\n    });\r\n    setCommentInput(\"\");\r\n  };\r\n\r\n  // Like handler (likedBy map logic)\r\n  const handleLike = async (comment) => {\r\n    let likeUserId = '';\r\n    let updatePayload = {};\r\n    if (audienceMode === 'enrolledUsers' && currentUser) {\r\n      likeUserId = currentUser.uid;\r\n    } else if (audienceMode === 'anonymous') {\r\n      likeUserId = getAnonId();\r\n      updatePayload.anonId = likeUserId; // Needed for Firestore rules\r\n    } else {\r\n      return;\r\n    }\r\n    // Prevent double-like\r\n    if (comment.likedBy && comment.likedBy[likeUserId]) return;\r\n    const newLikedBy = { ...(comment.likedBy || {}) };\r\n    newLikedBy[likeUserId] = true;\r\n    const commentRef = doc(db, 'courses', courseId, 'presentations', presentationId, 'slides', currentSlide.id, 'comments', comment.id);\r\n    await updateDoc(commentRef, { ...comment, likedBy: newLikedBy, ...updatePayload });\r\n  };\r\n\r\n  if (!presentationId) {\r\n    console.warn('[LiveViewer] No live presentationId, rendering fallback');\r\n    return <div className=\"flex items-center justify-center min-h-screen text-xl text-gray-600\">No live presentation is currently being delivered for this course.</div>;\r\n  }\r\n\r\n  if (audienceMode === 'anonymous' && showPrompt) {\r\n    console.log('[LiveViewer] Rendering username prompt UI');\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-50\">\r\n        <form onSubmit={handleUsernameSubmit} className=\"bg-white p-8 rounded shadow-lg flex flex-col items-center\">\r\n          <h2 className=\"text-2xl font-bold mb-4\">Enter a username to join</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={e => setUsername(e.target.value)}\r\n            className=\"border px-4 py-2 rounded mb-4 text-lg\"\r\n            placeholder=\"Your name\"\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"bg-blue-600 text-white px-6 py-2 rounded font-semibold\">Join</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // TODO: Fetch and show slides, poll/interaction UI, etc.\r\n  console.log('[LiveViewer][DEBUG] currentSlideIndex:', presentation && presentation.currentSlideIndex, 'slides.length:', slides.length, 'slide:', presentation && typeof presentation.currentSlideIndex === 'number' ? slides[presentation.currentSlideIndex] : undefined);\r\n\r\n  // Robust fallback for missing/invalid presentation or currentSlideIndex\r\n  if (!presentation) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen text-xl text-red-600\">\r\n        Unable to load live presentation. You may not have access, or the presentation is not live.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let slideToShow = null;\r\n  if (\r\n    typeof presentation.currentSlideIndex === 'number' &&\r\n    slides[presentation.currentSlideIndex]\r\n  ) {\r\n    slideToShow = slides[presentation.currentSlideIndex];\r\n  } else if (slides.length > 0) {\r\n    slideToShow = slides[0];\r\n  }\r\n\r\n  console.log('[LiveViewer] Rendering main viewer UI. presentation:', presentation, 'audienceMode:', audienceMode, 'userId:', userId);\r\n\r\n  return (\r\n    <div className=\"relative w-screen h-screen bg-black overflow-hidden\">\r\n      {/* DEBUG PANEL */}\r\n      {isDev && (\r\n        <div style={{ position: 'fixed', top: 0, left: 0, background: 'rgba(255,255,255,0.95)', color: '#222', zIndex: 9999, padding: 12, fontSize: 13, maxWidth: 400, borderBottomRightRadius: 8, boxShadow: '0 2px 8px #0002' }}>\r\n          <div><b>DEBUG PANEL</b></div>\r\n          <div><b>User:</b> {currentUser?.uid}</div>\r\n          <div><b>Enrolled Courses:</b> {JSON.stringify(userProfile?.enrolledCourses)}</div>\r\n          <div><b>Presentation:</b> {presentation ? JSON.stringify({ id: presentation.id, isLive: presentation.isLive, archived: presentation.archived, currentSlideIndex: presentation.currentSlideIndex }) : 'null'}</div>\r\n        </div>\r\n      )}\r\n      {/* Username at top-right */}\r\n      <div className=\"absolute top-4 right-8 z-20 text-white text-sm bg-black/60 px-3 py-1 rounded-full shadow\">\r\n        {userId}\r\n      </div>\r\n      {/* Discussion Icon */}\r\n      <button\r\n        className=\"absolute top-4 right-24 z-30 bg-white bg-opacity-80 rounded-full p-2 shadow hover:bg-primary-100\"\r\n        title=\"Open discussion\"\r\n        onClick={() => setShowDiscussion(true)}\r\n      >\r\n        <MessageSquare className=\"w-6 h-6 text-primary-600\" />\r\n      </button>\r\n      {/* Slide content/image centered and scaled */}\r\n      <div className=\"flex items-center justify-center w-full h-full\">\r\n        {slides.length === 0 ? (\r\n          <div className=\"text-gray-400 text-2xl\">No slides found.</div>\r\n        ) : slideToShow ? (\r\n          <div className=\"w-full h-full flex flex-col items-center justify-center\">\r\n            {/* If imageUrl, show image full size, else show text */}\r\n            {slideToShow.imageUrl ? (\r\n              <img\r\n                src={slideToShow.imageUrl}\r\n                alt=\"Slide\"\r\n                className=\"object-contain w-full h-full max-h-[90vh] max-w-[90vw] rounded shadow-lg bg-white\"\r\n                style={{ background: 'white' }}\r\n              />\r\n            ) : (\r\n              <div className=\"flex items-center justify-center w-full h-full\">\r\n                <div className=\"text-white text-3xl font-semibold text-center px-8 py-4 bg-black/60 rounded-lg shadow\">\r\n                  {slideToShow.content || slideToShow.text || ''}\r\n                </div>\r\n              </div>\r\n            )}\r\n            {/* Overlay for polls/interactions (placeholder) */}\r\n            <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none z-30\">\r\n              {/* TODO: Polls/interactions overlay goes here */}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-gray-400 text-2xl\">Slide will appear here</div>\r\n        )}\r\n      </div>\r\n      {/* Discussion Overlay */}\r\n      {showDiscussion && (\r\n        <div className=\"fixed inset-0 z-40 flex items-center justify-center bg-black bg-opacity-60\">\r\n          <div className=\"absolute inset-0\" onClick={() => setShowDiscussion(false)} />\r\n          <div className=\"relative flex w-full h-full z-50\">\r\n            {/* Left: Grouping area (placeholder) */}\r\n            <div className=\"flex-1 bg-gray-100 flex flex-col items-center justify-center border-r border-gray-300\">\r\n              <div className=\"text-gray-400 text-lg\">(Grouping area placeholder)</div>\r\n            </div>\r\n            {/* Right: Chat/comments */}\r\n            <div className=\"w-[400px] max-w-full bg-white flex flex-col h-full shadow-xl\">\r\n              {/* Header */}\r\n              <div className=\"flex items-center justify-between px-4 py-3 border-b\">\r\n                <div className=\"font-semibold text-lg\">Slide Discussion</div>\r\n                <button onClick={() => setShowDiscussion(false)} className=\"text-gray-500 hover:text-primary-600 text-xl\">&times;</button>\r\n              </div>\r\n              {/* Chat panel */}\r\n              <div className=\"flex-1 overflow-y-auto p-4 space-y-3\">\r\n                {comments.length === 0 ? (\r\n                  <div className=\"text-gray-400 text-center\">No messages yet.</div>\r\n                ) : (\r\n                  comments.map((c) => {\r\n                    let likeUserId = '';\r\n                    if (audienceMode === 'enrolledUsers' && currentUser) {\r\n                      likeUserId = currentUser.uid;\r\n                    } else if (audienceMode === 'anonymous') {\r\n                      likeUserId = getAnonId();\r\n                    }\r\n                    const alreadyLiked = c.likedBy && likeUserId && c.likedBy[likeUserId];\r\n                    const likeCount = c.likedBy ? Object.keys(c.likedBy).length : 0;\r\n                    return (\r\n                      <div\r\n                        key={c.id}\r\n                        className=\"bg-gray-100 rounded px-3 py-2 flex items-center group\"\r\n                        title={c.username}\r\n                      >\r\n                        {/* Like icon and count */}\r\n                        <button\r\n                          className={`flex items-center mr-3 text-gray-500 hover:text-primary-600 focus:outline-none ${alreadyLiked ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                          onClick={() => handleLike(c)}\r\n                          tabIndex={0}\r\n                          aria-label=\"Like comment\"\r\n                          disabled={alreadyLiked}\r\n                        >\r\n                          <ThumbsUp className=\"w-5 h-5 mr-1\" />\r\n                          <span className=\"text-sm font-semibold\">{likeCount}</span>\r\n                        </button>\r\n                        {/* Comment text */}\r\n                        <span className=\"text-gray-800 text-sm\" style={{ cursor: 'pointer' }}>\r\n                          {c.text}\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })\r\n                )}\r\n              </div>\r\n              {/* Input box */}\r\n              <form className=\"flex items-center border-t px-4 py-3\" onSubmit={handleCommentSubmit}>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"flex-1 border rounded px-3 py-2 mr-2 focus:outline-none focus:border-primary-500\"\r\n                  placeholder=\"Type a comment...\"\r\n                  value={commentInput}\r\n                  onChange={e => setCommentInput(e.target.value)}\r\n                />\r\n                <button type=\"submit\" className=\"bg-primary-600 text-white px-4 py-2 rounded font-semibold disabled:opacity-50\" disabled={!commentInput.trim()}>\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* Slide number at bottom-right */}\r\n      {slides.length > 0 && presentation && typeof presentation.currentSlideIndex === 'number' && (\r\n        <div className=\"absolute bottom-6 right-8 z-20 text-white text-lg bg-black/60 px-4 py-2 rounded-full shadow\">\r\n          {presentation.currentSlideIndex + 1} / {slides.length}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LivePresentationViewer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}