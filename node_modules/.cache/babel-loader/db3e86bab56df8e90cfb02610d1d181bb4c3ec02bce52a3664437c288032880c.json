{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\pages\\\\CourseHome.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport CourseService from '../services/CourseService';\nimport PresentationService from '../services/PresentationService';\nimport PowerPointImport from '../components/presentations/PowerPointImport';\nimport ImportedPresentationPreview from '../components/presentations/ImportedPresentationPreview';\nimport { Loader, ArrowLeft, BookOpen, Calendar, Hash, User, Clock, Trash2, Upload } from 'lucide-react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { saveAs } from 'file-saver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CourseHome = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const {\n    currentUser,\n    userProfile,\n    loading\n  } = useAuth();\n  const location = useLocation();\n  const [course, setCourse] = useState(null);\n  const [loadingCourse, setLoadingCourse] = useState(true);\n  const [error, setError] = useState(null);\n  const [presentations, setPresentations] = useState([]);\n  const [newPresentationTitle, setNewPresentationTitle] = useState('');\n  const [creating, setCreating] = useState(false);\n  const [presentationsLoading, setPresentationsLoading] = useState(true);\n  const [presentationsError, setPresentationsError] = useState(null);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [importedSlides, setImportedSlides] = useState(null);\n  const [importedPresentationTitle, setImportedPresentationTitle] = useState('');\n  const [showPreview, setShowPreview] = useState(false);\n  const navigate = useNavigate();\n  const [livePresentationId, setLivePresentationId] = useState(null);\n  const [codes, setCodes] = useState([]);\n  const [codeCount, setCodeCount] = useState(5);\n  const [loadingCodes, setLoadingCodes] = useState(false);\n  const [enrolling, setEnrolling] = useState(false);\n  const [codesCollapsed, setCodesCollapsed] = useState(true);\n  const [showCopyModal, setShowCopyModal] = useState(false);\n  const [instructorCourses, setInstructorCourses] = useState([]);\n  const [selectedSourceCourse, setSelectedSourceCourse] = useState('');\n  const [sourcePresentations, setSourcePresentations] = useState([]);\n  const [selectedPresentations, setSelectedPresentations] = useState([]);\n  const [copying, setCopying] = useState(false);\n\n  // Parse ?code=XXXXX from URL\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const code = params.get('code');\n    if (code) {\n      localStorage.setItem('pendingEnrollCode', JSON.stringify({\n        courseId,\n        code\n      }));\n    }\n  }, [location.search, courseId]);\n\n  // After login, if code is present, enroll user\n  useEffect(() => {\n    const tryEnroll = async () => {\n      if (!currentUser) return;\n      const pending = localStorage.getItem('pendingEnrollCode');\n      if (pending) {\n        const {\n          courseId: pendingCourseId,\n          code\n        } = JSON.parse(pending);\n        if (pendingCourseId === courseId) {\n          setEnrolling(true);\n          try {\n            await CourseService.enrollUserWithCode(courseId, code, currentUser.uid);\n            localStorage.removeItem('pendingEnrollCode');\n            window.location.href = `/course/${courseId}`;\n          } catch (err) {\n            alert('Enrollment failed: ' + err.message);\n            localStorage.removeItem('pendingEnrollCode');\n          } finally {\n            setEnrolling(false);\n          }\n        }\n      }\n    };\n    tryEnroll();\n  }, [currentUser, courseId]);\n\n  // Load course only once on mount or when courseId changes\n  useEffect(() => {\n    const fetchCourse = async () => {\n      setLoadingCourse(true);\n      try {\n        console.log('[CourseHome] Fetching course with ID:', courseId);\n        const data = await CourseService.getCourseById(courseId);\n        setCourse(data);\n        console.log('[CourseHome] Course loaded:', data);\n      } catch (err) {\n        setError('Course not found or you do not have access.');\n        console.error('[CourseHome] Error loading course:', err);\n      } finally {\n        setLoadingCourse(false);\n      }\n    };\n    fetchCourse();\n  }, [courseId]);\n\n  // Helper: is user enrolled or instructor (use userProfile for robustness)\n  const isEnrolled = userProfile && userProfile.enrolledCourses && Array.isArray(userProfile.enrolledCourses) && userProfile.enrolledCourses.includes(courseId);\n  const isInstructor = userProfile && course && userProfile.uid === course.instructorId;\n\n  // Load presentations only after auth is ready and course is loaded\n  useEffect(() => {\n    console.log('[CourseHome][DEBUG] useEffect for presentations:', {\n      loading,\n      loadingCourse,\n      currentUser,\n      course,\n      courseId,\n      isEnrolled,\n      isInstructor\n    });\n    if (!loading && !loadingCourse && currentUser && course && (isEnrolled || isInstructor)) {\n      console.log('[CourseHome][DEBUG] Triggering fetchPresentations after course loaded and auth ready', {\n        currentUser,\n        course\n      });\n      fetchPresentations();\n    } else {\n      console.log('[CourseHome][DEBUG] Not fetching presentations yet:', {\n        loading,\n        loadingCourse,\n        currentUser,\n        course,\n        isEnrolled,\n        isInstructor\n      });\n    }\n    // eslint-disable-next-line\n  }, [loading, loadingCourse, currentUser, courseId, course, isEnrolled, isInstructor]);\n\n  // Fetch live presentation on mount and when presentations change\n  useEffect(() => {\n    const fetchLive = async () => {\n      try {\n        // Find the presentation that is marked as live\n        const livePresentation = presentations.find(p => p.isLive);\n        setLivePresentationId(livePresentation ? livePresentation.id : null);\n      } catch (err) {\n        console.error('[CourseHome] Error fetching live presentation:', err);\n        setLivePresentationId(null);\n      }\n    };\n    if (presentations.length > 0) {\n      fetchLive();\n    }\n  }, [courseId, presentations]);\n\n  // Fetch codes for this course\n  const fetchCodes = async () => {\n    setLoadingCodes(true);\n    try {\n      const codesCol = collection(db, 'courses', courseId, 'codes');\n      const snap = await getDocs(codesCol);\n      setCodes(snap.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })));\n    } catch (err) {\n      setCodes([]);\n    } finally {\n      setLoadingCodes(false);\n    }\n  };\n\n  // Generate codes\n  const handleGenerateCodes = async () => {\n    setLoadingCodes(true);\n    await CourseService.generateEnrollmentCodes(courseId, codeCount);\n    await fetchCodes();\n    setLoadingCodes(false);\n  };\n  useEffect(() => {\n    if (currentUser && course && currentUser.uid === course.instructorId) {\n      fetchCodes();\n    }\n  }, [currentUser, courseId, course]);\n\n  // Helper to download CSV of codes with user info\n  const handleDownloadCodesCSV = async () => {\n    // For each code, if used, fetch user info\n    const rows = [['Code', 'Username', 'UserId']];\n    for (const code of codes) {\n      let username = '';\n      let userId = '';\n      if (code.used && code.usedBy) {\n        try {\n          const userDoc = await getDocs(collection(db, 'users'));\n          const user = userDoc.docs.find(doc => doc.id === code.usedBy);\n          if (user) {\n            const data = user.data();\n            username = data.displayName || data.email || code.usedBy;\n            userId = code.usedBy;\n          } else {\n            username = '(unknown)';\n            userId = code.usedBy;\n          }\n        } catch (e) {\n          username = '(error)';\n          userId = code.usedBy;\n        }\n      }\n      rows.push([code.code, username, userId]);\n    }\n    // Convert to CSV\n    const csv = rows.map(r => r.map(x => `\"${x}\"`).join(',')).join('\\n');\n    const blob = new Blob([csv], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    saveAs(blob, `enrollment-codes-${courseId}.csv`);\n  };\n  const fetchPresentations = async () => {\n    setPresentationsLoading(true);\n    setPresentationsError(null);\n    try {\n      console.log('[CourseHome][DEBUG] Fetching presentations for course:', courseId, {\n        currentUser,\n        course\n      });\n      const data = await PresentationService.getPresentations(courseId);\n      setPresentations(data);\n      console.log('[CourseHome][DEBUG] Presentations loaded:', data);\n    } catch (err) {\n      setPresentationsError('Could not load presentations.');\n      console.error('[CourseHome][DEBUG] Error loading presentations:', err, {\n        currentUser,\n        course\n      });\n    } finally {\n      setPresentationsLoading(false);\n    }\n  };\n  const handleCreatePresentation = async () => {\n    if (!newPresentationTitle.trim()) return;\n    setCreating(true);\n    try {\n      console.log('[CourseHome] Creating presentation with title:', newPresentationTitle.trim());\n      const docRef = await PresentationService.createPresentation(courseId, newPresentationTitle.trim(), currentUser.uid);\n      setNewPresentationTitle('');\n      fetchPresentations();\n      console.log('[CourseHome] Presentation created successfully');\n      // Redirect to the editor for the new presentation\n      navigate(`/course/${courseId}/presentation/${docRef.id}/edit`);\n    } catch (err) {\n      alert('Failed to create presentation.');\n      console.error('[CourseHome] Error creating presentation:', err);\n    } finally {\n      setCreating(false);\n    }\n  };\n\n  // Add delete handler\n  const handleDeletePresentation = async presentationId => {\n    if (!window.confirm('Are you sure you want to delete this presentation? This action cannot be undone.')) return;\n    try {\n      await PresentationService.deletePresentation(courseId, presentationId);\n      fetchPresentations();\n    } catch (err) {\n      alert('Failed to delete presentation.');\n    }\n  };\n\n  // Add handler to set a presentation as live\n  const handleSetLive = async presentationId => {\n    await PresentationService.setLivePresentation(courseId, presentationId);\n    setLivePresentationId(presentationId);\n  };\n\n  // Handle PowerPoint import completion\n  const handleImportComplete = async (slides, fileName) => {\n    console.log('[CourseHome] Import completed:', slides);\n    setImportedSlides(slides);\n    setImportedPresentationTitle(newPresentationTitle.trim() || fileName.replace(/\\.(pptx|ppt)$/i, ''));\n    setShowImportModal(false);\n    setShowPreview(true);\n  };\n\n  // Handle edit imported presentation\n  const handleEditImported = async () => {\n    try {\n      console.log('[CourseHome] Creating presentation from imported slides');\n      const docRef = await PresentationService.createPresentation(courseId, importedPresentationTitle, currentUser.uid);\n\n      // Convert imported slides to our format and save them\n      const convertedSlides = importedSlides.map((slide, index) => {\n        if (slide.type === 'image') {\n          return {\n            type: 'image',\n            title: slide.title,\n            imageUrl: slide.imageUrl,\n            order: index\n          };\n        } else if (slide.type === 'content') {\n          return {\n            type: 'content',\n            title: slide.title,\n            elements: slide.elements,\n            order: index\n          };\n        }\n        return slide;\n      });\n\n      // Save slides to the new presentation\n      for (const slide of convertedSlides) {\n        await PresentationService.addSlide(courseId, docRef.id, slide);\n      }\n      setShowPreview(false);\n      setImportedSlides(null);\n      fetchPresentations();\n\n      // Navigate to the editor\n      navigate(`/course/${courseId}/presentation/${docRef.id}/edit`);\n    } catch (error) {\n      console.error('[CourseHome] Error creating presentation from import:', error);\n      alert('Failed to create presentation from imported slides.');\n    }\n  };\n\n  // milestone2: Show all presentations to both instructors and students\n  const visiblePresentations = presentations;\n  const openCopyModal = async () => {\n    setShowCopyModal(true);\n    // Fetch instructor's courses except current\n    const all = await CourseService.getCoursesByInstructor(currentUser.uid);\n    setInstructorCourses(all.filter(c => c.id !== courseId));\n    setSelectedSourceCourse('');\n    setSourcePresentations([]);\n    setSelectedPresentations([]);\n  };\n  const closeCopyModal = () => {\n    setShowCopyModal(false);\n    setInstructorCourses([]);\n    setSelectedSourceCourse('');\n    setSourcePresentations([]);\n    setSelectedPresentations([]);\n  };\n  const handleSourceCourseChange = async e => {\n    const val = e.target.value;\n    setSelectedSourceCourse(val);\n    setSelectedPresentations([]);\n    if (val) {\n      const pres = await PresentationService.getPresentations(val);\n      setSourcePresentations(pres);\n    } else {\n      setSourcePresentations([]);\n    }\n  };\n  const handleCopyPresentations = async () => {\n    setCopying(true);\n    for (const pres of sourcePresentations.filter(p => selectedPresentations.includes(p.id))) {\n      // Copy presentation doc (excluding responses/comments)\n      const newPresRef = await PresentationService.createPresentation(courseId, pres.title, currentUser.uid);\n      // Fetch slides from source\n      const slidesCol = collection(db, 'courses', selectedSourceCourse, 'presentations', pres.id, 'slides');\n      const slidesSnap = await getDocs(slidesCol);\n      for (const slideDoc of slidesSnap.docs) {\n        const slideData = slideDoc.data();\n        // Remove any fields related to responses/comments\n        const {\n          responses,\n          comments,\n          ...cleanSlide\n        } = slideData;\n        await PresentationService.addSlide(courseId, newPresRef.id, cleanSlide);\n      }\n    }\n    setCopying(false);\n    closeCopyModal();\n    fetchPresentations();\n  };\n  if (loading || loadingCourse) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Loader, {\n        className: \"animate-spin h-8 w-8 text-primary-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), enrolling && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-4 text-lg\",\n        children: \"Enrolling in course...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 text-lg font-semibold mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/my-courses\",\n        className: \"btn-secondary\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          className: \"h-4 w-4 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), \" Back to My Courses\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this);\n  }\n  if (!loading && !enrolling && !isEnrolled && !isInstructor) {\n    // Not enrolled and not instructor\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-8 mb-8 max-w-md w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-2\",\n          children: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: course.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              className: \"h-4 w-4 mr-2 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"capitalize\",\n              children: [course.semester, \" \", course.year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(Hash, {\n              className: \"h-4 w-4 mr-2 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Section \", course.section]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(User, {\n              className: \"h-4 w-4 mr-2 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: course.instructorName || 'Instructor'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              className: \"h-4 w-4 mr-2 text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Created \", course.createdAt && course.createdAt.toDate ? course.createdAt.toDate().toLocaleDateString() : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EnrollForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/courses\",\n        className: \"btn-secondary mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          className: \"h-4 w-4 mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this), \" Back to Courses\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-3xl mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/my-courses\",\n          className: \"btn-secondary mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), \" Back\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900\",\n          children: course.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), livePresentationId && isEnrolled && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 p-3 bg-green-50 border border-green-300 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold text-green-700\",\n          children: \"Live Presentation Link: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/course/${courseId}/live`,\n          className: \"btn-primary ml-2\",\n          children: \"Connect to Live Presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-8 mb-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-800 mb-2\",\n            children: \"Course Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600 mb-4\",\n            children: course.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-sm text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"h-4 w-4 mr-2 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"capitalize\",\n                children: [course.semester, \" \", course.year]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-sm text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(Hash, {\n                className: \"h-4 w-4 mr-2 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Section \", course.section]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-sm text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(User, {\n                className: \"h-4 w-4 mr-2 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: course.instructorName || 'Instructor'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center text-sm text-gray-600\",\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                className: \"h-4 w-4 mr-2 text-gray-400\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 456,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Created \", course.createdAt && course.createdAt.toDate ? course.createdAt.toDate().toLocaleDateString() : '']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), currentUser && course && currentUser.uid === course.instructorId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold text-gray-800\",\n            children: \"Enrollment Codes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"text-sm text-primary-600 underline focus:outline-none\",\n            onClick: () => setCodesCollapsed(c => !c),\n            \"aria-expanded\": !codesCollapsed,\n            \"aria-controls\": \"enrollment-codes-section\",\n            children: codesCollapsed ? 'Expand' : 'Collapse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this), !codesCollapsed && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"enrollment-codes-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              min: 1,\n              max: 50,\n              className: \"input-field w-24 mr-2\",\n              value: codeCount,\n              onChange: e => setCodeCount(Number(e.target.value)),\n              disabled: loadingCodes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-primary\",\n              onClick: handleGenerateCodes,\n              disabled: loadingCodes || codeCount < 1,\n              children: \"Generate Codes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-secondary ml-2\",\n              onClick: handleDownloadCodesCSV,\n              disabled: codes.length === 0,\n              children: \"Download CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 17\n          }, this), loadingCodes ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading codes...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"space-y-1\",\n            children: codes.map(code => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-center justify-between border px-3 py-1 rounded bg-gray-50\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-mono text-lg\",\n                children: code.code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `ml-4 text-xs px-2 py-1 rounded ${code.used ? 'bg-red-200 text-red-700' : 'bg-green-200 text-green-700'}`,\n                children: code.used ? 'Used' : 'Unused'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 25\n              }, this)]\n            }, code.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-lg p-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-800 mb-4\",\n          children: \"Presentations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), isInstructor && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-secondary mb-4\",\n          onClick: openCopyModal,\n          children: \"Copy from Another Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this), !isInstructor && visiblePresentations.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500 mb-4\",\n          children: \"No archived presentations are available yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center mb-4 space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-field flex-1\",\n            placeholder: \"Week 1: Introduction\",\n            value: newPresentationTitle,\n            onChange: e => setNewPresentationTitle(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter') handleCreatePresentation();\n            },\n            disabled: creating || !isInstructor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: handleCreatePresentation,\n            disabled: creating || !newPresentationTitle.trim() || !isInstructor,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-secondary flex items-center\",\n            onClick: () => setShowImportModal(true),\n            disabled: !isInstructor,\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), \"Import PowerPoint\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"min-w-full bg-white border border-gray-200 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-4 py-2 border-b text-left\",\n                  children: \"#\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-4 py-2 border-b text-left\",\n                  children: \"Presentations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-4 py-2 border-b text-left\",\n                  children: \"Slides\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-4 py-2 border-b text-left\",\n                  children: \"Created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  className: \"px-4 py-2 border-b text-left\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: presentationsLoading ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 5,\n                  className: \"text-center py-4\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this) : presentationsError ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 5,\n                  className: \"text-center text-red-600 py-4\",\n                  children: presentationsError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 568,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 19\n              }, this) : visiblePresentations.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 5,\n                  className: \"text-center py-4\",\n                  children: \"No presentations yet.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this) : visiblePresentations.map((p, idx) => {\n                const isLive = livePresentationId === p.id;\n                const canView = isInstructor || p.archived === true || isLive;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  className: canView ? 'hover:bg-gray-50 cursor-pointer' : 'bg-gray-100 text-gray-400 cursor-not-allowed',\n                  onClick: () => {\n                    if (canView) navigate(`/course/${courseId}/presentation/${p.id}/edit`);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-2 border-b\",\n                    children: idx + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-2 border-b\",\n                    children: p.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 588,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-2 border-b\",\n                    children: p.slideCount || 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 589,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-2 border-b\",\n                    children: p.createdAt && p.createdAt.toDate ? p.createdAt.toDate().toLocaleDateString() : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 590,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"px-4 py-2 border-b\",\n                    children: isInstructor ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: e => {\n                          e.stopPropagation();\n                          handleSetLive(p.id);\n                        },\n                        className: `ml-2 px-2 py-1 rounded text-xs font-semibold ${isLive ? 'bg-green-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-green-100'}`,\n                        title: \"Set as live presentation\",\n                        children: isLive ? 'Live' : 'Go Live'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 594,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"text-red-600 hover:text-red-800\",\n                        title: \"Delete presentation\",\n                        onClick: e => {\n                          e.stopPropagation();\n                          handleDeletePresentation(p.id);\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Trash2, {\n                          className: \"h-5 w-5\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 606,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 601,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs text-gray-400\",\n                      children: \"View only\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 610,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 591,\n                    columnNumber: 25\n                  }, this)]\n                }, p.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this), showImportModal && /*#__PURE__*/_jsxDEV(PowerPointImport, {\n      courseId: courseId,\n      onImportComplete: handleImportComplete,\n      onClose: () => setShowImportModal(false),\n      presentationTitle: newPresentationTitle,\n      ownerId: currentUser && currentUser.uid,\n      onImportRedirect: () => {\n        setShowImportModal(false);\n        fetchPresentations();\n        navigate(`/course/${courseId}`);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 9\n    }, this), showPreview && importedSlides && /*#__PURE__*/_jsxDEV(ImportedPresentationPreview, {\n      slides: importedSlides,\n      presentationTitle: importedPresentationTitle,\n      onEdit: handleEditImported,\n      onClose: () => {\n        setShowPreview(false);\n        setImportedSlides(null);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 9\n    }, this), showCopyModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded shadow-lg p-6 w-full max-w-lg relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"absolute top-2 right-2 text-gray-500 hover:text-red-600 text-2xl font-bold\",\n          onClick: closeCopyModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-4\",\n          children: \"Copy Slide Deck from Another Course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-1 font-medium\",\n            children: \"Select a course:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"input-field w-full\",\n            value: selectedSourceCourse,\n            onChange: handleSourceCourseChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Choose a course --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 17\n            }, this), instructorCourses.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: c.id,\n              children: c.name\n            }, c.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), sourcePresentations.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block mb-1 font-medium\",\n            children: \"Select slide decks to copy:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-h-40 overflow-y-auto border rounded p-2\",\n            children: sourcePresentations.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center mb-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"mr-2\",\n                checked: selectedPresentations.includes(p.id),\n                onChange: e => {\n                  if (e.target.checked) setSelectedPresentations(prev => [...prev, p.id]);else setSelectedPresentations(prev => prev.filter(id => id !== p.id));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 673,\n                columnNumber: 23\n              }, this), p.title]\n            }, p.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-secondary\",\n            onClick: closeCopyModal,\n            disabled: copying,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-primary\",\n            onClick: handleCopyPresentations,\n            disabled: copying || selectedPresentations.length === 0,\n            children: copying ? 'Copying...' : 'Copy Selected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 5\n  }, this);\n};\n_s(CourseHome, \"SD+dWFyoFLStEjfw80gayu1aA/k=\", false, function () {\n  return [useParams, useAuth, useLocation, useNavigate];\n});\n_c = CourseHome;\nfunction EnrollForm() {\n  _s2();\n  const {\n    courseId\n  } = useParams();\n  const {\n    currentUser\n  } = useAuth();\n  const navigate = useNavigate();\n  const [code, setCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleEnroll = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    try {\n      await CourseService.enrollUserWithCode(courseId, code, currentUser.uid);\n      setSuccess(true);\n      window.location.href = `/course/${courseId}`;\n    } catch (err) {\n      setError(err.message || 'Enrollment failed.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleEnroll,\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-sm font-medium text-gray-700 mb-1\",\n      children: \"Enter Enrollment Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input-field flex-1\",\n        value: code,\n        onChange: e => setCode(e.target.value),\n        placeholder: \"Enrollment code\",\n        required: true,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-primary\",\n        disabled: loading || !code.trim(),\n        children: loading ? 'Enrolling...' : 'Enroll'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 mt-2 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-green-600 mt-2 text-sm\",\n      children: \"Enrolled successfully! Reloading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 727,\n    columnNumber: 5\n  }, this);\n}\n_s2(EnrollForm, \"K+JvqjUd6rNb73UN6aecqUlpiB4=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c2 = EnrollForm;\nexport default CourseHome;\nvar _c, _c2;\n$RefreshReg$(_c, \"CourseHome\");\n$RefreshReg$(_c2, \"EnrollForm\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useNavigate","useLocation","useAuth","CourseService","PresentationService","PowerPointImport","ImportedPresentationPreview","Loader","ArrowLeft","BookOpen","Calendar","Hash","User","Clock","Trash2","Upload","collection","getDocs","db","saveAs","jsxDEV","_jsxDEV","Fragment","_Fragment","CourseHome","_s","courseId","currentUser","userProfile","loading","location","course","setCourse","loadingCourse","setLoadingCourse","error","setError","presentations","setPresentations","newPresentationTitle","setNewPresentationTitle","creating","setCreating","presentationsLoading","setPresentationsLoading","presentationsError","setPresentationsError","showImportModal","setShowImportModal","importedSlides","setImportedSlides","importedPresentationTitle","setImportedPresentationTitle","showPreview","setShowPreview","navigate","livePresentationId","setLivePresentationId","codes","setCodes","codeCount","setCodeCount","loadingCodes","setLoadingCodes","enrolling","setEnrolling","codesCollapsed","setCodesCollapsed","showCopyModal","setShowCopyModal","instructorCourses","setInstructorCourses","selectedSourceCourse","setSelectedSourceCourse","sourcePresentations","setSourcePresentations","selectedPresentations","setSelectedPresentations","copying","setCopying","params","URLSearchParams","search","code","get","localStorage","setItem","JSON","stringify","tryEnroll","pending","getItem","pendingCourseId","parse","enrollUserWithCode","uid","removeItem","window","href","err","alert","message","fetchCourse","console","log","data","getCourseById","isEnrolled","enrolledCourses","Array","isArray","includes","isInstructor","instructorId","fetchPresentations","fetchLive","livePresentation","find","p","isLive","id","length","fetchCodes","codesCol","snap","docs","map","doc","handleGenerateCodes","generateEnrollmentCodes","handleDownloadCodesCSV","rows","username","userId","used","usedBy","userDoc","user","displayName","email","e","push","csv","r","x","join","blob","Blob","type","getPresentations","handleCreatePresentation","trim","docRef","createPresentation","handleDeletePresentation","presentationId","confirm","deletePresentation","handleSetLive","setLivePresentation","handleImportComplete","slides","fileName","replace","handleEditImported","convertedSlides","slide","index","title","imageUrl","order","elements","addSlide","visiblePresentations","openCopyModal","all","getCoursesByInstructor","filter","c","closeCopyModal","handleSourceCourseChange","val","target","value","pres","handleCopyPresentations","newPresRef","slidesCol","slidesSnap","slideDoc","slideData","responses","comments","cleanSlide","className","children","_jsxFileName","lineNumber","columnNumber","to","name","description","semester","year","section","instructorName","createdAt","toDate","toLocaleDateString","EnrollForm","onClick","min","max","onChange","Number","disabled","placeholder","onKeyDown","key","colSpan","idx","canView","archived","slideCount","stopPropagation","onImportComplete","onClose","presentationTitle","ownerId","onImportRedirect","onEdit","checked","prev","_c","_s2","setCode","setLoading","success","setSuccess","handleEnroll","preventDefault","onSubmit","required","_c2","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/pages/CourseHome.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport CourseService from '../services/CourseService';\nimport PresentationService from '../services/PresentationService';\nimport PowerPointImport from '../components/presentations/PowerPointImport';\nimport ImportedPresentationPreview from '../components/presentations/ImportedPresentationPreview';\nimport { Loader, ArrowLeft, BookOpen, Calendar, Hash, User, Clock, Trash2, Upload } from 'lucide-react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase/config';\nimport { saveAs } from 'file-saver';\n\nconst CourseHome = () => {\n  const { courseId } = useParams();\n  const { currentUser, userProfile, loading } = useAuth();\n  const location = useLocation();\n  const [course, setCourse] = useState(null);\n  const [loadingCourse, setLoadingCourse] = useState(true);\n  const [error, setError] = useState(null);\n  const [presentations, setPresentations] = useState([]);\n  const [newPresentationTitle, setNewPresentationTitle] = useState('');\n  const [creating, setCreating] = useState(false);\n  const [presentationsLoading, setPresentationsLoading] = useState(true);\n  const [presentationsError, setPresentationsError] = useState(null);\n  const [showImportModal, setShowImportModal] = useState(false);\n  const [importedSlides, setImportedSlides] = useState(null);\n  const [importedPresentationTitle, setImportedPresentationTitle] = useState('');\n  const [showPreview, setShowPreview] = useState(false);\n  const navigate = useNavigate();\n  const [livePresentationId, setLivePresentationId] = useState(null);\n  const [codes, setCodes] = useState([]);\n  const [codeCount, setCodeCount] = useState(5);\n  const [loadingCodes, setLoadingCodes] = useState(false);\n  const [enrolling, setEnrolling] = useState(false);\n  const [codesCollapsed, setCodesCollapsed] = useState(true);\n  const [showCopyModal, setShowCopyModal] = useState(false);\n  const [instructorCourses, setInstructorCourses] = useState([]);\n  const [selectedSourceCourse, setSelectedSourceCourse] = useState('');\n  const [sourcePresentations, setSourcePresentations] = useState([]);\n  const [selectedPresentations, setSelectedPresentations] = useState([]);\n  const [copying, setCopying] = useState(false);\n\n  // Parse ?code=XXXXX from URL\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    const code = params.get('code');\n    if (code) {\n      localStorage.setItem('pendingEnrollCode', JSON.stringify({ courseId, code }));\n    }\n  }, [location.search, courseId]);\n\n  // After login, if code is present, enroll user\n  useEffect(() => {\n    const tryEnroll = async () => {\n      if (!currentUser) return;\n      const pending = localStorage.getItem('pendingEnrollCode');\n      if (pending) {\n        const { courseId: pendingCourseId, code } = JSON.parse(pending);\n        if (pendingCourseId === courseId) {\n          setEnrolling(true);\n          try {\n            await CourseService.enrollUserWithCode(courseId, code, currentUser.uid);\n            localStorage.removeItem('pendingEnrollCode');\n            window.location.href = `/course/${courseId}`;\n          } catch (err) {\n            alert('Enrollment failed: ' + err.message);\n            localStorage.removeItem('pendingEnrollCode');\n          } finally {\n            setEnrolling(false);\n          }\n        }\n      }\n    };\n    tryEnroll();\n  }, [currentUser, courseId]);\n\n  // Load course only once on mount or when courseId changes\n  useEffect(() => {\n    const fetchCourse = async () => {\n      setLoadingCourse(true);\n      try {\n        console.log('[CourseHome] Fetching course with ID:', courseId);\n        const data = await CourseService.getCourseById(courseId);\n        setCourse(data);\n        console.log('[CourseHome] Course loaded:', data);\n      } catch (err) {\n        setError('Course not found or you do not have access.');\n        console.error('[CourseHome] Error loading course:', err);\n      } finally {\n        setLoadingCourse(false);\n      }\n    };\n    fetchCourse();\n  }, [courseId]);\n\n  // Helper: is user enrolled or instructor (use userProfile for robustness)\n  const isEnrolled = userProfile && userProfile.enrolledCourses && Array.isArray(userProfile.enrolledCourses) && userProfile.enrolledCourses.includes(courseId);\n  const isInstructor = userProfile && course && userProfile.uid === course.instructorId;\n\n  // Load presentations only after auth is ready and course is loaded\n  useEffect(() => {\n    console.log('[CourseHome][DEBUG] useEffect for presentations:', {\n      loading,\n      loadingCourse,\n      currentUser,\n      course,\n      courseId,\n      isEnrolled,\n      isInstructor\n    });\n    if (!loading && !loadingCourse && currentUser && course && (isEnrolled || isInstructor)) {\n      console.log('[CourseHome][DEBUG] Triggering fetchPresentations after course loaded and auth ready', {\n        currentUser,\n        course\n      });\n      fetchPresentations();\n    } else {\n      console.log('[CourseHome][DEBUG] Not fetching presentations yet:', {\n        loading,\n        loadingCourse,\n        currentUser,\n        course,\n        isEnrolled,\n        isInstructor\n      });\n    }\n    // eslint-disable-next-line\n  }, [loading, loadingCourse, currentUser, courseId, course, isEnrolled, isInstructor]);\n\n  // Fetch live presentation on mount and when presentations change\n  useEffect(() => {\n    const fetchLive = async () => {\n      try {\n        // Find the presentation that is marked as live\n        const livePresentation = presentations.find(p => p.isLive);\n        setLivePresentationId(livePresentation ? livePresentation.id : null);\n      } catch (err) {\n        console.error('[CourseHome] Error fetching live presentation:', err);\n        setLivePresentationId(null);\n      }\n    };\n    if (presentations.length > 0) {\n      fetchLive();\n    }\n  }, [courseId, presentations]);\n\n  // Fetch codes for this course\n  const fetchCodes = async () => {\n    setLoadingCodes(true);\n    try {\n      const codesCol = collection(db, 'courses', courseId, 'codes');\n      const snap = await getDocs(codesCol);\n      setCodes(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n    } catch (err) {\n      setCodes([]);\n    } finally {\n      setLoadingCodes(false);\n    }\n  };\n\n  // Generate codes\n  const handleGenerateCodes = async () => {\n    setLoadingCodes(true);\n    await CourseService.generateEnrollmentCodes(courseId, codeCount);\n    await fetchCodes();\n    setLoadingCodes(false);\n  };\n\n  useEffect(() => {\n    if (currentUser && course && currentUser.uid === course.instructorId) {\n      fetchCodes();\n    }\n  }, [currentUser, courseId, course]);\n\n  // Helper to download CSV of codes with user info\n  const handleDownloadCodesCSV = async () => {\n    // For each code, if used, fetch user info\n    const rows = [['Code', 'Username', 'UserId']];\n    for (const code of codes) {\n      let username = '';\n      let userId = '';\n      if (code.used && code.usedBy) {\n        try {\n          const userDoc = await getDocs(collection(db, 'users'));\n          const user = userDoc.docs.find(doc => doc.id === code.usedBy);\n          if (user) {\n            const data = user.data();\n            username = data.displayName || data.email || code.usedBy;\n            userId = code.usedBy;\n          } else {\n            username = '(unknown)';\n            userId = code.usedBy;\n          }\n        } catch (e) {\n          username = '(error)';\n          userId = code.usedBy;\n        }\n      }\n      rows.push([code.code, username, userId]);\n    }\n    // Convert to CSV\n    const csv = rows.map(r => r.map(x => `\"${x}\"`).join(',')).join('\\n');\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    saveAs(blob, `enrollment-codes-${courseId}.csv`);\n  };\n\n  const fetchPresentations = async () => {\n    setPresentationsLoading(true);\n    setPresentationsError(null);\n    try {\n      console.log('[CourseHome][DEBUG] Fetching presentations for course:', courseId, {\n        currentUser,\n        course\n      });\n      const data = await PresentationService.getPresentations(courseId);\n      setPresentations(data);\n      console.log('[CourseHome][DEBUG] Presentations loaded:', data);\n    } catch (err) {\n      setPresentationsError('Could not load presentations.');\n      console.error('[CourseHome][DEBUG] Error loading presentations:', err, {\n        currentUser,\n        course\n      });\n    } finally {\n      setPresentationsLoading(false);\n    }\n  };\n\n  const handleCreatePresentation = async () => {\n    if (!newPresentationTitle.trim()) return;\n    setCreating(true);\n    try {\n      console.log('[CourseHome] Creating presentation with title:', newPresentationTitle.trim());\n      const docRef = await PresentationService.createPresentation(courseId, newPresentationTitle.trim(), currentUser.uid);\n      setNewPresentationTitle('');\n      fetchPresentations();\n      console.log('[CourseHome] Presentation created successfully');\n      // Redirect to the editor for the new presentation\n      navigate(`/course/${courseId}/presentation/${docRef.id}/edit`);\n    } catch (err) {\n      alert('Failed to create presentation.');\n      console.error('[CourseHome] Error creating presentation:', err);\n    } finally {\n      setCreating(false);\n    }\n  };\n\n  // Add delete handler\n  const handleDeletePresentation = async (presentationId) => {\n    if (!window.confirm('Are you sure you want to delete this presentation? This action cannot be undone.')) return;\n    try {\n      await PresentationService.deletePresentation(courseId, presentationId);\n      fetchPresentations();\n    } catch (err) {\n      alert('Failed to delete presentation.');\n    }\n  };\n\n  // Add handler to set a presentation as live\n  const handleSetLive = async (presentationId) => {\n    await PresentationService.setLivePresentation(courseId, presentationId);\n    setLivePresentationId(presentationId);\n  };\n\n  // Handle PowerPoint import completion\n  const handleImportComplete = async (slides, fileName) => {\n    console.log('[CourseHome] Import completed:', slides);\n    setImportedSlides(slides);\n    setImportedPresentationTitle(newPresentationTitle.trim() || fileName.replace(/\\.(pptx|ppt)$/i, ''));\n    setShowImportModal(false);\n    setShowPreview(true);\n  };\n\n  // Handle edit imported presentation\n  const handleEditImported = async () => {\n    try {\n      console.log('[CourseHome] Creating presentation from imported slides');\n      const docRef = await PresentationService.createPresentation(courseId, importedPresentationTitle, currentUser.uid);\n      \n      // Convert imported slides to our format and save them\n      const convertedSlides = importedSlides.map((slide, index) => {\n        if (slide.type === 'image') {\n          return {\n            type: 'image',\n            title: slide.title,\n            imageUrl: slide.imageUrl,\n            order: index\n          };\n        } else if (slide.type === 'content') {\n          return {\n            type: 'content',\n            title: slide.title,\n            elements: slide.elements,\n            order: index\n          };\n        }\n        return slide;\n      });\n\n      // Save slides to the new presentation\n      for (const slide of convertedSlides) {\n        await PresentationService.addSlide(courseId, docRef.id, slide);\n      }\n\n      setShowPreview(false);\n      setImportedSlides(null);\n      fetchPresentations();\n      \n      // Navigate to the editor\n      navigate(`/course/${courseId}/presentation/${docRef.id}/edit`);\n      \n    } catch (error) {\n      console.error('[CourseHome] Error creating presentation from import:', error);\n      alert('Failed to create presentation from imported slides.');\n    }\n  };\n\n  // milestone2: Show all presentations to both instructors and students\n  const visiblePresentations = presentations;\n\n  const openCopyModal = async () => {\n    setShowCopyModal(true);\n    // Fetch instructor's courses except current\n    const all = await CourseService.getCoursesByInstructor(currentUser.uid);\n    setInstructorCourses(all.filter(c => c.id !== courseId));\n    setSelectedSourceCourse('');\n    setSourcePresentations([]);\n    setSelectedPresentations([]);\n  };\n  const closeCopyModal = () => {\n    setShowCopyModal(false);\n    setInstructorCourses([]);\n    setSelectedSourceCourse('');\n    setSourcePresentations([]);\n    setSelectedPresentations([]);\n  };\n  const handleSourceCourseChange = async (e) => {\n    const val = e.target.value;\n    setSelectedSourceCourse(val);\n    setSelectedPresentations([]);\n    if (val) {\n      const pres = await PresentationService.getPresentations(val);\n      setSourcePresentations(pres);\n    } else {\n      setSourcePresentations([]);\n    }\n  };\n  const handleCopyPresentations = async () => {\n    setCopying(true);\n    for (const pres of sourcePresentations.filter(p => selectedPresentations.includes(p.id))) {\n      // Copy presentation doc (excluding responses/comments)\n      const newPresRef = await PresentationService.createPresentation(courseId, pres.title, currentUser.uid);\n      // Fetch slides from source\n      const slidesCol = collection(db, 'courses', selectedSourceCourse, 'presentations', pres.id, 'slides');\n      const slidesSnap = await getDocs(slidesCol);\n      for (const slideDoc of slidesSnap.docs) {\n        const slideData = slideDoc.data();\n        // Remove any fields related to responses/comments\n        const { responses, comments, ...cleanSlide } = slideData;\n        await PresentationService.addSlide(courseId, newPresRef.id, cleanSlide);\n      }\n    }\n    setCopying(false);\n    closeCopyModal();\n    fetchPresentations();\n  };\n\n  if (loading || loadingCourse) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <Loader className=\"animate-spin h-8 w-8 text-primary-600\" />\n        {enrolling && <div className=\"ml-4 text-lg\">Enrolling in course...</div>}\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen\">\n        <p className=\"text-red-600 text-lg font-semibold mb-4\">{error}</p>\n        <Link to=\"/my-courses\" className=\"btn-secondary\">\n          <ArrowLeft className=\"h-4 w-4 mr-2\" /> Back to My Courses\n        </Link>\n      </div>\n    );\n  }\n\n  if (!loading && !enrolling && !isEnrolled && !isInstructor) {\n    // Not enrolled and not instructor\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen\">\n        <div className=\"bg-white rounded-lg shadow-lg p-8 mb-8 max-w-md w-full\">\n          <h1 className=\"text-2xl font-bold mb-2\">{course.name}</h1>\n          <p className=\"text-gray-600 mb-4\">{course.description}</p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n            <div className=\"flex items-center text-sm text-gray-600\">\n              <Calendar className=\"h-4 w-4 mr-2 text-gray-400\" />\n              <span className=\"capitalize\">{course.semester} {course.year}</span>\n            </div>\n            <div className=\"flex items-center text-sm text-gray-600\">\n              <Hash className=\"h-4 w-4 mr-2 text-gray-400\" />\n              <span>Section {course.section}</span>\n            </div>\n            <div className=\"flex items-center text-sm text-gray-600\">\n              <User className=\"h-4 w-4 mr-2 text-gray-400\" />\n              <span>{course.instructorName || 'Instructor'}</span>\n            </div>\n            <div className=\"flex items-center text-sm text-gray-600\">\n              <Clock className=\"h-4 w-4 mr-2 text-gray-400\" />\n              <span>Created {course.createdAt && course.createdAt.toDate ? course.createdAt.toDate().toLocaleDateString() : ''}</span>\n            </div>\n          </div>\n          {/* Only show EnrollForm if not enrolled and not instructor */}\n          <EnrollForm />\n        </div>\n        <Link to=\"/courses\" className=\"btn-secondary mt-4\">\n          <ArrowLeft className=\"h-4 w-4 mr-2\" /> Back to Courses\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 py-8\">\n      <div className=\"max-w-3xl mx-auto px-4\">\n        <div className=\"mb-8 flex items-center\">\n          <Link to=\"/my-courses\" className=\"btn-secondary mr-4\">\n            <ArrowLeft className=\"h-4 w-4 mr-2\" /> Back\n          </Link>\n          <h1 className=\"text-3xl font-bold text-gray-900\">{course.name}</h1>\n        </div>\n        {livePresentationId && isEnrolled && (\n          <div className=\"mb-4 p-3 bg-green-50 border border-green-300 rounded\">\n            <span className=\"font-semibold text-green-700\">Live Presentation Link: </span>\n            <Link to={`/course/${courseId}/live`} className=\"btn-primary ml-2\">Connect to Live Presentation</Link>\n          </div>\n        )}\n        <div className=\"bg-white rounded-lg shadow-lg p-8 mb-8\">\n          <div className=\"mb-4\">\n            <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Course Details</h2>\n            <p className=\"text-gray-600 mb-4\">{course.description}</p>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"flex items-center text-sm text-gray-600\">\n                <Calendar className=\"h-4 w-4 mr-2 text-gray-400\" />\n                <span className=\"capitalize\">{course.semester} {course.year}</span>\n              </div>\n              <div className=\"flex items-center text-sm text-gray-600\">\n                <Hash className=\"h-4 w-4 mr-2 text-gray-400\" />\n                <span>Section {course.section}</span>\n              </div>\n              <div className=\"flex items-center text-sm text-gray-600\">\n                <User className=\"h-4 w-4 mr-2 text-gray-400\" />\n                <span>{course.instructorName || 'Instructor'}</span>\n              </div>\n              <div className=\"flex items-center text-sm text-gray-600\">\n                <Clock className=\"h-4 w-4 mr-2 text-gray-400\" />\n                <span>Created {course.createdAt && course.createdAt.toDate ? course.createdAt.toDate().toLocaleDateString() : ''}</span>\n              </div>\n            </div>\n          </div>\n          {/* Add more management features here (slides, polls, students, etc.) */}\n        </div>\n        {/* Instructor: Enrollment Codes Section */}\n        {currentUser && course && currentUser.uid === course.instructorId && (\n          <div className=\"mb-8\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <h2 className=\"text-xl font-semibold text-gray-800\">Enrollment Codes</h2>\n              <button\n                className=\"text-sm text-primary-600 underline focus:outline-none\"\n                onClick={() => setCodesCollapsed(c => !c)}\n                aria-expanded={!codesCollapsed}\n                aria-controls=\"enrollment-codes-section\"\n              >\n                {codesCollapsed ? 'Expand' : 'Collapse'}\n              </button>\n            </div>\n            {!codesCollapsed && (\n              <div id=\"enrollment-codes-section\">\n                <div className=\"flex items-center mb-2\">\n                  <input\n                    type=\"number\"\n                    min={1}\n                    max={50}\n                    className=\"input-field w-24 mr-2\"\n                    value={codeCount}\n                    onChange={e => setCodeCount(Number(e.target.value))}\n                    disabled={loadingCodes}\n                  />\n                  <button\n                    className=\"btn-primary\"\n                    onClick={handleGenerateCodes}\n                    disabled={loadingCodes || codeCount < 1}\n                  >Generate Codes</button>\n                  <button\n                    className=\"btn-secondary ml-2\"\n                    onClick={handleDownloadCodesCSV}\n                    disabled={codes.length === 0}\n                  >Download CSV</button>\n                </div>\n                {loadingCodes ? (\n                  <div>Loading codes...</div>\n                ) : (\n                  <ul className=\"space-y-1\">\n                    {codes.map(code => (\n                      <li key={code.id} className=\"flex items-center justify-between border px-3 py-1 rounded bg-gray-50\">\n                        <span className=\"font-mono text-lg\">{code.code}</span>\n                        <span className={`ml-4 text-xs px-2 py-1 rounded ${code.used ? 'bg-red-200 text-red-700' : 'bg-green-200 text-green-700'}`}>{code.used ? 'Used' : 'Unused'}</span>\n                      </li>\n                    ))}\n                  </ul>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n        {/* Presentations Section */}\n        <div className=\"bg-white rounded-lg shadow-lg p-8\">\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-4\">Presentations</h2>\n          {isInstructor && (\n            <button className=\"btn-secondary mb-4\" onClick={openCopyModal}>\n              Copy from Another Course\n            </button>\n          )}\n          {!isInstructor && visiblePresentations.length === 0 && (\n            <div className=\"text-gray-500 mb-4\">No archived presentations are available yet.</div>\n          )}\n          <div className=\"flex items-center mb-4 space-x-2\">\n            <input\n              type=\"text\"\n              className=\"input-field flex-1\"\n              placeholder=\"Week 1: Introduction\"\n              value={newPresentationTitle}\n              onChange={e => setNewPresentationTitle(e.target.value)}\n              onKeyDown={e => { if (e.key === 'Enter') handleCreatePresentation(); }}\n              disabled={creating || !isInstructor}\n            />\n            <button\n              className=\"btn-primary\"\n              onClick={handleCreatePresentation}\n              disabled={creating || !newPresentationTitle.trim() || !isInstructor}\n            >\n              Create\n            </button>\n            <button\n              className=\"btn-secondary flex items-center\"\n              onClick={() => setShowImportModal(true)}\n              disabled={!isInstructor}\n            >\n              <Upload className=\"h-4 w-4 mr-2\" />\n              Import PowerPoint\n            </button>\n          </div>\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full bg-white border border-gray-200 rounded\">\n              <thead>\n                <tr>\n                  <th className=\"px-4 py-2 border-b text-left\">#</th>\n                  <th className=\"px-4 py-2 border-b text-left\">Presentations</th>\n                  <th className=\"px-4 py-2 border-b text-left\">Slides</th>\n                  <th className=\"px-4 py-2 border-b text-left\">Created</th>\n                  <th className=\"px-4 py-2 border-b text-left\">Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {presentationsLoading ? (\n                  <tr><td colSpan={5} className=\"text-center py-4\">Loading...</td></tr>\n                ) : presentationsError ? (\n                  <tr><td colSpan={5} className=\"text-center text-red-600 py-4\">{presentationsError}</td></tr>\n                ) : visiblePresentations.length === 0 ? (\n                  <tr><td colSpan={5} className=\"text-center py-4\">No presentations yet.</td></tr>\n                ) : (\n                  visiblePresentations.map((p, idx) => {\n                    const isLive = livePresentationId === p.id;\n                    const canView = isInstructor || p.archived === true || isLive;\n                    return (\n                      <tr\n                        key={p.id}\n                        className={\n                          canView\n                            ? 'hover:bg-gray-50 cursor-pointer'\n                            : 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                        }\n                        onClick={() => {\n                          if (canView) navigate(`/course/${courseId}/presentation/${p.id}/edit`);\n                        }}\n                      >\n                        <td className=\"px-4 py-2 border-b\">{idx + 1}</td>\n                        <td className=\"px-4 py-2 border-b\">{p.title}</td>\n                        <td className=\"px-4 py-2 border-b\">{p.slideCount || 0}</td>\n                        <td className=\"px-4 py-2 border-b\">{p.createdAt && p.createdAt.toDate ? p.createdAt.toDate().toLocaleDateString() : ''}</td>\n                        <td className=\"px-4 py-2 border-b\">\n                          {isInstructor ? (\n                            <>\n                              <button\n                                onClick={e => { e.stopPropagation(); handleSetLive(p.id); }}\n                                className={`ml-2 px-2 py-1 rounded text-xs font-semibold ${isLive ? 'bg-green-600 text-white' : 'bg-gray-200 text-gray-700 hover:bg-green-100'}`}\n                                title=\"Set as live presentation\"\n                              >\n                                {isLive ? 'Live' : 'Go Live'}\n                              </button>\n                              <button\n                                className=\"text-red-600 hover:text-red-800\"\n                                title=\"Delete presentation\"\n                                onClick={e => { e.stopPropagation(); handleDeletePresentation(p.id); }}\n                              >\n                                <Trash2 className=\"h-5 w-5\" />\n                              </button>\n                            </>\n                          ) : (\n                            <span className=\"text-xs text-gray-400\">View only</span>\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n\n      {/* PowerPoint Import Modal */}\n      {showImportModal && (\n        <PowerPointImport\n          courseId={courseId}\n          onImportComplete={handleImportComplete}\n          onClose={() => setShowImportModal(false)}\n          presentationTitle={newPresentationTitle}\n          ownerId={currentUser && currentUser.uid}\n          onImportRedirect={() => {\n            setShowImportModal(false);\n            fetchPresentations();\n            navigate(`/course/${courseId}`);\n          }}\n        />\n      )}\n\n      {/* Imported Presentation Preview */}\n      {showPreview && importedSlides && (\n        <ImportedPresentationPreview\n          slides={importedSlides}\n          presentationTitle={importedPresentationTitle}\n          onEdit={handleEditImported}\n          onClose={() => {\n            setShowPreview(false);\n            setImportedSlides(null);\n          }}\n        />\n      )}\n\n      {/* Copy Slide Deck Modal */}\n      {showCopyModal && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40\">\n          <div className=\"bg-white rounded shadow-lg p-6 w-full max-w-lg relative\">\n            <button className=\"absolute top-2 right-2 text-gray-500 hover:text-red-600 text-2xl font-bold\" onClick={closeCopyModal}>&times;</button>\n            <h3 className=\"text-lg font-semibold mb-4\">Copy Slide Deck from Another Course</h3>\n            <div className=\"mb-4\">\n              <label className=\"block mb-1 font-medium\">Select a course:</label>\n              <select className=\"input-field w-full\" value={selectedSourceCourse} onChange={handleSourceCourseChange}>\n                <option value=\"\">-- Choose a course --</option>\n                {instructorCourses.map(c => (\n                  <option key={c.id} value={c.id}>{c.name}</option>\n                ))}\n              </select>\n            </div>\n            {sourcePresentations.length > 0 && (\n              <div className=\"mb-4\">\n                <label className=\"block mb-1 font-medium\">Select slide decks to copy:</label>\n                <div className=\"max-h-40 overflow-y-auto border rounded p-2\">\n                  {sourcePresentations.map(p => (\n                    <label key={p.id} className=\"flex items-center mb-1\">\n                      <input\n                        type=\"checkbox\"\n                        className=\"mr-2\"\n                        checked={selectedPresentations.includes(p.id)}\n                        onChange={e => {\n                          if (e.target.checked) setSelectedPresentations(prev => [...prev, p.id]);\n                          else setSelectedPresentations(prev => prev.filter(id => id !== p.id));\n                        }}\n                      />\n                      {p.title}\n                    </label>\n                  ))}\n                </div>\n              </div>\n            )}\n            <div className=\"flex justify-end gap-2\">\n              <button className=\"btn-secondary\" onClick={closeCopyModal} disabled={copying}>Cancel</button>\n              <button className=\"btn-primary\" onClick={handleCopyPresentations} disabled={copying || selectedPresentations.length === 0}>\n                {copying ? 'Copying...' : 'Copy Selected'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction EnrollForm() {\n  const { courseId } = useParams();\n  const { currentUser } = useAuth();\n  const navigate = useNavigate();\n  const [code, setCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const handleEnroll = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(false);\n    try {\n      await CourseService.enrollUserWithCode(courseId, code, currentUser.uid);\n      setSuccess(true);\n      window.location.href = `/course/${courseId}`;\n    } catch (err) {\n      setError(err.message || 'Enrollment failed.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleEnroll} className=\"mt-4\">\n      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Enter Enrollment Code</label>\n      <div className=\"flex items-center space-x-2\">\n        <input\n          type=\"text\"\n          className=\"input-field flex-1\"\n          value={code}\n          onChange={e => setCode(e.target.value)}\n          placeholder=\"Enrollment code\"\n          required\n          disabled={loading}\n        />\n        <button type=\"submit\" className=\"btn-primary\" disabled={loading || !code.trim()}>\n          {loading ? 'Enrolling...' : 'Enroll'}\n        </button>\n      </div>\n      {error && <div className=\"text-red-600 mt-2 text-sm\">{error}</div>}\n      {success && <div className=\"text-green-600 mt-2 text-sm\">Enrolled successfully! Reloading...</div>}\n    </form>\n  );\n}\n\nexport default CourseHome; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}