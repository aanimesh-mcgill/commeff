{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\components\\\\presentations\\\\PowerPointImport.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Upload, FileText, Image, AlertCircle, CheckCircle, Loader, X } from 'lucide-react';\nimport PowerPointImportService from '../../services/PowerPointImportService';\nimport toast from 'react-hot-toast';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { storage } from '../../firebase/config';\nimport PresentationService from '../../services/PresentationService';\nimport { db } from '../../firebase/config';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PowerPointImport = ({\n  courseId,\n  onImportComplete,\n  onClose,\n  presentationId,\n  presentationTitle,\n  ownerId,\n  onImportRedirect\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [importType, setImportType] = useState('image'); // 'image' or 'content'\n  const [isImporting, setIsImporting] = useState(false);\n  const [importProgress, setImportProgress] = useState(0);\n  const [fileInfo, setFileInfo] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // Add new state for image upload\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [imageTitles, setImageTitles] = useState([]);\n  const [debugInfo, setDebugInfo] = useState({\n    instructorId: '',\n    userRole: ''\n  });\n  React.useEffect(() => {\n    async function fetchDebugInfo() {\n      let instructorId = '';\n      let userRole = '';\n      if (courseId) {\n        const courseDoc = await getDoc(doc(db, 'courses', courseId));\n        instructorId = courseDoc.exists() ? courseDoc.data().instructorId : '';\n      }\n      if (ownerId) {\n        const userDoc = await getDoc(doc(db, 'users', ownerId));\n        userRole = userDoc.exists() ? userDoc.data().role : '';\n      }\n      setDebugInfo({\n        instructorId,\n        userRole\n      });\n    }\n    fetchDebugInfo();\n  }, [courseId, ownerId]);\n\n  // Extract order from filename\n  function extractOrderFromFilename(filename) {\n    const match = filename.match(/\\d+/);\n    return match ? parseInt(match[0], 10) : 0;\n  }\n\n  // Handle file selection\n  const handleFileSelect = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    try {\n      // Validate file\n      PowerPointImportService.validateFile(file);\n      setSelectedFile(file);\n      setFileInfo(PowerPointImportService.getFileInfo(file));\n      console.log('[PowerPointImport] File selected:', file.name);\n    } catch (error) {\n      toast.error(error.message);\n      console.error('[PowerPointImport] File validation error:', error);\n    }\n  };\n\n  // Handle image file selection\n  const handleImageFiles = event => {\n    const files = Array.from(event.target.files);\n    const filesWithOrder = files.map(file => ({\n      file,\n      order: extractOrderFromFilename(file.name)\n    }));\n    filesWithOrder.sort((a, b) => a.order - b.order);\n    setSelectedImages(filesWithOrder);\n    setImageTitles(filesWithOrder.map(f => f.file.name));\n  };\n\n  // Handle title change for each image\n  const handleImageTitleChange = (idx, value) => {\n    setImageTitles(titles => {\n      const newTitles = [...titles];\n      newTitles[idx] = value;\n      return newTitles;\n    });\n  };\n\n  // Handle drag and drop for file upload\n  const handleDragOver = event => {\n    event.preventDefault();\n    event.currentTarget.classList.add('border-blue-500', 'bg-blue-50');\n  };\n  const handleDragLeave = event => {\n    event.preventDefault();\n    event.currentTarget.classList.remove('border-blue-500', 'bg-blue-50');\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    event.currentTarget.classList.remove('border-blue-500', 'bg-blue-50');\n    const files = event.dataTransfer.files;\n    if (files.length > 0) {\n      const file = files[0];\n      try {\n        PowerPointImportService.validateFile(file);\n        setSelectedFile(file);\n        setFileInfo(PowerPointImportService.getFileInfo(file));\n        console.log('[PowerPointImport] File dropped:', file.name);\n      } catch (error) {\n        toast.error(error.message);\n        console.error('[PowerPointImport] Drop validation error:', error);\n      }\n    }\n  };\n\n  // Handle import\n  const handleImport = async () => {\n    if (!selectedFile) {\n      toast.error('Please select a PowerPoint file first');\n      return;\n    }\n    setIsImporting(true);\n    setImportProgress(0);\n    try {\n      console.log('[PowerPointImport] Starting import with type:', importType);\n\n      // Simulate progress\n      const progressInterval = setInterval(() => {\n        setImportProgress(prev => {\n          if (prev >= 90) {\n            clearInterval(progressInterval);\n            return 90;\n          }\n          return prev + 10;\n        });\n      }, 200);\n      let result;\n      if (importType === 'image') {\n        result = await PowerPointImportService.convertToImages(selectedFile);\n      } else {\n        result = await PowerPointImportService.extractContent(selectedFile);\n      }\n      clearInterval(progressInterval);\n      setImportProgress(100);\n      console.log('[PowerPointImport] Import completed:', result);\n      toast.success(result.message);\n\n      // Call the completion handler\n      if (onImportComplete) {\n        onImportComplete(result.slides, selectedFile.name);\n      }\n      if (onClose) onClose();\n      if (onImportRedirect) onImportRedirect();\n    } catch (error) {\n      console.error('[PowerPointImport] Import error:', error);\n      toast.error(error.message);\n    } finally {\n      setIsImporting(false);\n      setImportProgress(0);\n    }\n  };\n\n  // Upload images and create slides using new unified structure\n  const handleImageUploadImport = async () => {\n    if (!selectedImages.length) {\n      toast.error('Please select slide images first');\n      return;\n    }\n    setIsImporting(true);\n    setImportProgress(0);\n    try {\n      const slides = [];\n      const presId = presentationId || 'default-presentation';\n      console.log('[PowerPointImport] START Importing images:', {\n        courseId,\n        presId,\n        selectedImages,\n        imageTitles\n      });\n\n      // Create or get presentation\n      let presentation;\n      if (presentationId) {\n        presentation = await PresentationService.getPresentation(courseId, presentationId);\n      } else {\n        // Create new presentation if none exists\n        const docRef = await PresentationService.createPresentation(courseId, presentationTitle || 'Imported Presentation', ownerId);\n        presentation = await PresentationService.getPresentation(courseId, docRef.id);\n      }\n\n      // Process each image\n      for (let i = 0; i < selectedImages.length; i++) {\n        const {\n          file,\n          order\n        } = selectedImages[i];\n        console.log(`[PowerPointImport] [${i}] Preparing to upload file:`, file, 'Order:', order);\n        let imageUrl;\n        // Upload to storage\n        try {\n          const storageRef = ref(storage, `slides/${courseId}/${order}-${file.name}`);\n          console.log(`[PowerPointImport] [${i}] storageRef:`, storageRef);\n          const uploadResult = await uploadBytes(storageRef, file);\n          console.log(`[PowerPointImport] [${i}] uploadResult:`, uploadResult);\n          imageUrl = await getDownloadURL(storageRef);\n          console.log(`[PowerPointImport] [${i}] imageUrl:`, imageUrl);\n        } catch (uploadErr) {\n          console.error(`[PowerPointImport] [${i}] ERROR during upload:`, uploadErr, {\n            file,\n            order\n          });\n          throw uploadErr;\n        }\n\n        // Create slide data for unified structure\n        const slideData = {\n          title: imageTitles[i] || file.name,\n          type: 'imported',\n          content: {\n            imageUrl: imageUrl,\n            text: ''\n          },\n          order: order - 1 // Convert to 0-based index\n        };\n\n        // Add slide to presentation\n        try {\n          const newSlide = await PresentationService.addSlide(courseId, presentation.id, slideData);\n          console.log(`[PowerPointImport] [${i}] Slide added to presentation:`, newSlide);\n        } catch (slideErr) {\n          console.error(`[PowerPointImport] [${i}] ERROR adding slide:`, slideErr, {\n            slideData\n          });\n          throw slideErr;\n        }\n        slides.push({\n          imageUrl,\n          title: imageTitles[i] || file.name,\n          order\n        });\n        setImportProgress(Math.round((i + 1) / selectedImages.length * 100));\n      }\n      toast.success('Slides imported and saved!');\n      if (onImportComplete) onImportComplete(slides, 'image-upload');\n      if (onClose) onClose();\n      if (onImportRedirect) onImportRedirect();\n    } catch (error) {\n      toast.error(error.message);\n      console.error('[PowerPointImport] FINAL ERROR in handleImageUploadImport:', error, {\n        courseId,\n        presentationId,\n        selectedImages,\n        imageTitles\n      });\n    } finally {\n      setIsImporting(false);\n      setImportProgress(0);\n      console.log('[PowerPointImport] FINISHED handleImageUploadImport');\n    }\n  };\n  const handleRemoveFile = () => {\n    setSelectedFile(null);\n    setFileInfo(null);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-yellow-50 border border-yellow-300 rounded p-2 mb-2 text-xs text-yellow-900\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Debug Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"User UID: \", ownerId || '(none)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"User Role: \", debugInfo.userRole || '(none)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Course ID: \", courseId || '(none)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Course Instructor ID: \", debugInfo.instructorId || '(none)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between p-6 border-b\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold text-gray-900\",\n          children: \"Import PowerPoint Presentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"text-gray-400 hover:text-gray-600 transition-colors\",\n          disabled: isImporting,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            className: \"h-6 w-6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-3\",\n            children: \"Import Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setImportType('image'),\n              className: `p-4 border-2 rounded-lg text-left transition-all ${importType === 'image' ? 'border-blue-500 bg-blue-50 text-blue-700' : 'border-gray-200 hover:border-gray-300'}`,\n              disabled: isImporting,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(Image, {\n                  className: \"h-5 w-5 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: \"Convert to Images\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Each slide becomes an image. Perfect for preserving exact layout and design.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setImportType('content'),\n              className: `p-4 border-2 rounded-lg text-left transition-all ${importType === 'content' ? 'border-blue-500 bg-blue-50 text-blue-700' : 'border-gray-200 hover:border-gray-300'}`,\n              disabled: isImporting,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"h-5 w-5 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-medium\",\n                  children: \"Extract Content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-gray-600\",\n                children: \"Extract text and images as editable elements. Allows for further customization.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-3\",\n            children: \"Upload PowerPoint File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), !selectedFile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors cursor-pointer\",\n            onDragOver: handleDragOver,\n            onDragLeave: handleDragLeave,\n            onDrop: handleDrop,\n            onClick: () => {\n              var _fileInputRef$current;\n              return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n            },\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"h-12 w-12 text-gray-400 mx-auto mb-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-lg font-medium text-gray-900 mb-2\",\n              children: \"Drop your PowerPoint file here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-4\",\n              children: \"or click to browse files\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Supports .pptx and .ppt files (max 50MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileInputRef,\n              type: \"file\",\n              accept: \".pptx,.ppt\",\n              onChange: handleFileSelect,\n              className: \"hidden\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border border-gray-200 rounded-lg p-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(FileText, {\n                  className: \"h-8 w-8 text-blue-500 mr-3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"font-medium text-gray-900\",\n                    children: fileInfo.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-600\",\n                    children: [fileInfo.size, \" \\u2022 \", fileInfo.lastModified]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRemoveFile,\n                className: \"text-gray-400 hover:text-gray-600\",\n                disabled: isImporting,\n                children: /*#__PURE__*/_jsxDEV(X, {\n                  className: \"h-5 w-5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-medium text-gray-900 mb-3\",\n            children: \"Upload Slide Images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            multiple: true,\n            onChange: handleImageFiles,\n            disabled: isImporting,\n            className: \"mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this), selectedImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: [selectedImages.map((img, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: URL.createObjectURL(img.file),\n                alt: `Slide ${img.order}`,\n                className: \"w-24 h-16 object-contain border rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: imageTitles[idx] || '',\n                onChange: e => handleImageTitleChange(idx, e.target.value),\n                placeholder: `Title for Slide ${img.order}`,\n                className: \"border rounded px-2 py-1 flex-1\",\n                disabled: isImporting\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500\",\n                children: [\"Order: \", img.order]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleImageUploadImport,\n              className: \"btn-primary mt-4 w-full\",\n              disabled: isImporting,\n              children: isImporting ? 'Importing...' : 'Import Presentation'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 17\n            }, this), isImporting && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-gray-200 rounded h-2 mt-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-500 h-2 rounded\",\n                style: {\n                  width: `${importProgress}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), isImporting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-700\",\n              children: \"Processing...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm text-gray-500\",\n              children: [importProgress, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full bg-gray-200 rounded-full h-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n              style: {\n                width: `${importProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: importType === 'image' ? 'Converting slides to images...' : 'Extracting content from slides...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-50 border border-blue-200 rounded-lg p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n              className: \"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-blue-900 mb-1\",\n                children: importType === 'image' ? 'Image Conversion Mode' : 'Content Extraction Mode'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm text-blue-700\",\n                children: importType === 'image' ? 'Each slide will be converted to a high-quality image, preserving the exact layout and design of your PowerPoint presentation.' : 'Text and images will be extracted as editable elements, allowing you to modify content after import.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-end space-x-3 p-6 border-t bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\",\n          disabled: isImporting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleImport,\n          disabled: !selectedFile || isImporting,\n          className: \"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center\",\n          children: isImporting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Loader, {\n              className: \"h-4 w-4 mr-2 animate-spin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), \"Importing...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"h-4 w-4 mr-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), \"Import Presentation\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n};\n_s(PowerPointImport, \"Vpbd0UydBdadSf+ddHqBQRNpT8A=\");\n_c = PowerPointImport;\nexport default PowerPointImport;\nvar _c;\n$RefreshReg$(_c, \"PowerPointImport\");","map":{"version":3,"names":["React","useState","useRef","Upload","FileText","Image","AlertCircle","CheckCircle","Loader","X","PowerPointImportService","toast","ref","uploadBytes","getDownloadURL","storage","PresentationService","db","doc","getDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","PowerPointImport","courseId","onImportComplete","onClose","presentationId","presentationTitle","ownerId","onImportRedirect","_s","selectedFile","setSelectedFile","importType","setImportType","isImporting","setIsImporting","importProgress","setImportProgress","fileInfo","setFileInfo","fileInputRef","selectedImages","setSelectedImages","imageTitles","setImageTitles","debugInfo","setDebugInfo","instructorId","userRole","useEffect","fetchDebugInfo","courseDoc","exists","data","userDoc","role","extractOrderFromFilename","filename","match","parseInt","handleFileSelect","event","file","target","files","validateFile","getFileInfo","console","log","name","error","message","handleImageFiles","Array","from","filesWithOrder","map","order","sort","a","b","f","handleImageTitleChange","idx","value","titles","newTitles","handleDragOver","preventDefault","currentTarget","classList","add","handleDragLeave","remove","handleDrop","dataTransfer","length","handleImport","progressInterval","setInterval","prev","clearInterval","result","convertToImages","extractContent","success","slides","handleImageUploadImport","presId","presentation","getPresentation","docRef","createPresentation","id","i","imageUrl","storageRef","uploadResult","uploadErr","slideData","title","type","content","text","newSlide","addSlide","slideErr","push","Math","round","handleRemoveFile","current","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","onDragOver","onDragLeave","onDrop","_fileInputRef$current","click","accept","onChange","size","lastModified","multiple","img","src","URL","createObjectURL","alt","e","placeholder","style","width","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/components/presentations/PowerPointImport.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Upload, FileText, Image, AlertCircle, CheckCircle, Loader, X } from 'lucide-react';\r\nimport PowerPointImportService from '../../services/PowerPointImportService';\r\nimport toast from 'react-hot-toast';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\nimport { storage } from '../../firebase/config';\r\nimport PresentationService from '../../services/PresentationService';\r\nimport { db } from '../../firebase/config';\r\nimport { doc, getDoc } from 'firebase/firestore';\r\n\r\nconst PowerPointImport = ({ courseId, onImportComplete, onClose, presentationId, presentationTitle, ownerId, onImportRedirect }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [importType, setImportType] = useState('image'); // 'image' or 'content'\r\n  const [isImporting, setIsImporting] = useState(false);\r\n  const [importProgress, setImportProgress] = useState(0);\r\n  const [fileInfo, setFileInfo] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Add new state for image upload\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n  const [imageTitles, setImageTitles] = useState([]);\r\n  const [debugInfo, setDebugInfo] = useState({ instructorId: '', userRole: '' });\r\n\r\n  React.useEffect(() => {\r\n    async function fetchDebugInfo() {\r\n      let instructorId = '';\r\n      let userRole = '';\r\n      if (courseId) {\r\n        const courseDoc = await getDoc(doc(db, 'courses', courseId));\r\n        instructorId = courseDoc.exists() ? courseDoc.data().instructorId : '';\r\n      }\r\n      if (ownerId) {\r\n        const userDoc = await getDoc(doc(db, 'users', ownerId));\r\n        userRole = userDoc.exists() ? userDoc.data().role : '';\r\n      }\r\n      setDebugInfo({ instructorId, userRole });\r\n    }\r\n    fetchDebugInfo();\r\n  }, [courseId, ownerId]);\r\n\r\n  // Extract order from filename\r\n  function extractOrderFromFilename(filename) {\r\n    const match = filename.match(/\\d+/);\r\n    return match ? parseInt(match[0], 10) : 0;\r\n  }\r\n\r\n  // Handle file selection\r\n  const handleFileSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    try {\r\n      // Validate file\r\n      PowerPointImportService.validateFile(file);\r\n      \r\n      setSelectedFile(file);\r\n      setFileInfo(PowerPointImportService.getFileInfo(file));\r\n      console.log('[PowerPointImport] File selected:', file.name);\r\n      \r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      console.error('[PowerPointImport] File validation error:', error);\r\n    }\r\n  };\r\n\r\n  // Handle image file selection\r\n  const handleImageFiles = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    const filesWithOrder = files.map(file => ({\r\n      file,\r\n      order: extractOrderFromFilename(file.name)\r\n    }));\r\n    filesWithOrder.sort((a, b) => a.order - b.order);\r\n    setSelectedImages(filesWithOrder);\r\n    setImageTitles(filesWithOrder.map(f => f.file.name));\r\n  };\r\n\r\n  // Handle title change for each image\r\n  const handleImageTitleChange = (idx, value) => {\r\n    setImageTitles(titles => {\r\n      const newTitles = [...titles];\r\n      newTitles[idx] = value;\r\n      return newTitles;\r\n    });\r\n  };\r\n\r\n  // Handle drag and drop for file upload\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.currentTarget.classList.add('border-blue-500', 'bg-blue-50');\r\n  };\r\n\r\n  const handleDragLeave = (event) => {\r\n    event.preventDefault();\r\n    event.currentTarget.classList.remove('border-blue-500', 'bg-blue-50');\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    event.currentTarget.classList.remove('border-blue-500', 'bg-blue-50');\r\n    \r\n    const files = event.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      const file = files[0];\r\n      try {\r\n        PowerPointImportService.validateFile(file);\r\n        setSelectedFile(file);\r\n        setFileInfo(PowerPointImportService.getFileInfo(file));\r\n        console.log('[PowerPointImport] File dropped:', file.name);\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n        console.error('[PowerPointImport] Drop validation error:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle import\r\n  const handleImport = async () => {\r\n    if (!selectedFile) {\r\n      toast.error('Please select a PowerPoint file first');\r\n      return;\r\n    }\r\n\r\n    setIsImporting(true);\r\n    setImportProgress(0);\r\n\r\n    try {\r\n      console.log('[PowerPointImport] Starting import with type:', importType);\r\n      \r\n      // Simulate progress\r\n      const progressInterval = setInterval(() => {\r\n        setImportProgress(prev => {\r\n          if (prev >= 90) {\r\n            clearInterval(progressInterval);\r\n            return 90;\r\n          }\r\n          return prev + 10;\r\n        });\r\n      }, 200);\r\n\r\n      let result;\r\n      if (importType === 'image') {\r\n        result = await PowerPointImportService.convertToImages(selectedFile);\r\n      } else {\r\n        result = await PowerPointImportService.extractContent(selectedFile);\r\n      }\r\n\r\n      clearInterval(progressInterval);\r\n      setImportProgress(100);\r\n\r\n      console.log('[PowerPointImport] Import completed:', result);\r\n      toast.success(result.message);\r\n\r\n      // Call the completion handler\r\n      if (onImportComplete) {\r\n        onImportComplete(result.slides, selectedFile.name);\r\n      }\r\n      if (onClose) onClose();\r\n      if (onImportRedirect) onImportRedirect();\r\n\r\n    } catch (error) {\r\n      console.error('[PowerPointImport] Import error:', error);\r\n      toast.error(error.message);\r\n    } finally {\r\n      setIsImporting(false);\r\n      setImportProgress(0);\r\n    }\r\n  };\r\n\r\n  // Upload images and create slides using new unified structure\r\n  const handleImageUploadImport = async () => {\r\n    if (!selectedImages.length) {\r\n      toast.error('Please select slide images first');\r\n      return;\r\n    }\r\n    setIsImporting(true);\r\n    setImportProgress(0);\r\n    try {\r\n      const slides = [];\r\n      const presId = presentationId || 'default-presentation';\r\n      console.log('[PowerPointImport] START Importing images:', {\r\n        courseId,\r\n        presId,\r\n        selectedImages,\r\n        imageTitles\r\n      });\r\n\r\n      // Create or get presentation\r\n      let presentation;\r\n      if (presentationId) {\r\n        presentation = await PresentationService.getPresentation(courseId, presentationId);\r\n      } else {\r\n        // Create new presentation if none exists\r\n        const docRef = await PresentationService.createPresentation(courseId, presentationTitle || 'Imported Presentation', ownerId);\r\n        presentation = await PresentationService.getPresentation(courseId, docRef.id);\r\n      }\r\n\r\n      // Process each image\r\n      for (let i = 0; i < selectedImages.length; i++) {\r\n        const { file, order } = selectedImages[i];\r\n        console.log(`[PowerPointImport] [${i}] Preparing to upload file:`, file, 'Order:', order);\r\n        \r\n        let imageUrl;\r\n        // Upload to storage\r\n        try {\r\n          const storageRef = ref(storage, `slides/${courseId}/${order}-${file.name}`);\r\n          console.log(`[PowerPointImport] [${i}] storageRef:`, storageRef);\r\n          const uploadResult = await uploadBytes(storageRef, file);\r\n          console.log(`[PowerPointImport] [${i}] uploadResult:`, uploadResult);\r\n          imageUrl = await getDownloadURL(storageRef);\r\n          console.log(`[PowerPointImport] [${i}] imageUrl:`, imageUrl);\r\n        } catch (uploadErr) {\r\n          console.error(`[PowerPointImport] [${i}] ERROR during upload:`, uploadErr, { file, order });\r\n          throw uploadErr;\r\n        }\r\n\r\n        // Create slide data for unified structure\r\n        const slideData = {\r\n          title: imageTitles[i] || file.name,\r\n          type: 'imported',\r\n          content: {\r\n            imageUrl: imageUrl,\r\n            text: ''\r\n          },\r\n          order: order - 1 // Convert to 0-based index\r\n        };\r\n\r\n        // Add slide to presentation\r\n        try {\r\n          const newSlide = await PresentationService.addSlide(courseId, presentation.id, slideData);\r\n          console.log(`[PowerPointImport] [${i}] Slide added to presentation:`, newSlide);\r\n        } catch (slideErr) {\r\n          console.error(`[PowerPointImport] [${i}] ERROR adding slide:`, slideErr, { slideData });\r\n          throw slideErr;\r\n        }\r\n\r\n        slides.push({\r\n          imageUrl,\r\n          title: imageTitles[i] || file.name,\r\n          order\r\n        });\r\n        setImportProgress(Math.round(((i + 1) / selectedImages.length) * 100));\r\n      }\r\n      \r\n      toast.success('Slides imported and saved!');\r\n      if (onImportComplete) onImportComplete(slides, 'image-upload');\r\n      if (onClose) onClose();\r\n      if (onImportRedirect) onImportRedirect();\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      console.error('[PowerPointImport] FINAL ERROR in handleImageUploadImport:', error, {\r\n        courseId,\r\n        presentationId,\r\n        selectedImages,\r\n        imageTitles\r\n      });\r\n    } finally {\r\n      setIsImporting(false);\r\n      setImportProgress(0);\r\n      console.log('[PowerPointImport] FINISHED handleImageUploadImport');\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = () => {\r\n    setSelectedFile(null);\r\n    setFileInfo(null);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n        {/* Debug Panel */}\r\n        <div className=\"bg-yellow-50 border border-yellow-300 rounded p-2 mb-2 text-xs text-yellow-900\">\r\n          <div><b>Debug Info</b></div>\r\n          <div>User UID: {ownerId || '(none)'}</div>\r\n          <div>User Role: {debugInfo.userRole || '(none)'}</div>\r\n          <div>Course ID: {courseId || '(none)'}</div>\r\n          <div>Course Instructor ID: {debugInfo.instructorId || '(none)'}</div>\r\n        </div>\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">Import PowerPoint Presentation</h2>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-400 hover:text-gray-600 transition-colors\"\r\n            disabled={isImporting}\r\n          >\r\n            <X className=\"h-6 w-6\" />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6 space-y-6\">\r\n          {/* Import Type Selection */}\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Import Method</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <button\r\n                onClick={() => setImportType('image')}\r\n                className={`p-4 border-2 rounded-lg text-left transition-all ${\r\n                  importType === 'image'\r\n                    ? 'border-blue-500 bg-blue-50 text-blue-700'\r\n                    : 'border-gray-200 hover:border-gray-300'\r\n                }`}\r\n                disabled={isImporting}\r\n              >\r\n                <div className=\"flex items-center mb-2\">\r\n                  <Image className=\"h-5 w-5 mr-2\" />\r\n                  <span className=\"font-medium\">Convert to Images</span>\r\n                </div>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Each slide becomes an image. Perfect for preserving exact layout and design.\r\n                </p>\r\n              </button>\r\n\r\n              <button\r\n                onClick={() => setImportType('content')}\r\n                className={`p-4 border-2 rounded-lg text-left transition-all ${\r\n                  importType === 'content'\r\n                    ? 'border-blue-500 bg-blue-50 text-blue-700'\r\n                    : 'border-gray-200 hover:border-gray-300'\r\n                }`}\r\n                disabled={isImporting}\r\n              >\r\n                <div className=\"flex items-center mb-2\">\r\n                  <FileText className=\"h-5 w-5 mr-2\" />\r\n                  <span className=\"font-medium\">Extract Content</span>\r\n                </div>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Extract text and images as editable elements. Allows for further customization.\r\n                </p>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* File Upload Area */}\r\n          <div>\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Upload PowerPoint File</h3>\r\n            \r\n            {!selectedFile ? (\r\n              <div\r\n                className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors cursor-pointer\"\r\n                onDragOver={handleDragOver}\r\n                onDragLeave={handleDragLeave}\r\n                onDrop={handleDrop}\r\n                onClick={() => fileInputRef.current?.click()}\r\n              >\r\n                <Upload className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                <p className=\"text-lg font-medium text-gray-900 mb-2\">\r\n                  Drop your PowerPoint file here\r\n                </p>\r\n                <p className=\"text-gray-600 mb-4\">\r\n                  or click to browse files\r\n                </p>\r\n                <p className=\"text-sm text-gray-500\">\r\n                  Supports .pptx and .ppt files (max 50MB)\r\n                </p>\r\n                <input\r\n                  ref={fileInputRef}\r\n                  type=\"file\"\r\n                  accept=\".pptx,.ppt\"\r\n                  onChange={handleFileSelect}\r\n                  className=\"hidden\"\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"border border-gray-200 rounded-lg p-4\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div className=\"flex items-center\">\r\n                    <FileText className=\"h-8 w-8 text-blue-500 mr-3\" />\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900\">{fileInfo.name}</p>\r\n                      <p className=\"text-sm text-gray-600\">\r\n                        {fileInfo.size} • {fileInfo.lastModified}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={handleRemoveFile}\r\n                    className=\"text-gray-400 hover:text-gray-600\"\r\n                    disabled={isImporting}\r\n                  >\r\n                    <X className=\"h-5 w-5\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Image Upload Area */}\r\n          <div className=\"mb-6\">\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Upload Slide Images</h3>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              multiple\r\n              onChange={handleImageFiles}\r\n              disabled={isImporting}\r\n              className=\"mb-4\"\r\n            />\r\n            {selectedImages.length > 0 && (\r\n              <div className=\"space-y-4\">\r\n                {selectedImages.map((img, idx) => (\r\n                  <div key={idx} className=\"flex items-center space-x-4\">\r\n                    <img src={URL.createObjectURL(img.file)} alt={`Slide ${img.order}`} className=\"w-24 h-16 object-contain border rounded\" />\r\n                    <input\r\n                      type=\"text\"\r\n                      value={imageTitles[idx] || ''}\r\n                      onChange={e => handleImageTitleChange(idx, e.target.value)}\r\n                      placeholder={`Title for Slide ${img.order}`}\r\n                      className=\"border rounded px-2 py-1 flex-1\"\r\n                      disabled={isImporting}\r\n                    />\r\n                    <span className=\"text-gray-500\">Order: {img.order}</span>\r\n                  </div>\r\n                ))}\r\n                <button\r\n                  onClick={handleImageUploadImport}\r\n                  className=\"btn-primary mt-4 w-full\"\r\n                  disabled={isImporting}\r\n                >\r\n                  {isImporting ? 'Importing...' : 'Import Presentation'}\r\n                </button>\r\n                {isImporting && (\r\n                  <div className=\"w-full bg-gray-200 rounded h-2 mt-2\">\r\n                    <div className=\"bg-blue-500 h-2 rounded\" style={{ width: `${importProgress}%` }}></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Import Progress */}\r\n          {isImporting && (\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm font-medium text-gray-700\">Processing...</span>\r\n                <span className=\"text-sm text-gray-500\">{importProgress}%</span>\r\n              </div>\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n                <div\r\n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                  style={{ width: `${importProgress}%` }}\r\n                ></div>\r\n              </div>\r\n              <p className=\"text-sm text-gray-600\">\r\n                {importType === 'image' \r\n                  ? 'Converting slides to images...' \r\n                  : 'Extracting content from slides...'\r\n                }\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          {/* Info Box */}\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n            <div className=\"flex items-start\">\r\n              <AlertCircle className=\"h-5 w-5 text-blue-500 mr-2 mt-0.5 flex-shrink-0\" />\r\n              <div>\r\n                <p className=\"text-sm font-medium text-blue-900 mb-1\">\r\n                  {importType === 'image' ? 'Image Conversion Mode' : 'Content Extraction Mode'}\r\n                </p>\r\n                <p className=\"text-sm text-blue-700\">\r\n                  {importType === 'image' \r\n                    ? 'Each slide will be converted to a high-quality image, preserving the exact layout and design of your PowerPoint presentation.'\r\n                    : 'Text and images will be extracted as editable elements, allowing you to modify content after import.'\r\n                  }\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"flex items-center justify-end space-x-3 p-6 border-t bg-gray-50\">\r\n          <button\r\n            onClick={onClose}\r\n            className=\"px-4 py-2 text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\r\n            disabled={isImporting}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={handleImport}\r\n            disabled={!selectedFile || isImporting}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors flex items-center\"\r\n          >\r\n            {isImporting ? (\r\n              <>\r\n                <Loader className=\"h-4 w-4 mr-2 animate-spin\" />\r\n                Importing...\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Upload className=\"h-4 w-4 mr-2\" />\r\n                Import Presentation\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PowerPointImport; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}