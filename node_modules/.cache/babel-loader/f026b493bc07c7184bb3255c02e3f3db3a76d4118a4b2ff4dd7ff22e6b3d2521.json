{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanime\\\\commeff3\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut, onAuthStateChanged, signInWithPopup, sendPasswordResetEmail, signInAnonymously } from 'firebase/auth';\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\nimport { auth, db, googleProvider } from '../firebase/config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userProfile, setUserProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Sign up with email and password\n  const signup = async (email, password, role, displayName) => {\n    try {\n      const result = await createUserWithEmailAndPassword(auth, email, password);\n\n      // Create user profile in Firestore\n      await setDoc(doc(db, 'users', result.user.uid), {\n        uid: result.user.uid,\n        email: result.user.email,\n        displayName: displayName || result.user.email.split('@')[0],\n        role: role,\n        // 'instructor' or 'student'\n        createdAt: new Date().toISOString(),\n        photoURL: result.user.photoURL || null\n      });\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Sign in with email and password\n  const login = async (email, password) => {\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  // Sign in with Google\n  const signInWithGoogle = async () => {\n    try {\n      const result = await signInWithPopup(auth, googleProvider);\n\n      // Check if user profile exists\n      const userDoc = await getDoc(doc(db, 'users', result.user.uid));\n      if (!userDoc.exists()) {\n        // Create user profile for new Google users\n        await setDoc(doc(db, 'users', result.user.uid), {\n          uid: result.user.uid,\n          email: result.user.email,\n          displayName: result.user.displayName,\n          role: 'student',\n          // Default role for Google sign-in\n          createdAt: new Date().toISOString(),\n          photoURL: result.user.photoURL\n        });\n      }\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Sign out\n  const logout = () => {\n    return signOut(auth);\n  };\n\n  // Reset password\n  const resetPassword = email => {\n    return sendPasswordResetEmail(auth, email);\n  };\n\n  // Update user profile\n  const updateProfile = async updates => {\n    try {\n      await setDoc(doc(db, 'users', currentUser.uid), updates, {\n        merge: true\n      });\n      setUserProfile(prev => ({\n        ...prev,\n        ...updates\n      }));\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Get user profile from Firestore\n  const getUserProfile = async uid => {\n    try {\n      const userDoc = await getDoc(doc(db, 'users', uid));\n      if (userDoc.exists()) {\n        return userDoc.data();\n      }\n      return null;\n    } catch (error) {\n      console.error('Error getting user profile:', error);\n      return null;\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async user => {\n      setCurrentUser(user);\n      if (user) {\n        const profile = await getUserProfile(user.uid);\n        setUserProfile(profile);\n      } else {\n        setUserProfile(null);\n        // Automatically sign in anonymously if not authenticated\n        try {\n          await signInAnonymously(auth);\n        } catch (err) {\n          console.error('[AuthContext] Anonymous sign-in failed:', err);\n        }\n      }\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    userProfile,\n    signup,\n    login,\n    signInWithGoogle,\n    logout,\n    resetPassword,\n    updateProfile,\n    getUserProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"bTkDkafiPCgjmH9o6GheLT4aXjI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","onAuthStateChanged","signInWithPopup","sendPasswordResetEmail","signInAnonymously","doc","setDoc","getDoc","auth","db","googleProvider","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","userProfile","setUserProfile","loading","setLoading","signup","email","password","role","displayName","result","user","uid","split","createdAt","Date","toISOString","photoURL","error","login","signInWithGoogle","userDoc","exists","logout","resetPassword","updateProfile","updates","merge","prev","getUserProfile","data","console","unsubscribe","profile","err","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aanime/commeff3/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { \r\n  signInWithEmailAndPassword, \r\n  createUserWithEmailAndPassword, \r\n  signOut, \r\n  onAuthStateChanged,\r\n  signInWithPopup,\r\n  sendPasswordResetEmail,\r\n  signInAnonymously\r\n} from 'firebase/auth';\r\nimport { doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport { auth, db, googleProvider } from '../firebase/config';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Sign up with email and password\r\n  const signup = async (email, password, role, displayName) => {\r\n    try {\r\n      const result = await createUserWithEmailAndPassword(auth, email, password);\r\n      \r\n      // Create user profile in Firestore\r\n      await setDoc(doc(db, 'users', result.user.uid), {\r\n        uid: result.user.uid,\r\n        email: result.user.email,\r\n        displayName: displayName || result.user.email.split('@')[0],\r\n        role: role, // 'instructor' or 'student'\r\n        createdAt: new Date().toISOString(),\r\n        photoURL: result.user.photoURL || null\r\n      });\r\n\r\n      return result;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Sign in with email and password\r\n  const login = async (email, password) => {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  };\r\n\r\n  // Sign in with Google\r\n  const signInWithGoogle = async () => {\r\n    try {\r\n      const result = await signInWithPopup(auth, googleProvider);\r\n      \r\n      // Check if user profile exists\r\n      const userDoc = await getDoc(doc(db, 'users', result.user.uid));\r\n      \r\n      if (!userDoc.exists()) {\r\n        // Create user profile for new Google users\r\n        await setDoc(doc(db, 'users', result.user.uid), {\r\n          uid: result.user.uid,\r\n          email: result.user.email,\r\n          displayName: result.user.displayName,\r\n          role: 'student', // Default role for Google sign-in\r\n          createdAt: new Date().toISOString(),\r\n          photoURL: result.user.photoURL\r\n        });\r\n      }\r\n\r\n      return result;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Sign out\r\n  const logout = () => {\r\n    return signOut(auth);\r\n  };\r\n\r\n  // Reset password\r\n  const resetPassword = (email) => {\r\n    return sendPasswordResetEmail(auth, email);\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (updates) => {\r\n    try {\r\n      await setDoc(doc(db, 'users', currentUser.uid), updates, { merge: true });\r\n      setUserProfile(prev => ({ ...prev, ...updates }));\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get user profile from Firestore\r\n  const getUserProfile = async (uid) => {\r\n    try {\r\n      const userDoc = await getDoc(doc(db, 'users', uid));\r\n      if (userDoc.exists()) {\r\n        return userDoc.data();\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error getting user profile:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n      setCurrentUser(user);\r\n      \r\n      if (user) {\r\n        const profile = await getUserProfile(user.uid);\r\n        setUserProfile(profile);\r\n      } else {\r\n        setUserProfile(null);\r\n        // Automatically sign in anonymously if not authenticated\r\n        try {\r\n          await signInAnonymously(auth);\r\n        } catch (err) {\r\n          console.error('[AuthContext] Anonymous sign-in failed:', err);\r\n        }\r\n      }\r\n      \r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    userProfile,\r\n    signup,\r\n    login,\r\n    signInWithGoogle,\r\n    logout,\r\n    resetPassword,\r\n    updateProfile,\r\n    getUserProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}